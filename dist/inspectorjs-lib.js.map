{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 468c5f9a0dc136badaf1","webpack:///./src/demuxer/mp4/atoms/atom.ts","webpack:///./src/utils/byte-parser-utils.ts","webpack:///./src/demuxer/track.ts","webpack:///./src/demuxer/ts/payload/payload-reader.ts","webpack:///./src/demuxer/frame.ts","webpack:///./src/utils/bit-reader.ts","webpack:///./src/demuxer/mp4/atoms/helpers/video-atom.ts","webpack:///./src/codecs/h264/sps-parser.ts","webpack:///./src/index.ts","webpack:///./src/codecs/h264/nal-units.ts","webpack:///./src/demuxer/mp4/atoms/avc1.ts","webpack:///./src/demuxer/mp4/atoms/avcC.ts","webpack:///./src/demuxer/mp4/atoms/dref.ts","webpack:///./src/demuxer/mp4/atoms/emsg.ts","webpack:///./src/demuxer/mp4/atoms/esds.ts","webpack:///./src/demuxer/mp4/atoms/ftyp.ts","webpack:///./src/demuxer/mp4/atoms/hdlr.ts","webpack:///./src/demuxer/mp4/atoms/helpers/audio-atom.ts","webpack:///./src/demuxer/mp4/atoms/hev1.ts","webpack:///./src/demuxer/mp4/atoms/hvc1.ts","webpack:///./src/demuxer/mp4/atoms/hvcC.ts","webpack:///./src/demuxer/mp4/atoms/index.ts","webpack:///./src/demuxer/mp4/atoms/mdat.ts","webpack:///./src/demuxer/mp4/atoms/mdhd.ts","webpack:///./src/demuxer/mp4/atoms/mfhd.ts","webpack:///./src/demuxer/mp4/atoms/mp4a.ts","webpack:///./src/demuxer/mp4/atoms/mvhd.ts","webpack:///./src/demuxer/mp4/atoms/pssh.ts","webpack:///./src/demuxer/mp4/atoms/sidx.ts","webpack:///./src/demuxer/mp4/atoms/smhd.ts","webpack:///./src/demuxer/mp4/atoms/stco.ts","webpack:///./src/demuxer/mp4/atoms/stsc.ts","webpack:///./src/demuxer/mp4/atoms/stsd.ts","webpack:///./src/demuxer/mp4/atoms/stsz.ts","webpack:///./src/demuxer/mp4/atoms/stts.ts","webpack:///./src/demuxer/mp4/atoms/styp.ts","webpack:///./src/demuxer/mp4/atoms/tfdt.ts","webpack:///./src/demuxer/mp4/atoms/tfhd.ts","webpack:///./src/demuxer/mp4/atoms/tkhd.ts","webpack:///./src/demuxer/mp4/atoms/trex.ts","webpack:///./src/demuxer/mp4/atoms/trun.ts","webpack:///./src/demuxer/mp4/atoms/vmhd.ts","webpack:///./src/demuxer/mp4/mp4-demuxer.ts","webpack:///./src/demuxer/mp4/mp4-track.ts","webpack:///./src/demuxer/ts/mpegts-demuxer.ts","webpack:///./src/demuxer/ts/payload/adts-reader.ts","webpack:///./src/demuxer/ts/payload/h264-reader.ts","webpack:///./src/demuxer/ts/payload/id3-reader.ts","webpack:///./src/demuxer/ts/payload/mpeg-reader.ts","webpack:///./src/demuxer/ts/payload/unknown-reader.ts","webpack:///./src/demuxer/ts/pes-reader.ts","webpack:///./src/demuxer/ts/ts-track.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;AChEA;IAkFI,cAAoB,IAAY,EAAS,IAAY;QAAjC,SAAI,GAAJ,IAAI,CAAQ;QAAS,SAAI,GAAJ,IAAI,CAAQ;IACrD,CAAC;IAEa,mBAAc,GAA5B,UAA6B,IAAY;QACrC,MAAM,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,IAAI,IAAI,KAAK,IAAI,CAAC,IAAI,IAAI,IAAI,KAAK,IAAI,CAAC,IAAI;eAC9D,IAAI,KAAK,IAAI,CAAC,IAAI,IAAI,IAAI,KAAK,IAAI,CAAC,IAAI,IAAI,IAAI,KAAK,IAAI,CAAC,IAAI;eAC9D,IAAI,KAAK,IAAI,CAAC,IAAI,IAAI,IAAI,KAAK,IAAI,CAAC,IAAI,IAAI,IAAI,KAAK,IAAI,CAAC,IAAI;eAC9D,IAAI,KAAK,IAAI,CAAC,IAAI,IAAI,IAAI,KAAK,IAAI,CAAC,IAAI,IAAI,IAAI,KAAK,IAAI,CAAC,IAAI;eAC9D,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC;IAC9B,CAAC;IA1Fa,SAAI,GAAW,MAAM,CAAC;IACtB,SAAI,GAAW,MAAM,CAAC;IACtB,SAAI,GAAW,MAAM,CAAC;IACtB,SAAI,GAAW,MAAM,CAAC;IACtB,SAAI,GAAW,MAAM,CAAC;IACtB,SAAI,GAAW,MAAM,CAAC;IACtB,SAAI,GAAW,MAAM,CAAC;IACtB,SAAI,GAAW,MAAM,CAAC;IACtB,SAAI,GAAW,MAAM,CAAC;IACtB,SAAI,GAAW,MAAM,CAAC;IACtB,SAAI,GAAW,MAAM,CAAC;IACtB,SAAI,GAAW,MAAM,CAAC;IACtB,SAAI,GAAW,MAAM,CAAC;IACtB,SAAI,GAAW,MAAM,CAAC;IACtB,SAAI,GAAW,MAAM,CAAC;IACtB,SAAI,GAAW,MAAM,CAAC;IACtB,SAAI,GAAW,MAAM,CAAC;IACtB,SAAI,GAAW,MAAM,CAAC;IACtB,SAAI,GAAW,MAAM,CAAC;IACtB,SAAI,GAAW,MAAM,CAAC;IACtB,SAAI,GAAW,MAAM,CAAC;IACtB,SAAI,GAAW,MAAM,CAAC;IACtB,SAAI,GAAW,MAAM,CAAC;IACtB,SAAI,GAAW,MAAM,CAAC;IACtB,SAAI,GAAW,MAAM,CAAC;IACtB,SAAI,GAAW,MAAM,CAAC;IACtB,SAAI,GAAW,MAAM,CAAC;IACtB,SAAI,GAAW,MAAM,CAAC;IACtB,SAAI,GAAW,MAAM,CAAC;IACtB,SAAI,GAAW,MAAM,CAAC;IACtB,SAAI,GAAW,MAAM,CAAC;IACtB,SAAI,GAAW,MAAM,CAAC;IACtB,SAAI,GAAW,MAAM,CAAC;IACtB,SAAI,GAAW,MAAM,CAAC;IACtB,SAAI,GAAW,MAAM,CAAC;IACtB,SAAI,GAAW,MAAM,CAAC;IACtB,SAAI,GAAW,MAAM,CAAC;IACtB,SAAI,GAAW,MAAM,CAAC;IACtB,SAAI,GAAW,MAAM,CAAC;IACtB,SAAI,GAAW,MAAM,CAAC;IACtB,SAAI,GAAW,MAAM,CAAC;IACtB,SAAI,GAAW,MAAM,CAAC;IACtB,SAAI,GAAW,MAAM,CAAC;IACtB,SAAI,GAAW,MAAM,CAAC;IACtB,SAAI,GAAW,MAAM,CAAC;IACtB,SAAI,GAAW,MAAM,CAAC;IACtB,SAAI,GAAW,MAAM,CAAC;IACtB,SAAI,GAAW,MAAM,CAAC;IACtB,SAAI,GAAW,MAAM,CAAC;IACtB,SAAI,GAAW,MAAM,CAAC;IACtB,SAAI,GAAW,MAAM,CAAC;IACtB,SAAI,GAAW,MAAM,CAAC;IACtB,SAAI,GAAW,MAAM,CAAC;IACtB,SAAI,GAAW,MAAM,CAAC;IACtB,SAAI,GAAW,MAAM,CAAC;IACtB,SAAI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","file":"inspectorjs-lib.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"inspectorjs\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"inspectorjs\"] = factory();\n\telse\n\t\troot[\"inspectorjs\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 52);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 468c5f9a0dc136badaf1","export class Atom {\n    public static ftyp: string = 'ftyp';\n    public static styp: string = 'styp';\n    public static avc1: string = 'avc1';\n    public static avc3: string = 'avc3';\n    public static hvc1: string = 'hvc1';\n    public static hev1: string = 'hev1';\n    public static s263: string = 's263';\n    public static d263: string = 'd263';\n    public static vp08: string = 'vp08';\n    public static vp09: string = 'vp09';\n    public static mdat: string = 'mdat';\n    public static mp4a: string = 'mp4a';\n    public static wave: string = 'wave';\n    public static ac_3: string = 'ac-3';\n    public static dac3: string = 'dac3';\n    public static ec_3: string = 'ec-3';\n    public static dec3: string = 'dec3';\n    public static dtsc: string = 'dtsc';\n    public static dtsh: string = 'dtsh';\n    public static dtsl: string = 'dtsl';\n    public static dtse: string = 'dtse';\n    public static ddts: string = 'ddts';\n    public static tfdt: string = 'tfdt';\n    public static tfhd: string = 'tfhd';\n    public static trex: string = 'trex';\n    public static trun: string = 'trun';\n    public static sidx: string = 'sidx';\n    public static moov: string = 'moov';\n    public static mvhd: string = 'mvhd';\n    public static trak: string = 'trak';\n    public static mdia: string = 'mdia';\n    public static minf: string = 'minf';\n    public static stbl: string = 'stbl';\n    public static avcC: string = 'avcC';\n    public static hvcC: string = 'hvcC';\n    public static vpcC: string = 'vpcC';\n    public static esds: string = 'esds';\n    public static moof: string = 'moof';\n    public static traf: string = 'traf';\n    public static mvex: string = 'mvex';\n    public static tkhd: string = 'tkhd';\n    public static edts: string = 'edts';\n    public static elst: string = 'elst';\n    public static mdhd: string = 'mdhd';\n    public static hdlr: string = 'hdlr';\n    public static stsd: string = 'stsd';\n    public static pssh: string = 'pssh';\n    public static sinf: string = 'sinf';\n    public static schm: string = 'schm';\n    public static schi: string = 'schi';\n    public static tenc: string = 'tenc';\n    public static encv: string = 'encv';\n    public static enca: string = 'enca';\n    public static frma: string = 'frma';\n    public static saiz: string = 'saiz';\n    public static saio: string = 'saio';\n    public static uuid: string = 'uuid';\n    public static senc: string = 'senc';\n    public static pasp: string = 'pasp';\n    public static TTML: string = 'TTML';\n    public static vmhd: string = 'vmhd';\n    public static mp4v: string = 'mp4v';\n    public static stts: string = 'stts';\n    public static stss: string = 'stss';\n    public static ctts: string = 'ctts';\n    public static stsc: string = 'stsc';\n    public static stsz: string = 'stsz';\n    public static stco: string = 'stco';\n    public static co64: string = 'co64';\n    public static tx3g: string = 'tx3g';\n    public static wvtt: string = 'wvtt';\n    public static stpp: string = 'stpp';\n    public static samr: string = 'samr';\n    public static sawb: string = 'sawb';\n    public static dinf: string = 'dinf';\n    public static dref: string = 'dref';\n    public static url: string = 'url ';\n    public static smhd: string = 'smhd';\n    public static mfhd: string = 'mfhd';\n    public static emsg: string = 'emsg';\n\n    constructor (public type: string, public size: number) {\n    }\n\n    public static isContainerBox(type: string): boolean {\n        return type === Atom.moov || type === Atom.trak || type === Atom.mdia\n            || type === Atom.minf || type === Atom.stbl || type === Atom.moof\n            || type === Atom.traf || type === Atom.mvex || type === Atom.stsd\n            || type === Atom.mp4a || type === Atom.avc1 || type === Atom.dref\n            || type === Atom.dinf;\n    }\n}\n\nexport class ContainerAtom extends Atom {\n    containerDataOffset: number;\n    atoms: Atom[];\n\n    constructor(type: string, size: number) {\n        super(type, size);\n        this.containerDataOffset = 0;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/atom.ts","export class Mp4SampleFlags {\n    public isLeading: number;\n    public dependsOn: number;\n    public isDependedOn: number;\n    public hasRedundancy: number;\n    public paddingValue: number;\n    public isNonSyncSample: number;\n    public degradationPriority: number;\n}\n\nexport default class ByteParserUtils {\n    public static parseStringWithLength(buffer: Uint8Array, offset: number, end: number): string {\n        let result: string = '';\n        const strLength: number = buffer[offset];\n        const maxOffset: number = Math.min(offset + strLength + 1, end);\n        for (let i: number = offset + 1; i < maxOffset && buffer[i] !== 0; i++) {\n            result += String.fromCharCode(buffer[i]);\n        }\n        return result;\n    }\n\n    public static parseNullTerminatedString(buffer: Uint8Array, offset: number, end: number): string {\n        let result: string = '';\n        for (let i: number = offset + 1; i < end && buffer[i] !== 0; i++) {\n            result += String.fromCharCode(buffer[i]);\n        }\n        return result;\n    }\n\n    public static parseUint32(buffer: Uint8Array, offset: number): number {\n        // Js tric: The only JavaScript operator that works using unsigned 32-bit integers is >>>\n        // it can be used to convert a signed integer to an unsigned one\n        return (buffer[offset++] << 24 |\n            buffer[offset++] << 16 |\n            buffer[offset++] << 8  |\n            buffer[offset]) >>> 0;\n    }\n\n    public static parseLong64(buffer: Uint8Array, offset: number): number {\n        // Js tric: The only JavaScript operator that works using unsigned 32-bit integers is >>>\n        // it can be used to convert a signed integer to an unsigned one\n        return (buffer[offset++] << 56 |\n            buffer[offset++] << 48 |\n            buffer[offset++] << 40 |\n            buffer[offset++] << 32 |\n            buffer[offset++] << 24 |\n            buffer[offset++] << 16 |\n            buffer[offset++] << 8  |\n            buffer[offset]) >>> 0;\n    }\n\n    public static parseUint16(buffer: Uint8Array, offset: number): number {\n        return (buffer[offset++] << 8  |\n            buffer[offset]) >>> 0;\n    }\n\n    public static parseIsoBoxType(buffer: Uint8Array, offset: number): string {\n        let result: string = '';\n        result += String.fromCharCode(buffer[offset++]);\n        result += String.fromCharCode(buffer[offset++]);\n        result += String.fromCharCode(buffer[offset++]);\n        result += String.fromCharCode(buffer[offset]);\n        return result;\n    }\n\n    public static parseIsoBoxDate(seconds: number): Date {\n        return new Date(seconds * 1000 - 2082844800000);\n    }\n\n    public static parseIsoBoxSampleFlags(flags: number): Mp4SampleFlags {\n        return {\n            isLeading: (flags[0] & 0x0c) >>> 2,\n            dependsOn: flags[0] & 0x03,\n            isDependedOn: (flags[1] & 0xc0) >>> 6,\n            hasRedundancy: (flags[1] & 0x30) >>> 4,\n            paddingValue: (flags[1] & 0x0e) >>> 1,\n            isNonSyncSample: flags[1] & 0x01,\n            degradationPriority: (flags[2] << 8) | flags[3]\n        };\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/byte-parser-utils.ts","import Frame from './frame';\n\nexport default class Track {\n    public static TYPE_VIDEO: string = 'video';\n    public static TYPE_AUDIO: string = 'audio';\n    public static TYPE_TEXT: string = 'text';\n    public static TYPE_UNKNOWN: string = 'unknown';\n\n    public static MIME_TYPE_AAC: string = 'audio/mp4a-latm';\n    public static MIME_TYPE_AVC: string = 'video/avc';\n    public static MIME_TYPE_HEVC: string = 'video/hevc';\n    public static MIME_TYPE_MPEG: string = 'audio/mpeg';\n    public static MIME_TYPE_MPEG_L1: string = 'audio/mpeg-L1';\n    public static MIME_TYPE_MPEG_l2: string = 'audio/mpeg-L2';\n    public static MIME_TYPE_ID3: string = 'application/id3';\n    public static MIME_TYPE_UNKNOWN: string = 'unknown';\n\n    constructor(public id: number, private type: string, private mimeType: string) {\n    }\n\n    public getType(): string {\n        return this.type;\n    }\n\n    public getMimeType(): string {\n        return this.mimeType;\n    }\n\n    public getFrames(): Frame[] {\n        return [];\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/track.ts","import BitReader from '../../../utils/bit-reader';\nimport Frame from '../../frame';\n\nexport default class PayloadReader {\n    public firstTimestamp: number = -1;\n    public timeUs: number = -1;\n    public frames: Frame[] = [];\n    public dataBuffer: Uint8Array;\n\n    protected dataOffset: number;\n\n    public append(packet: BitReader): void {\n        const dataToAppend: Uint8Array = packet.buffer.subarray(packet.bytesOffset());\n        if (!this.dataBuffer) {\n            this.dataBuffer = dataToAppend;\n        } else {\n            const newLen: number = this.dataBuffer.byteLength + packet.remainingBytes();\n            const temp: Uint8Array = new Uint8Array(newLen);\n            temp.set(this.dataBuffer, 0);\n            temp.set(dataToAppend, this.dataBuffer.byteLength);\n            this.dataBuffer = temp;\n        }\n    }\n\n    public reset(): void {\n        this.frames = [];\n        this.dataOffset = 0;\n    }\n\n    public flush(pts: number): void {\n        if (this.dataBuffer.byteLength > 0) {\n            this.consumeData(pts);\n            this.dataBuffer = null;\n        }\n        this.dataOffset = 0;\n    }\n\n    public consumeData(pts: number): void {\n        throw new Error('Should have implemented this');\n    }\n\n    public getMimeType(): string {\n        return 'Unknown';\n    }\n\n    public getDuration(): number {\n        return this.getLastPTS() - this.getFirstPTS();\n    }\n\n    public getFirstPTS(): number {\n        return this.firstTimestamp;\n    }\n\n    public getLastPTS(): number {\n        return this.timeUs;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/ts/payload/payload-reader.ts","export default class Frame {\n    public static IDR_FRAME: string = 'I';\n    public static P_FRAME: string = 'P';\n    public static B_FRAME: string = 'B';\n\n    constructor (public frameType: string, public timeUs: number) {\n        // do nothing\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/frame.ts","export default class BitReader {\n    private workingBytesAvailable: number;\n    private workingWord: number;\n    private workingBitsAvailable: number;\n\n    constructor(public buffer: Uint8Array) {\n        this.workingBytesAvailable = buffer.byteLength;\n        this.workingWord = 0;\n        this.workingBitsAvailable = 0;\n\n        this.loadWord();\n    }\n\n    public destroy(): void {\n        this.buffer = null;\n    }\n\n    public remainingBytes(): number {\n        return this.workingBytesAvailable + this.workingBitsAvailable / 8;\n    }\n\n    public bitsAvailable(): number {\n        return (8 * this.workingBytesAvailable) + this.workingBitsAvailable;\n    }\n\n    public bytesOffset(): number {\n        return this.buffer.byteLength - this.remainingBytes();\n    }\n\n    public skipBytes(count: number): void {\n        this.skipBits(count * 8);\n    }\n\n    public skipBits(count: number): void {\n        let skipBytes: number;\n        if (this.workingBitsAvailable > count) {\n            this.workingWord <<= count;\n            this.workingBitsAvailable -= count;\n        } else {\n            count -= this.workingBitsAvailable;\n            skipBytes = Math.floor(count / 8);\n\n            count -= (skipBytes * 8);\n            this.workingBytesAvailable -= skipBytes;\n\n            this.loadWord();\n\n            this.workingWord <<= count;\n            this.workingBitsAvailable -= count;\n        }\n    }\n\n    public skipUEG(): void {\n        this.skipBits(1 + this.skipLeadingZeros());\n    }\n\n    public skipSEG(): void {\n        this.skipBits(1 + this.skipLeadingZeros());\n    }\n\n    public readUEG(): number {\n        const clz: number = this.skipLeadingZeros();\n        return this.readBits(clz + 1) - 1;\n    }\n\n    public readSEG(): number {\n        var val: number = this.readUEG();\n        if (0x01 & val) {\n            return (1 + val) >>> 1;\n        }\n        return -1 * (val >>> 1);\n    }\n\n    public readBool(): boolean {\n        return this.readBits(1) === 1;\n    }\n\n    public readByte = function(): number {\n        return this.readBits(8);\n    };\n\n    public readBits(size: number): number {\n        let bits: number = Math.min(this.workingBitsAvailable, size);\n        const val: number = this.workingWord >>> (32 - bits);\n\n        this.workingBitsAvailable -= bits;\n        if (this.workingBitsAvailable > 0) {\n            this.workingWord <<= bits;\n        } else if (this.workingBytesAvailable > 0) {\n            this.loadWord();\n        }\n\n        bits = size - bits;\n        if (bits > 0) {\n            return (val << bits | this.readBits(bits)) >>> 0;\n        }\n        return val;\n    }\n\n    private loadWord(): void {\n        const position: number = this.buffer.byteLength - this.workingBytesAvailable;\n        const workingBytes: Uint8Array = new Uint8Array(4);\n        const availableBytes: number = Math.min(4, this.workingBytesAvailable);\n\n        if (availableBytes === 0) {\n            throw new Error('No bytes available');\n        }\n\n        workingBytes.set(this.buffer.subarray(position, position + availableBytes));\n        this.workingWord = new DataView(workingBytes.buffer).getUint32(0);\n\n        this.workingBitsAvailable = availableBytes * 8;\n        this.workingBytesAvailable -= availableBytes;\n    }\n\n    private skipLeadingZeros(): number {\n        let leadingZeroCount: number;\n        for (leadingZeroCount = 0; leadingZeroCount < this.workingBitsAvailable; ++leadingZeroCount) {\n            if ((this.workingWord & (0x80000000 >>> leadingZeroCount)) !== 0) {\n                this.workingWord <<= leadingZeroCount;\n                this.workingBitsAvailable -= leadingZeroCount;\n                return leadingZeroCount;\n            }\n        }\n        this.loadWord();\n        return leadingZeroCount + this.skipLeadingZeros();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/bit-reader.ts","import ByteParserUtils from '../../../../utils/byte-parser-utils';\nimport {Atom, ContainerAtom} from '../atom';\n\nexport class VideoAtom extends ContainerAtom {\n    public dataReferenceIndex: number;\n    public temporalQuality: number;\n    public spatialQuality: number;\n    public width: number;\n    public height: number;\n    public horizontalResolution: number;\n    public verticalResolution: number;\n    public compressorName: string;\n    public frameCount: number;\n    public depth: number;\n\n    protected static fillVideoAtom(atom: VideoAtom, data: Uint8Array): Atom {\n        atom.containerDataOffset = 78;\n        atom.dataReferenceIndex = ByteParserUtils.parseUint16(data, 6);\n        atom.temporalQuality = ByteParserUtils.parseUint32(data, 16);\n        atom.spatialQuality = ByteParserUtils.parseUint32(data, 20);\n        atom.width = ByteParserUtils.parseUint16(data, 24);\n        atom.height = ByteParserUtils.parseUint16(data, 26);\n        atom.horizontalResolution = ByteParserUtils.parseUint16(data, 28) +\n            ByteParserUtils.parseUint16(data, 30) / 16;\n        atom.verticalResolution = ByteParserUtils.parseUint16(data, 32) +\n            ByteParserUtils.parseUint16(data, 34) / 16;\n        atom.frameCount = ByteParserUtils.parseUint16(data, 40);\n        atom.compressorName = ByteParserUtils.parseStringWithLength(data, 42, 74);\n        atom.depth = ByteParserUtils.parseUint16(data, 74);\n        return atom;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/helpers/video-atom.ts","import BitReader from '../../utils/bit-reader';\nimport { Sps, Size, FrameRate } from './nal-units';\n\nexport default class SPSParser {\n    public static parseSPS(data: Uint8Array): Sps {\n        let gb: BitReader = new BitReader(data);\n        const profile_idc: number = gb.readByte();\n        gb.readByte();\n        const level_idc: number = gb.readByte();\n        gb.readUEG();\n\n        const profile_string: string = SPSParser.getProfileString(profile_idc);\n        const level_string: string = SPSParser.getLevelString(level_idc);\n        let chroma_format_idc: number = 1;\n        let chroma_format: number = 420;\n        let chroma_format_table: number[] = [0, 420, 422, 444];\n        let bit_depth: number = 8;\n\n        if (profile_idc === 100 || profile_idc === 110 || profile_idc === 122 ||\n            profile_idc === 244 || profile_idc === 44 || profile_idc === 83 ||\n            profile_idc === 86 || profile_idc === 118 || profile_idc === 128 ||\n            profile_idc === 138 || profile_idc === 144) {\n\n            chroma_format_idc = gb.readUEG();\n            if (chroma_format_idc === 3) {\n                gb.readBits(1);\n            }\n            if (chroma_format_idc <= 3) {\n                chroma_format = chroma_format_table[chroma_format_idc];\n            }\n\n            bit_depth = gb.readUEG() + 8;\n            gb.readUEG();\n            gb.readBits(1);\n            if (gb.readBool()) {\n                const scaling_list_count: number = (chroma_format_idc !== 3) ? 8 : 12;\n                for (let i: number = 0; i < scaling_list_count; i++) {\n                    if (gb.readBool()) {\n                        if (i < 6) {\n                            SPSParser.skipScalingList(gb, 16);\n                        } else {\n                            SPSParser.skipScalingList(gb, 64);\n                        }\n                    }\n                }\n            }\n        }\n        gb.readUEG();\n        let pic_order_cnt_type: number = gb.readUEG();\n        if (pic_order_cnt_type === 0) {\n            gb.readUEG();\n        } else if (pic_order_cnt_type === 1) {\n            gb.readBits(1);\n            gb.readSEG();\n            gb.readSEG();\n            const num_ref_frames_in_pic_order_cnt_cycle: number = gb.readUEG();\n            for (let i: number = 0; i < num_ref_frames_in_pic_order_cnt_cycle; i++) {\n                gb.readSEG();\n            }\n        }\n        gb.readUEG();\n        gb.readBits(1);\n\n        const pic_width_in_mbs_minus1: number = gb.readUEG();\n        const pic_height_in_map_units_minus1: number = gb.readUEG();\n\n        const frame_mbs_only_flag: number = gb.readBits(1);\n        if (frame_mbs_only_flag === 0) {\n            gb.readBits(1);\n        }\n        gb.readBits(1);\n\n        let frame_crop_left_offset: number = 0;\n        let frame_crop_right_offset: number = 0;\n        let frame_crop_top_offset: number = 0;\n        let frame_crop_bottom_offset: number = 0;\n\n        const frame_cropping_flag: boolean = gb.readBool();\n        if (frame_cropping_flag) {\n            frame_crop_left_offset = gb.readUEG();\n            frame_crop_right_offset = gb.readUEG();\n            frame_crop_top_offset = gb.readUEG();\n            frame_crop_bottom_offset = gb.readUEG();\n        }\n\n        let sar_width: number = 1, sar_height: number = 1;\n        let fps: number = 0, fps_fixed: boolean = true, fps_num: number = 0, fps_den: number = 0;\n\n        let vui_parameters_present_flag: boolean = gb.readBool();\n        if (vui_parameters_present_flag) {\n            if (gb.readBool()) {  // aspect_ratio_info_present_flag\n                const aspect_ratio_idc: number = gb.readByte();\n                const sar_w_table: number[] = [1, 12, 10, 16, 40, 24, 20, 32, 80, 18, 15, 64, 160, 4, 3, 2];\n                const sar_h_table: number[] = [1, 11, 11, 11, 33, 11, 11, 11, 33, 11, 11, 33,  99, 3, 2, 1];\n\n                if (aspect_ratio_idc > 0 && aspect_ratio_idc < 16) {\n                    sar_width = sar_w_table[aspect_ratio_idc - 1];\n                    sar_height = sar_h_table[aspect_ratio_idc - 1];\n                } else if (aspect_ratio_idc === 255) {\n                    sar_width = gb.readByte() << 8 | gb.readByte();\n                    sar_height = gb.readByte() << 8 | gb.readByte();\n                }\n            }\n\n            if (gb.readBool()) {\n                gb.readBool();\n            }\n            if (gb.readBool()) {\n                gb.readBits(4);\n                if (gb.readBool()) {\n                    gb.readBits(24);\n                }\n            }\n            if (gb.readBool()) {\n                gb.readUEG();\n                gb.readUEG();\n            }\n            if (gb.readBool()) {\n                const num_units_in_tick: number = gb.readBits(32);\n                const time_scale: number = gb.readBits(32);\n                fps_fixed = gb.readBool();\n\n                fps_num = time_scale;\n                fps_den = num_units_in_tick * 2;\n                fps = fps_num / fps_den;\n            }\n        }\n\n        let sarScale: number = 1;\n        if (sar_width !== 1 || sar_height !== 1) {\n            sarScale = sar_width / sar_height;\n        }\n\n        let crop_unit_x: number = 0, crop_unit_y: number = 0;\n        if (chroma_format_idc === 0) {\n            crop_unit_x = 1;\n            crop_unit_y = 2 - frame_mbs_only_flag;\n        } else {\n            const sub_wc: number = (chroma_format_idc === 3) ? 1 : 2;\n            const sub_hc: number = (chroma_format_idc === 1) ? 2 : 1;\n            crop_unit_x = sub_wc;\n            crop_unit_y = sub_hc * (2 - frame_mbs_only_flag);\n        }\n\n        let codec_width: number = (pic_width_in_mbs_minus1 + 1) * 16;\n        let codec_height: number = (2 - frame_mbs_only_flag) * ((pic_height_in_map_units_minus1 + 1) * 16);\n\n        codec_width -= (frame_crop_left_offset + frame_crop_right_offset) * crop_unit_x;\n        codec_height -= (frame_crop_top_offset + frame_crop_bottom_offset) * crop_unit_y;\n\n        const present_width: number = Math.ceil(codec_width * sarScale);\n\n        gb.destroy();\n        gb = null;\n\n        return new Sps(profile_string, level_string, bit_depth, chroma_format,\n            SPSParser.getChromaFormatString(chroma_format), new FrameRate(fps_fixed, fps, fps_den, fps_num),\n            new Size(sar_width, sar_height), new Size(codec_width, codec_height), new Size(present_width, codec_height));\n    }\n\n    private static getProfileString(profile_idc: number): string {\n        switch (profile_idc) {\n            case 66:\n                return 'Baseline';\n            case 77:\n                return 'Main';\n            case 88:\n                return 'Extended';\n            case 100:\n                return 'High';\n            case 110:\n                return 'High10';\n            case 122:\n                return 'High422';\n            case 244:\n                return 'High444';\n            default:\n                return 'Unknown';\n        }\n    }\n\n    private static getLevelString(level_idc: number): string {\n        return (level_idc / 10).toFixed(1);\n    }\n\n    private static getChromaFormatString(chroma: number): string {\n        switch (chroma) {\n            case 420:\n                return '4:2:0';\n            case 422:\n                return '4:2:2';\n            case 444:\n                return '4:4:4';\n            default:\n                return 'Unknown';\n        }\n    }\n\n    private static skipScalingList(gb: BitReader, count: number): void {\n        let last_scale: number = 8, next_scale: number = 8;\n        let delta_scale: number = 0;\n        for (let i: number = 0; i < count; i++) {\n            if (next_scale !== 0) {\n                delta_scale = gb.readSEG();\n                next_scale = (last_scale + delta_scale + 256) % 256;\n            }\n            last_scale = (next_scale === 0) ? last_scale : next_scale;\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/codecs/h264/sps-parser.ts","import MpegTSDemuxer from './demuxer/ts/mpegts-demuxer';\nimport Mp4Demuxer from './demuxer/mp4/mp4-demuxer';\n\nexport function createMpegTSDemuxer(data: Uint8Array): MpegTSDemuxer {\n    return new MpegTSDemuxer();\n}\n\nexport function createMp4Demuxer(data: Uint8Array): Mp4Demuxer {\n    return new Mp4Demuxer();\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.ts","export class FrameRate {\n    constructor (public fixed: boolean, public fps: number,\n        public fpsDen: number, public fpsNum: number) {\n            // do nothing\n        }\n}\n\nexport class Size {\n    constructor (public width: number, public height: number) {\n        // do nothing\n    }\n}\n\nexport class Sps {\n    constructor (public profile: string, public level: string, public bitDepth: number,\n        public chromaFormat: number, chromaFormatStr: string, public frameRate: FrameRate,\n        public sar: Size, public codecSize: Size, public presentSize: Size ) {\n        // do nothing\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/codecs/h264/nal-units.ts","import {Atom} from './atom';\nimport {VideoAtom} from './helpers/video-atom';\n\nexport class Avc1 extends VideoAtom {\n    public static parse(data: Uint8Array): Atom {\n        const atom: Avc1 = new Avc1(Atom.avc1, data.byteLength);\n        VideoAtom.fillVideoAtom(atom, data);\n        return atom;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/avc1.ts","import ByteParserUtils from '../../../utils/byte-parser-utils';\nimport {Atom, ContainerAtom} from './atom';\nimport SPSParser from '../../../codecs/h264/sps-parser';\nimport {Sps} from '../../../codecs/h264/nal-units';\n\nexport class AvcC extends Atom {\n    public version: number;\n    public profile: number;\n    public profileCompatibility: number;\n    public level: number;\n    public lengthSizeMinusOne: number;\n    public numOfSequenceParameterSets: number;\n    public numOfPictureParameterSets: number;\n    public sps: Uint8Array[];\n    public spsParsed: Sps[];\n    public pps: Uint8Array[];\n\n    public static parse(data: Uint8Array): Atom {\n        const avcC: AvcC = new AvcC(Atom.avcC, data.byteLength);\n\n        avcC.version = data[0];\n        avcC.profile = data[1];\n        avcC.profileCompatibility = data[2];\n        avcC.level = data[3];\n        avcC.lengthSizeMinusOne = data[4] & 0x03;\n        avcC.numOfSequenceParameterSets = data[5] & 0x1f;\n\n        avcC.sps = [];\n        avcC.spsParsed = [];\n        let offset: number = 6;\n        for (let i: number = 0; i < avcC.numOfSequenceParameterSets; i++) {\n            const spsSize: number = ByteParserUtils.parseUint16(data, offset);\n            offset += 2;\n            const sps: Uint8Array = new Uint8Array(data.subarray(offset, offset + spsSize));\n            avcC.sps.push(sps);\n            offset += spsSize;\n\n            avcC.spsParsed.push(SPSParser.parseSPS(sps.subarray(1, spsSize)));\n        }\n\n        avcC.numOfPictureParameterSets = data[offset] & 0x1f;\n        avcC.pps = [];\n        offset++;\n        for (let i: number = 0; i < avcC.numOfPictureParameterSets; i++) {\n            const ppsSize: number = ByteParserUtils.parseUint16(data, offset);\n            offset += 2;\n            avcC.pps.push(new Uint8Array(data.subarray(offset, offset + ppsSize)));\n            offset += ppsSize;\n        }\n\n        return avcC;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/avcC.ts","import ByteParserUtils from '../../../utils/byte-parser-utils';\nimport {Atom, ContainerAtom} from './atom';\n\nexport class Dref extends ContainerAtom {\n    public version: number;\n    public flags: Uint8Array;\n\n    public static parse(data: Uint8Array): Atom {\n        const dref: Dref = new Dref(Atom.dref, data.byteLength);\n        dref.containerDataOffset = 8;\n\n        dref.version = data[0];\n        dref.flags = data.subarray(1, 4);\n        return dref;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/dref.ts","import ByteParserUtils from '../../../utils/byte-parser-utils';\nimport {Atom} from './atom';\n\nexport class Emsg extends Atom {\n    public version: number;\n    public flags: Uint8Array;\n    public schemeIdUri: string;\n    public value: string;\n    public timescale: number;\n    public presentationTimeDelta: number;\n    public eventDuration: number;\n    public id: number;\n    public data: Uint8Array;\n\n    public static parse(data: Uint8Array): Atom {\n        const emsg: Emsg = new Emsg(Atom.emsg, data.byteLength);\n        emsg.version = data[0];\n        emsg.flags = data.subarray(1, 4);\n\n        let i: number = 4;\n        emsg.schemeIdUri = ByteParserUtils.parseNullTerminatedString(data, i, data.byteLength);\n        i += emsg.schemeIdUri.length + 1;\n        emsg.value = ByteParserUtils.parseNullTerminatedString(data, i, data.byteLength);\n        i += emsg.value.length + 1;\n        emsg.timescale = ByteParserUtils.parseUint32(data, i);\n        i += 4;\n        emsg.presentationTimeDelta = ByteParserUtils.parseUint32(data, i);\n        i += 4;\n        emsg.eventDuration = ByteParserUtils.parseUint32(data, i);\n        i += 4;\n        emsg.id = ByteParserUtils.parseUint32(data, i);\n        i += 4;\n        if (i < data.byteLength - 1) {\n            emsg.data = data.subarray(i);\n        }\n        return emsg;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/emsg.ts","import ByteParserUtils from '../../../utils/byte-parser-utils';\nimport {Atom} from './atom';\n\nexport class DecoderConfigDescriptor {\n    constructor(public tag: number, public length: number,\n        public audioObjectType: number, public samplingFrequencyIndex: number,\n        public channelConfiguration: number) {\n        }\n}\n\nexport class DecoderConfig {\n    constructor(public objectProfileIndication: number, public streamType: number,\n        public bufferSize: number, public maxBitrate: number, public avgBitrate: number,\n        public decoderConfigDescriptor: DecoderConfigDescriptor) {\n        }\n}\n\nexport class Esds extends Atom {\n    public version: number;\n    public flags: Uint8Array;\n    public esId: number;\n    public streamPriority: number;\n    public decoderConfig: DecoderConfig;\n\n    public static parse(data: Uint8Array): Atom {\n        const esds: Esds = new Esds(Atom.esds, data.byteLength);\n\n        esds.version = data[0];\n        esds.flags = data.subarray(1, 4);\n        esds.esId = ByteParserUtils.parseUint16(data, 6);\n        esds.streamPriority = data[8] & 0x1f;\n        esds.decoderConfig = new DecoderConfig(\n            data[11],\n            (data[12] >>> 2) & 0x3f,\n            (data[13] << 16) | (data[14] << 8) | data[15],\n            ByteParserUtils.parseUint32(data, 16),\n            ByteParserUtils.parseUint32(data, 20),\n            new DecoderConfigDescriptor(\n                data[24],\n                data[25],\n                (data[26] >>> 3) & 0x1f,\n                ((data[26] & 0x07) << 1) | ((data[27] >>> 7) & 0x01),\n                (data[27] >>> 3) & 0x0f\n            )\n        );\n        return esds;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/esds.ts","import ByteParserUtils from '../../../utils/byte-parser-utils';\nimport {Atom} from './atom';\n\nexport class Ftyp extends Atom {\n    public majorBrand: string;\n    public minorVersion: number;\n    public compatibleBrands: string [];\n\n    public static parse(data: Uint8Array): Atom {\n        const ftyp: Ftyp = new Ftyp(Atom.ftyp, data.byteLength);\n        ftyp.majorBrand = ByteParserUtils.parseIsoBoxType(data, 0);\n        ftyp.minorVersion = ByteParserUtils.parseUint32(data, 4);\n        ftyp.compatibleBrands = [];\n\n        let i: number = 8;\n        while (i < data.byteLength) {\n            ftyp.compatibleBrands.push(ByteParserUtils.parseIsoBoxType(data, i));\n            i += 4;\n        }\n\n        return ftyp;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/ftyp.ts","import ByteParserUtils from '../../../utils/byte-parser-utils';\nimport {Atom} from './atom';\n\nexport class Hdlr extends Atom {\n    public version: number;\n    public flags: Uint8Array;\n    public handlerType: string;\n    public name: string;\n\n    public static parse(data: Uint8Array): Atom {\n        const hdlr: Hdlr = new Hdlr(Atom.hdlr, data.byteLength);\n        hdlr.version = data[0];\n        hdlr.flags = data.subarray(1, 4);\n        hdlr.handlerType = ByteParserUtils.parseIsoBoxType(data, 8);\n\n        // parse out the name field\n        let name: string = '';\n        for (let i: number = 24; i < data.byteLength; i++) {\n            if (data[i] === 0x00) {\n                i++;\n                break;\n            }\n            name += String.fromCharCode(data[i]);\n        }\n        hdlr.name = decodeURIComponent(name);\n\n        return hdlr;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/hdlr.ts","import ByteParserUtils from '../../../../utils/byte-parser-utils';\nimport {Atom, ContainerAtom} from '../atom';\n\nexport class AudioAtom extends ContainerAtom {\n    public dataReferenceIndex: number;\n    public channelCount: number;\n    public sampleSize: number;\n    public sampleRate: number;\n\n    public static fillAudioAtom(atom: AudioAtom, data: Uint8Array): Atom {\n        atom.containerDataOffset = 28;\n\n        atom.dataReferenceIndex = ByteParserUtils.parseUint16(data, 6);\n        atom.channelCount = ByteParserUtils.parseUint16(data, 16);\n        atom.sampleSize = ByteParserUtils.parseUint16(data, 18);\n        atom.sampleRate = ByteParserUtils.parseUint16(data, 24) +\n            (ByteParserUtils.parseUint16(data, 26) >>> 15);\n\n        return atom;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/helpers/audio-atom.ts","import {Atom} from './atom';\nimport {VideoAtom} from './helpers/video-atom';\n\nexport class Hev1 extends VideoAtom {\n    public static parse(data: Uint8Array): Atom {\n        const atom: Hev1 = new Hev1(Atom.hev1, data.byteLength);\n        VideoAtom.fillVideoAtom(atom, data);\n        return atom;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/hev1.ts","import {Atom} from './atom';\nimport {VideoAtom} from './helpers/video-atom';\n\nexport class Hvc1 extends VideoAtom {\n    public static parse(data: Uint8Array): Atom {\n        const atom: Hvc1 = new Hvc1(Atom.hvc1, data.byteLength);\n        VideoAtom.fillVideoAtom(atom, data);\n        return atom;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/hvc1.ts","import ByteParserUtils from '../../../utils/byte-parser-utils';\nimport { Atom, ContainerAtom } from './atom';\n\nexport class HvcC extends Atom {\n    public version: number;\n    public profileSpace: number;\n    public tierFlag: number;\n    public profileIdc: number;\n    public profileCompatibility: number;\n    public constraintIndicator: Uint8Array;\n    public levelIdc: number;\n    public spatialSegmentationIdc: number;\n    public parallelismType: number;\n    public chromaFormat: number;\n    public bitDepthLumaMinus8: number;\n    public bitDepthChromaMinus8: number;\n    public avgFrameRate: number;\n    public constantFrameRate: number;\n    public numTemporalLayers: number;\n    public temporalIdNested: number;\n    public lengthSizeMinusOne: number;\n\n    public static parse(data: Uint8Array): Atom {\n        const hvcC: HvcC = new HvcC(Atom.hvcC, data.byteLength);\n        let aux: number;\n\n        hvcC.version = data[0];\n\n        aux = data[1];\n        hvcC.profileSpace = aux >> 6;\n        hvcC.tierFlag = (aux & 0x20) >> 5;\n        hvcC.profileIdc = (aux & 0x1F);\n\n        hvcC.profileCompatibility = ByteParserUtils.parseUint32(data, 2);\n        hvcC.constraintIndicator = data.subarray(6, 12);\n        hvcC.levelIdc = data[12];\n        hvcC.spatialSegmentationIdc = ByteParserUtils.parseUint16(data, 13) & 0xFFF;\n        hvcC.parallelismType = (data[15] & 0x3);\n        hvcC.chromaFormat = (data[16] & 0x3);\n        hvcC.bitDepthLumaMinus8 = (data[17] & 0x7);\n        hvcC.bitDepthChromaMinus8 = (data[18] & 0x7);\n        hvcC.avgFrameRate = ByteParserUtils.parseUint16(data, 19);\n\n        aux = data[21];\n        hvcC.constantFrameRate = (aux >> 6);\n        hvcC.numTemporalLayers = (aux & 0XD) >> 3;\n        hvcC.temporalIdNested = (aux & 0X4) >> 2;\n        hvcC.lengthSizeMinusOne = (aux & 0X3);\n\n        // TODO: read H265 nalus\n\n        return hvcC;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/hvcC.ts","import {Atom} from './atom';\nimport {Ftyp} from './ftyp';\nimport {Stsd} from './stsd';\nimport {Avc1} from './avc1';\nimport {AvcC} from './avcC';\nimport {Mvhd} from './mvhd';\nimport {Trex} from './trex';\nimport {Tkhd} from './tkhd';\nimport {Mdhd} from './mdhd';\nimport {Hdlr} from './hdlr';\nimport {Vmhd} from './vmhd';\nimport {Dref} from './dref';\nimport {Stts} from './stts';\nimport {Stsc} from './stsc';\nimport {Stsz} from './stsz';\nimport {Stco} from './stco';\nimport {Smhd} from './smhd';\nimport {Mp4a} from './mp4a';\nimport {Esds} from './esds';\nimport {Sidx} from './sidx';\nimport {Tfhd} from './tfhd';\nimport {Tfdt} from './tfdt';\nimport {Trun} from './trun';\nimport {Mfhd} from './mfhd';\nimport {Mdat} from './mdat';\nimport {Emsg} from './emsg';\nimport {Styp} from './styp';\nimport {Pssh} from './pssh';\nimport {HvcC} from './hvcC';\nimport {Hvc1} from './hvc1';\nimport {Hev1} from './hev1';\n\nexport const boxesParsers: {[type: string] : (data: Uint8Array) => Atom} = {};\n\nboxesParsers[Atom.ftyp] = Ftyp.parse;\nboxesParsers[Atom.stsd] = Stsd.parse;\nboxesParsers[Atom.avc1] = Avc1.parse;\nboxesParsers[Atom.avcC] = AvcC.parse;\nboxesParsers[Atom.mvhd] = Mvhd.parse;\nboxesParsers[Atom.trex] = Trex.parse;\nboxesParsers[Atom.tkhd] = Tkhd.parse;\nboxesParsers[Atom.mdhd] = Mdhd.parse;\nboxesParsers[Atom.hdlr] = Hdlr.parse;\nboxesParsers[Atom.vmhd] = Vmhd.parse;\nboxesParsers[Atom.dref] = Dref.parse;\nboxesParsers[Atom.stts] = Stts.parse;\nboxesParsers[Atom.stsc] = Stsc.parse;\nboxesParsers[Atom.stsz] = Stsz.parse;\nboxesParsers[Atom.stco] = Stco.parse;\nboxesParsers[Atom.smhd] = Smhd.parse;\nboxesParsers[Atom.mp4a] = Mp4a.parse;\nboxesParsers[Atom.esds] = Esds.parse;\nboxesParsers[Atom.sidx] = Sidx.parse;\nboxesParsers[Atom.tfhd] = Tfhd.parse;\nboxesParsers[Atom.tfdt] = Tfdt.parse;\nboxesParsers[Atom.trun] = Trun.parse;\nboxesParsers[Atom.mfhd] = Mfhd.parse;\nboxesParsers[Atom.mdat] = Mdat.parse;\nboxesParsers[Atom.emsg] = Emsg.parse;\nboxesParsers[Atom.styp] = Styp.parse;\nboxesParsers[Atom.pssh] = Pssh.parse;\nboxesParsers[Atom.hvcC] = HvcC.parse;\nboxesParsers[Atom.hvc1] = Hvc1.parse;\nboxesParsers[Atom.hev1] = Hev1.parse;\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/index.ts","import ByteParserUtils from '../../../utils/byte-parser-utils';\nimport { Atom } from './atom';\n\nexport class Mdat extends Atom {\n\n    public static parse(data: Uint8Array): Atom {\n        const mdat: Mdat = new Mdat(Atom.mdat, data.byteLength);\n        Mdat.parsePayload(data);\n        return mdat;\n    }\n\n    private static parsePayload(data: Uint8Array): void {\n        let length: number;\n        for (let i: number = 0; i + 4 < data.byteLength; i += length) {\n            length = ByteParserUtils.parseUint32(data, i);\n            i += 4;\n\n            if (length <= 0) {\n                console.log('is this an H264 stream?');\n                continue;\n            }\n\n            const nalType: number = data[i] & 0x1F;\n            switch (nalType) {\n                case 0x01:\n                    console.log('slice_layer_without_partitioning_rbsp');\n                    break;\n                case 0x05:\n                    console.log('slice_layer_without_partitioning_rbsp_idr');\n                    break;\n                case 0x06:\n                    console.log('sei_rbsp');\n                    break;\n                case 0x07:\n                    console.log('seq_parameter_set_rbsp');\n                    break;\n                case 0x08:\n                    console.log('pic_parameter_set_rbsp');\n                    break;\n                case 0x09:\n                    console.log('access_unit_delimiter_rbsp');\n                    break;\n                default:\n                    console.log('Unknown nal unit: ' + nalType);\n                    break;\n            }\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/mdat.ts","import ByteParserUtils from '../../../utils/byte-parser-utils';\nimport {Atom} from './atom';\n\nexport class Mdhd extends Atom {\n    public version: number;\n    public flags: Uint8Array;\n    public language: string;\n    public creationTime: Date;\n    public modificationTime: Date;\n    public timescale: number;\n    public duration: number;\n\n    public static parse(data: Uint8Array): Atom {\n        const mdhd: Mdhd = new Mdhd(Atom.mdhd, data.byteLength);\n        mdhd.version = data[0];\n        mdhd.flags = data.subarray(1, 4);\n\n        let offset: number = 4;\n        if (mdhd.version === 1) {\n            offset += 4;\n            mdhd.creationTime = ByteParserUtils.parseIsoBoxDate(ByteParserUtils.parseUint32(data, offset));\n            offset += 8;\n            mdhd.modificationTime = ByteParserUtils.parseIsoBoxDate(ByteParserUtils.parseUint32(data, offset));\n            offset += 4;\n            mdhd.timescale = ByteParserUtils.parseUint32(data, offset);\n            offset += 8;\n            mdhd.duration = ByteParserUtils.parseUint32(data, offset);\n        } else {\n            mdhd.creationTime = ByteParserUtils.parseIsoBoxDate(ByteParserUtils.parseUint32(data, offset));\n            offset += 4;\n            mdhd.modificationTime = ByteParserUtils.parseIsoBoxDate(ByteParserUtils.parseUint32(data, offset));\n            offset += 4;\n            mdhd.timescale = ByteParserUtils.parseUint32(data, offset);\n            offset += 4;\n            mdhd.duration = ByteParserUtils.parseUint32(data, offset);\n        }\n        offset += 4;\n        let langVal: number = ByteParserUtils.parseUint16(data, offset);\n        mdhd.language = '';\n        mdhd.language += String.fromCharCode((langVal >> 10) + 0x60);\n        mdhd.language += String.fromCharCode(((langVal & 0x03c0) >> 5) + 0x60);\n        mdhd.language += String.fromCharCode((langVal & 0x1f) + 0x60);\n\n        return mdhd;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/mdhd.ts","import ByteParserUtils from '../../../utils/byte-parser-utils';\nimport {Atom} from './atom';\n\nexport class Mfhd extends Atom {\n    public version: number;\n    public flags: Uint8Array;\n    public sequenceNumber: number;\n\n    public static parse(data: Uint8Array): Atom {\n        const mfhd: Mfhd = new Mfhd(Atom.mfhd, data.byteLength);\n        mfhd.version = data[0];\n        mfhd.flags = data.subarray(1, 4);\n        mfhd.sequenceNumber = ByteParserUtils.parseUint32(data, 4);\n        return mfhd;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/mfhd.ts","import ByteParserUtils from '../../../utils/byte-parser-utils';\nimport {Atom, ContainerAtom} from './atom';\nimport {AudioAtom} from './helpers/audio-atom';\n\nexport class Mp4a extends AudioAtom {\n    public static parse(data: Uint8Array): Atom {\n        const atom: Mp4a = new Mp4a(Atom.mp4a, data.byteLength);\n        AudioAtom.fillAudioAtom(atom, data);\n        return atom;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/mp4a.ts","import ByteParserUtils from '../../../utils/byte-parser-utils';\nimport {Atom} from './atom';\n\nexport class Mvhd extends Atom {\n    public version: number;\n    public flags: Uint8Array;\n    public creationTime: Date;\n    public modificationTime: Date;\n    public timescale: number;\n    public duration: number;\n    public rate: number;\n    public volume: number;\n    public matrix: Uint32Array;\n    public previewtime: number;\n    public previewDuration: number;\n    public posterTime: number;\n    public selectionTime: number;\n    public selectionDuration: number;\n    public currentTime: number;\n    public nextTrackId: number;\n\n    public static parse(data: Uint8Array): Atom {\n        const mvhd: Mvhd = new Mvhd(Atom.mvhd, data.byteLength);\n        mvhd.version = data[0];\n        mvhd.flags = data.subarray(1, 4);\n\n        let offset: number = 4;\n        if (mvhd.version === 1) {\n            offset += 4;\n            mvhd.creationTime = ByteParserUtils.parseIsoBoxDate(ByteParserUtils.parseUint32(data, offset));\n            offset += 8;\n            mvhd.modificationTime = ByteParserUtils.parseIsoBoxDate(ByteParserUtils.parseUint32(data, offset));\n            offset += 4;\n            mvhd.timescale = ByteParserUtils.parseUint32(data, offset);\n            offset += 8;\n            mvhd.duration = ByteParserUtils.parseUint32(data, offset);\n        } else {\n            mvhd.creationTime = ByteParserUtils.parseIsoBoxDate(ByteParserUtils.parseUint32(data, offset));\n            offset += 4;\n            mvhd.modificationTime = ByteParserUtils.parseIsoBoxDate(ByteParserUtils.parseUint32(data, offset));\n            offset += 4;\n            mvhd.timescale = ByteParserUtils.parseUint32(data, offset);\n            offset += 4;\n            mvhd.duration = ByteParserUtils.parseUint32(data, offset);\n        }\n        offset += 4;\n        mvhd.rate = ByteParserUtils.parseUint16(data, offset) +\n            ByteParserUtils.parseUint16(data, offset + 2) / 16;\n        offset += 4;\n        mvhd.volume = data[offset] + data[offset + 1] / 8;\n        offset += 12;\n        mvhd.matrix = new Uint32Array(data.subarray(offset, offset + (9 * 4)));\n        offset += 9 * 4;\n        mvhd.previewtime = ByteParserUtils.parseUint32(data, offset);\n        offset += 4;\n        mvhd.previewDuration = ByteParserUtils.parseUint32(data, offset);\n        offset += 4;\n        mvhd.posterTime = ByteParserUtils.parseUint32(data, offset);\n        offset += 4;\n        mvhd.selectionTime = ByteParserUtils.parseUint32(data, offset);\n        offset += 4;\n        mvhd.selectionDuration = ByteParserUtils.parseUint32(data, offset);\n        offset += 4;\n        mvhd.currentTime = ByteParserUtils.parseUint32(data, offset);\n        offset += 4;\n        mvhd.nextTrackId = ByteParserUtils.parseUint32(data, offset);\n        return mvhd;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/mvhd.ts","import ByteParserUtils from '../../../utils/byte-parser-utils';\nimport { Atom } from './atom';\n\nexport class Pssh extends Atom {\n    public version: number;\n    public flags: Uint8Array;\n    public systemId: Uint8Array;\n    public kId: Uint8Array[];\n    public data: Uint8Array;\n\n    public static parse(data: Uint8Array): Atom {\n        const pssh: Pssh = new Pssh(Atom.pssh, data.byteLength);\n\n        pssh.version = data[0];\n        pssh.flags = data.subarray(1, 4);\n\n        let offset: number = 4;\n        pssh.systemId = data.subarray(offset, offset + 16);\n        offset += 16;\n\n        if (pssh.version > 0) {\n            const count: number = ByteParserUtils.parseUint32(data, 4);\n            offset += 4;\n            pssh.kId = [];\n            for (let i: number = 0; i < count; i++) {\n                pssh.kId[i] = data.subarray(offset, offset + 16);\n                offset += 16;\n            }\n        }\n\n        const dataSize: number = ByteParserUtils.parseUint32(data, offset);\n        offset += 4;\n        if (dataSize > 0) {\n            pssh.data = data.subarray(offset, offset + 16);\n        }\n        return pssh;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/pssh.ts","import ByteParserUtils from '../../../utils/byte-parser-utils';\nimport {Atom} from './atom';\n\nexport class Reference {\n    constructor(public type: number, public size: number,\n        public subsegmentDuration: number, public startsWithSap: boolean,\n        public sapType: number, public sapDeltaTime: number) {\n    }\n}\n\nexport class Sidx extends Atom {\n    public version: number;\n    public flags: Uint8Array;\n    public referenceId: number;\n    public timescale: number;\n    public earliestPresentationTime: number;\n    public firstOffset: number;\n    public references: Reference[];\n\n    public static parse(data: Uint8Array): Atom {\n        const sidx: Sidx = new Sidx(Atom.sidx, data.byteLength);\n        sidx.version = data[0];\n        sidx.flags = data.subarray(1, 4);\n        sidx.referenceId = ByteParserUtils.parseUint32(data, 4);\n        sidx.timescale = ByteParserUtils.parseUint32(data, 8);\n        let offset: number;\n        if (sidx.version === 0) {\n            sidx.earliestPresentationTime = ByteParserUtils.parseUint32(data, 12);\n            sidx.firstOffset = ByteParserUtils.parseUint32(data, 16);\n            offset = 20;\n        } else {\n            sidx.earliestPresentationTime = ByteParserUtils.parseLong64(data, 12);\n            sidx.firstOffset = ByteParserUtils.parseLong64(data, 20);\n            offset = 28;\n        }\n\n        offset += 2;\n        const referenceCount: number = ByteParserUtils.parseUint16(data, offset);\n        sidx.references = [];\n        offset += 2;\n\n        for (let i: number = 0; i < referenceCount; i++) {\n            sidx.references.push(new Reference(\n                (data[offset] & 0x80) >>> 7,\n                ByteParserUtils.parseUint32(data, offset) & 0x7FFFFFFF,\n                ByteParserUtils.parseUint32(data, offset + 4),\n                !!(data[offset + 8] & 0x80),\n                (data[offset + 8] & 0x70) >>> 4,\n                ByteParserUtils.parseUint32(data, offset + 8) & 0x0FFFFFFF));\n            offset += 12;\n        }\n        return sidx;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/sidx.ts","import ByteParserUtils from '../../../utils/byte-parser-utils';\nimport {Atom} from './atom';\n\nexport class Smhd extends Atom {\n    public version: number;\n    public flags: Uint8Array;\n    public balance: number;\n\n    public static parse(data: Uint8Array): Atom {\n        const smhd: Smhd = new Smhd(Atom.smhd, data.byteLength);\n        smhd.version = data[0];\n        smhd.flags = data.subarray(1, 4);\n        smhd.balance = data[4] + data[5] / 256;\n\n        return smhd;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/smhd.ts","import ByteParserUtils from '../../../utils/byte-parser-utils';\nimport {Atom} from './atom';\n\nexport class Stco extends Atom {\n    public version: number;\n    public flags: Uint8Array;\n    public chunkOffsets: number[];\n\n    public static parse(data: Uint8Array): Atom {\n        const stco: Stco = new Stco(Atom.stco, data.byteLength);\n        stco.version = data[0];\n        stco.flags = data.subarray(1, 4);\n        stco.chunkOffsets = [];\n        const entryCount: number = ByteParserUtils.parseUint32(data, 4);\n        let offset: number = 8;\n        for (let i: number = 0; i < entryCount; i++) {\n            stco.chunkOffsets.push(\n                ByteParserUtils.parseUint32(data, offset));\n            offset += 4;\n        }\n        return stco;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/stco.ts","import ByteParserUtils from '../../../utils/byte-parser-utils';\nimport {Atom} from './atom';\n\nexport class SampleToChunkEntry {\n    constructor(public firstChunk: number, public samplesPerChunk: number,\n        public sampleDescriptionIndex: number) {\n    }\n}\n\nexport class Stsc extends Atom {\n    public version: number;\n    public flags: Uint8Array;\n    public sampleToChunks: SampleToChunkEntry[];\n\n    public static parse(data: Uint8Array): Atom {\n        const stsc: Stsc = new Stsc(Atom.stsc, data.byteLength);\n        stsc.version = data[0];\n        stsc.flags = data.subarray(1, 4);\n        stsc.sampleToChunks = [];\n        const entryCount: number = ByteParserUtils.parseUint32(data, 4);\n        let offset: number = 8;\n        for (let i: number = 0; i < entryCount; i++) {\n            stsc.sampleToChunks.push(new SampleToChunkEntry(\n                ByteParserUtils.parseUint32(data, offset),\n                ByteParserUtils.parseUint32(data, offset + 4),\n                ByteParserUtils.parseUint32(data, offset + 8)));\n            offset += 12;\n        }\n        return stsc;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/stsc.ts","import ByteParserUtils from '../../../utils/byte-parser-utils';\nimport {Atom, ContainerAtom} from './atom';\n\nexport class Stsd extends ContainerAtom {\n    public version: number;\n    public flags: Uint8Array;\n    public entryCount: number;\n\n    public static parse(data: Uint8Array): Atom {\n        const stsd: Stsd = new Stsd(Atom.stsd, data.byteLength);\n        stsd.containerDataOffset = 8;\n\n        stsd.version = data[0];\n        stsd.flags = data.subarray(1, 4);\n        stsd.entryCount = ByteParserUtils.parseUint32(data, 4);\n\n        return stsd;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/stsd.ts","import ByteParserUtils from '../../../utils/byte-parser-utils';\nimport {Atom} from './atom';\n\nexport class Stsz extends Atom {\n    public version: number;\n    public flags: Uint8Array;\n    public sampleSize: number;\n    public entries: number[];\n\n    public static parse(data: Uint8Array): Atom {\n        const stsz: Stsz = new Stsz(Atom.stsz, data.byteLength);\n        stsz.version = data[0];\n        stsz.flags = data.subarray(1, 4);\n        stsz.sampleSize = ByteParserUtils.parseUint32(data, 4);\n        stsz.entries = [];\n\n        for (let i: number = 12; i < data.byteLength; i += 4) {\n            stsz.entries.push(\n                ByteParserUtils.parseUint32(data, i));\n        }\n        return stsz;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/stsz.ts","import ByteParserUtils from '../../../utils/byte-parser-utils';\nimport {Atom} from './atom';\n\nexport class TimeToSampleEntry {\n    constructor(public sampleCount: number, public sampleDelta: number) {\n    }\n}\n\nexport class Stts extends Atom {\n    public version: number;\n    public flags: Uint8Array;\n    public timeToSamples: TimeToSampleEntry[];\n\n    public static parse(data: Uint8Array): Atom {\n        const stts: Stts = new Stts(Atom.stts, data.byteLength);\n        stts.version = data[0];\n        stts.flags = data.subarray(1, 4);\n        stts.timeToSamples = [];\n        const entryCount: number = ByteParserUtils.parseUint32(data, 4);\n        let offset: number = 8;\n        for (let i: number = 0; i < entryCount; i++) {\n            stts.timeToSamples.push(new TimeToSampleEntry(\n                ByteParserUtils.parseUint32(data, offset),\n                ByteParserUtils.parseUint32(data, offset + 4)));\n            offset += 8;\n        }\n        return stts;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/stts.ts","import ByteParserUtils from '../../../utils/byte-parser-utils';\nimport {Atom} from './atom';\n\nexport class Styp extends Atom {\n    public majorBrand: string;\n    public minorVersion: number;\n    public compatibleBrands: string [];\n\n    public static parse(data: Uint8Array): Atom {\n        const styp: Styp = new Styp(Atom.styp, data.byteLength);\n        styp.majorBrand = ByteParserUtils.parseIsoBoxType(data, 0);\n        styp.minorVersion = ByteParserUtils.parseUint32(data, 4);\n        styp.compatibleBrands = [];\n\n        let i: number = 8;\n        while (i < data.byteLength) {\n            styp.compatibleBrands.push(ByteParserUtils.parseIsoBoxType(data, i));\n            i += 4;\n        }\n\n        return styp;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/styp.ts","import ByteParserUtils from '../../../utils/byte-parser-utils';\nimport {Atom} from './atom';\n\nexport class Tfdt extends Atom {\n    public version: number;\n    public flags: Uint8Array;\n    public baseMediaDecodeTime: number;\n\n    public static parse(data: Uint8Array): Atom {\n        const tfdt: Tfdt = new Tfdt(Atom.tfdt, data.byteLength);\n        tfdt.version = data[0];\n        tfdt.flags = data.subarray(1, 4);\n\n        tfdt.baseMediaDecodeTime = ByteParserUtils.parseUint32(data, 4);\n        if (tfdt.version === 1) {\n            tfdt.baseMediaDecodeTime *= Math.pow(2, 32);\n            tfdt.baseMediaDecodeTime += ByteParserUtils.parseUint32(data, 8);\n        }\n\n        return tfdt;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/tfdt.ts","import ByteParserUtils from '../../../utils/byte-parser-utils';\nimport {Atom} from './atom';\n\nexport class Tfhd extends Atom {\n    public version: number;\n    public flags: Uint8Array;\n    public trackId: number;\n    public baseDataOffset: number;\n    public sampleDescriptionIndex: number;\n    public defaultSampleDuration: number;\n    public defaultSampleSize: number;\n    public defaultSampleFlags: number;\n\n    public static parse(data: Uint8Array): Atom {\n        const tfhd: Tfhd = new Tfhd(Atom.tfhd, data.byteLength);\n        tfhd.version = data[0];\n        tfhd.flags = data.subarray(1, 4);\n\n        const baseDataOffsetPresent: boolean = !!(tfhd.flags[2] & 0x01);\n        const sampleDescriptionIndexPresent: boolean = !!(tfhd.flags[2] & 0x02);\n        const defaultSampleDurationPresent: boolean = !!(tfhd.flags[2] & 0x08);\n        const defaultSampleSizePresent: boolean = !!(tfhd.flags[2] & 0x10);\n        const defaultSampleFlagsPresent: boolean = !!(tfhd.flags[2] & 0x20);\n\n        let offset: number = 8;\n        if (baseDataOffsetPresent) {\n            tfhd.baseDataOffset = ByteParserUtils.parseLong64(data, 12);\n            offset += 8;\n        }\n        if (sampleDescriptionIndexPresent) {\n            tfhd.sampleDescriptionIndex = ByteParserUtils.parseUint32(data, offset);\n            offset += 4;\n        }\n        if (defaultSampleDurationPresent) {\n            tfhd.defaultSampleDuration = ByteParserUtils.parseUint32(data, offset);\n            offset += 4;\n        }\n        if (defaultSampleSizePresent) {\n            tfhd.defaultSampleSize = ByteParserUtils.parseUint32(data, offset);\n            offset += 4;\n        }\n        if (defaultSampleFlagsPresent) {\n            tfhd.defaultSampleFlags = ByteParserUtils.parseUint32(data, offset);\n        }\n\n        return tfhd;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/tfhd.ts","import ByteParserUtils from '../../../utils/byte-parser-utils';\nimport {Atom} from './atom';\n\nexport class Tkhd extends Atom {\n    public version: number;\n    public flags: Uint8Array;\n    public creationTime: Date;\n    public modificationTime: Date;\n    public trackId: number;\n    public duration: number;\n    public layer: number;\n    public volume: number;\n    public matrix: Uint32Array;\n    public alternateGroup: number;\n    public width: number;\n    public height: number;\n\n    public static parse(data: Uint8Array): Atom {\n        const tkhd: Tkhd = new Tkhd(Atom.tkhd, data.byteLength);\n        tkhd.version = data[0];\n        tkhd.flags = data.subarray(1, 4);\n\n        let offset: number = 4;\n        if (tkhd.version === 1) {\n            offset += 4;\n            tkhd.creationTime = ByteParserUtils.parseIsoBoxDate(ByteParserUtils.parseUint32(data, offset));\n            offset += 8;\n            tkhd.modificationTime = ByteParserUtils.parseIsoBoxDate(ByteParserUtils.parseUint32(data, offset));\n            offset += 4;\n            tkhd.trackId = ByteParserUtils.parseUint32(data, offset);\n            offset += 12;\n            tkhd.duration = ByteParserUtils.parseUint32(data, offset);\n        } else {\n            tkhd.creationTime = ByteParserUtils.parseIsoBoxDate(ByteParserUtils.parseUint32(data, offset));\n            offset += 4;\n            tkhd.modificationTime = ByteParserUtils.parseIsoBoxDate(ByteParserUtils.parseUint32(data, offset));\n            offset += 4;\n            tkhd.trackId = ByteParserUtils.parseUint32(data, offset);\n            offset += 8;\n            tkhd.duration = ByteParserUtils.parseUint32(data, offset);\n        }\n        offset += 12;\n        tkhd.layer = ByteParserUtils.parseUint16(data, offset);\n        offset += 2;\n        tkhd.alternateGroup = ByteParserUtils.parseUint16(data, offset);\n        offset += 2;\n        tkhd.volume = data[offset] + (data[offset + 1] / 8);\n        offset += 4;\n        tkhd.matrix = new Uint32Array(data.subarray(offset, offset + (9 * 4)));\n        offset += 9 * 4;\n        tkhd.width = ByteParserUtils.parseUint16(data, offset) +\n            (ByteParserUtils.parseUint16(data, offset + 2) / 16);\n        offset += 4;\n        tkhd.height = ByteParserUtils.parseUint16(data, offset) +\n            (ByteParserUtils.parseUint16(data, offset + 2) / 16);\n\n        return tkhd;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/tkhd.ts","import ByteParserUtils from '../../../utils/byte-parser-utils';\nimport {Atom} from './atom';\n\nexport class Trex extends Atom {\n    public version: number;\n    public flags: Uint8Array;\n    public trackId: number;\n    public defaultSampleDescriptionIndex: number;\n    public defaultSampleDuration: number;\n    public defaultSampleSize: number;\n    public sampleDependsOn: number;\n    public sampleIsDependedOn: number;\n    public sampleHasRedundancy: number;\n    public samplePaddingValue: number;\n    public sampleIsDifferenceSample: boolean;\n    public sampleDegradationPriority: number;\n\n    public static parse(data: Uint8Array): Atom {\n        const trex: Trex = new Trex(Atom.trex, data.byteLength);\n\n        trex.version = data[0];\n        trex.flags = new Uint8Array(data.subarray(1, 4)),\n        trex.trackId = ByteParserUtils.parseUint32(data, 4),\n        trex.defaultSampleDescriptionIndex = ByteParserUtils.parseUint32(data, 8);\n        trex.defaultSampleDuration = ByteParserUtils.parseUint32(data, 12);\n        trex.defaultSampleSize = ByteParserUtils.parseUint32(data, 16);\n        trex.sampleDependsOn = data[20] & 0x03;\n        trex.sampleIsDependedOn = (data[21] & 0xc0) >> 6;\n        trex.sampleHasRedundancy = (data[21] & 0x30) >> 4;\n        trex.samplePaddingValue = (data[21] & 0x0e) >> 1;\n        trex.sampleIsDifferenceSample = !!(data[21] & 0x01);\n        trex.sampleDegradationPriority = ByteParserUtils.parseUint32(data, 22);\n\n        return trex;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/trex.ts","import ByteParserUtils from '../../../utils/byte-parser-utils';\nimport { Atom } from './atom';\n\nexport class SampleFlags {\n    constructor(public isLeading: number, public dependsOn: number, public isDependedOn: number,\n        public hasRedundancy: number, public paddingValue: number, public isSyncFrame: boolean,\n        public degradationPriority: number) {\n    }\n}\n\nexport class Sample {\n    public flags: SampleFlags;\n    public duration: number;\n    public size: number;\n    public compositionTimeOffset: number;\n}\n\nexport class Trun extends Atom {\n    public version: number;\n    public flags: Uint8Array;\n    public trackId: number;\n    public dataOffset: number;\n    public samples: Sample[];\n\n    public static parse(data: Uint8Array): Atom {\n        const trun: Trun = new Trun(Atom.trun, data.byteLength);\n        trun.version = data[0];\n        trun.flags = data.subarray(1, 4);\n\n        const dataOffsetPresent: boolean = !!(trun.flags[2] & 0x01);\n        const firstSampleFlagsPresent: boolean = !!(trun.flags[2] & 0x04);\n        const sampleDurationPresent: boolean = !!(trun.flags[1] & 0x01);\n        const sampleSizePresent: boolean = !!(trun.flags[1] & 0x02);\n        const sampleFlagsPresent: boolean = !!(trun.flags[1] & 0x04);\n        const sampleCompositionTimeOffsetPresent: boolean = !!(trun.flags[1] & 0x08);\n\n        let sampleCount: number = ByteParserUtils.parseUint32(data, 4);\n        let offset: number = 8;\n        trun.samples = [];\n        let totalSize: number = 0;\n        if (dataOffsetPresent) {\n            trun.dataOffset = ByteParserUtils.parseUint32(data, offset);\n            offset += 4;\n        }\n        if (firstSampleFlagsPresent && sampleCount) {\n            const sample: Sample = new Sample();\n            sample.flags = Trun.parseFlags(data.subarray(offset, offset + 4));\n            offset += 4;\n            if (sampleDurationPresent) {\n                sample.duration = ByteParserUtils.parseUint32(data, offset);\n                offset += 4;\n            }\n            if (sampleSizePresent) {\n                sample.size = ByteParserUtils.parseUint32(data, offset);\n                totalSize += sample.size;\n                offset += 4;\n            }\n            if (sampleCompositionTimeOffsetPresent) {\n                sample.compositionTimeOffset = ByteParserUtils.parseUint32(data, offset);\n                offset += 4;\n            }\n            trun.samples.push(sample);\n            sampleCount--;\n        }\n        while (sampleCount--) {\n            const sample: Sample = new Sample();\n            if (sampleDurationPresent) {\n                sample.duration = ByteParserUtils.parseUint32(data, offset);\n                offset += 4;\n            }\n            if (sampleSizePresent) {\n                sample.size = ByteParserUtils.parseUint32(data, offset);\n                totalSize += sample.size;\n                offset += 4;\n            }\n            if (sampleFlagsPresent) {\n                sample.flags = Trun.parseFlags(data.subarray(offset, offset + 4));\n                offset += 4;\n            }\n            if (sampleCompositionTimeOffsetPresent) {\n                sample.compositionTimeOffset = ByteParserUtils.parseUint32(data, offset);\n                offset += 4;\n            }\n            trun.samples.push(sample);\n        }\n        console.log('total size: ' + totalSize);\n        return trun;\n    }\n\n    private static parseFlags(data: Uint8Array): SampleFlags {\n        return new SampleFlags(\n            (data[0] & 0x0c) >>> 2,\n            (data[0] & 0x03),\n            (data[1] & 0xc0) >>> 6,\n            (data[1] & 0x30) >>> 4,\n            (data[1] & 0x0e) >>> 1,\n            (data[1] & 0x01) === 0,\n            (data[2] << 8) | data[3]\n        );\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/trun.ts","import ByteParserUtils from '../../../utils/byte-parser-utils';\nimport {Atom} from './atom';\n\nexport class Vmhd extends Atom {\n    public version: number;\n    public flags: Uint8Array;\n    public graphichsMode: number;\n    public opColor: Uint16Array;\n\n    public static parse(data: Uint8Array): Atom {\n        const vmhd: Vmhd = new Vmhd(Atom.vmhd, data.byteLength);\n        vmhd.version = data[0];\n        vmhd.flags = data.subarray(1, 4);\n        vmhd.graphichsMode = ByteParserUtils.parseUint16(data, 4);\n        vmhd.opColor = new Uint16Array([\n            ByteParserUtils.parseUint16(data, 6),\n            ByteParserUtils.parseUint16(data, 8),\n            ByteParserUtils.parseUint16(data, 10)\n        ]);\n        return vmhd;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/vmhd.ts","import ByteParserUtils from '../../utils/byte-parser-utils';\nimport { boxesParsers } from './atoms';\nimport { Atom, ContainerAtom } from './atoms/atom';\nimport Track from '../track';\nimport Mp4Track from './mp4-track';\nimport { Tkhd } from './atoms/tkhd';\nimport IDemuxer from '../demuxer';\nimport Frame from '../frame';\n\nexport default class Mp4Demuxer implements IDemuxer {\n    public tracks: { [id: number] : Track; };\n\n    private data: Uint8Array;\n    private atoms: Atom[];\n    private lastTrackId: number;\n\n    constructor() {\n        this.atoms = [];\n        this.tracks = {};\n    }\n\n    public append(data: Uint8Array): void {\n        this.atoms = this.parseAtoms(data);\n    }\n\n    public end(): void {\n        // do nothing\n    }\n\n    private parseAtoms(data: Uint8Array, offset: number = 0): Atom[] {\n        const atoms: Atom[] = [];\n        this.data = data;\n        let dataOffset: number = offset;\n\n        while (dataOffset < data.byteLength) {\n            const size: number = ByteParserUtils.parseUint32(data, dataOffset);\n            const type: string = ByteParserUtils.parseIsoBoxType(data, dataOffset + 4);\n            const end: number = size > 1 ? dataOffset + size : data.byteLength;\n            const boxData: Uint8Array = data.subarray(dataOffset + 8, end);\n\n            // parse\n            let atom: Atom;\n            if (boxesParsers[type]) {\n                atom = boxesParsers[type](boxData);\n            }\n\n            if (!atom) {\n                // don't know how to parse this box\n                // so let's just add it without parsing its content\n                if (Atom.isContainerBox(type)) {\n                    atom = new ContainerAtom(type, boxData.byteLength);\n                } else {\n                    atom = new Atom(type, boxData.byteLength);\n                }\n            }\n\n            if (atom instanceof ContainerAtom) {\n                (atom as ContainerAtom).atoms = this.parseAtoms(boxData, (atom as ContainerAtom).containerDataOffset);\n            }\n            atoms.push(atom);\n            this.processAtom(atom);\n            dataOffset = end;\n        }\n        return atoms;\n    }\n\n    private processAtom(atom: Atom): void {\n        switch (atom.type) {\n            case Atom.tkhd:\n                this.lastTrackId = (atom as Tkhd).trackId;\n                break;\n\n            case Atom.avcC:\n                if (this.lastTrackId > 0) {\n                    this.tracks[this.lastTrackId] = new Mp4Track(this.lastTrackId,\n                        Track.TYPE_VIDEO, Track.MIME_TYPE_AVC, atom);\n                }\n                break;\n\n            case Atom.hvcC:\n                if (this.lastTrackId > 0) {\n                    this.tracks[this.lastTrackId] = new Mp4Track(this.lastTrackId,\n                        Track.TYPE_VIDEO, Track.MIME_TYPE_HEVC, atom);\n                }\n                break;\n\n            case Atom.mp4a:\n                if (this.lastTrackId > 0) {\n                    this.tracks[this.lastTrackId] = new Mp4Track(this.lastTrackId,\n                        Track.TYPE_AUDIO, Track.MIME_TYPE_AAC, atom);\n                }\n                break;\n\n            case Atom.sidx:\n                this.checkTrack();\n                (this.tracks[this.lastTrackId] as Mp4Track).setSidxAtom(atom);\n                break;\n\n            case Atom.trun:\n                this.checkTrack();\n                (this.tracks[this.lastTrackId] as Mp4Track).setTrunAtom(atom);\n                break;\n        }\n    }\n\n    private checkTrack(): void {\n        if (this.lastTrackId === 0 || !this.tracks[this.lastTrackId]) {\n            this.lastTrackId = 1;\n            this.tracks[this.lastTrackId] = new Mp4Track(this.lastTrackId,\n                Track.TYPE_UNKNOWN, Track.MIME_TYPE_UNKNOWN, null);\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/mp4-demuxer.ts","import Track from '../track';\nimport { Atom } from './atoms/atom';\nimport Frame from '../frame';\nimport { Sidx } from './atoms/sidx';\nimport { Trun } from './atoms/trun';\n\nexport default class Mp4Track extends Track {\n    public frames: Frame[];\n    private sidx: Sidx;\n    private trun: Trun;\n    private lastPts: number;\n\n    constructor(id: number, type: string, mimeType: string, public referenceAtom: Atom) {\n        super(id, type, mimeType);\n        this.frames = [];\n        this.lastPts = 0;\n    }\n\n     public getFrames(): Frame[] {\n         return this.frames;\n     }\n\n     public setSidxAtom(atom: Atom): void {\n         this.sidx = atom as Sidx;\n         this.lastPts = 1000000 * this.sidx.earliestPresentationTime / this.sidx.timescale;\n     }\n\n     public setTrunAtom(atom: Atom): void {\n         this.trun = atom as Trun;\n         for ( const sample of this.trun.samples) {\n            if (sample.flags) {\n                this.frames.push(new Frame(sample.flags.isSyncFrame ? Frame.IDR_FRAME : Frame.P_FRAME, this.lastPts));\n            }\n            if (sample.duration) {\n                this.lastPts += sample.duration;\n            }\n         }\n     }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/mp4-track.ts","import BitReader from '../../utils/bit-reader';\nimport PESReader from './pes-reader';\nimport TSTrack from './ts-track';\nimport Track from '../track';\nimport IDemuxer from '../demuxer';\n\nenum CONTAINER_TYPE {\n    UNKNOWN = 1,\n    MPEG_TS,\n    RAW_AAC,\n}\n\nexport default class MpegTSDemuxer implements IDemuxer {\n    private static MPEGTS_SYNC: number = 0x47;\n    private static MPEGTS_PACKET_SIZE: number = 187;\n\n    public tracks: { [id: number] : Track; };\n\n    private data: Uint8Array;\n    private dataOffset: number;\n    private containerType: number;\n    private pmtParsed: boolean;\n    private packetsCount: number;\n    private pmtId: number;\n\n    constructor () {\n        this.containerType = CONTAINER_TYPE.UNKNOWN;\n        this.pmtParsed = false;\n        this.packetsCount = 0;\n        this.pmtId = -1;\n        this.tracks = {};\n    }\n\n    public append(data: Uint8Array): void {\n        if (!this.data || this.data.byteLength === 0 || this.dataOffset >= this.data.byteLength) {\n            this.data = data;\n            this.dataOffset = 0;\n        } else {\n            const newLen: number = this.data.byteLength + data.byteLength;\n            const temp: Uint8Array = new Uint8Array(newLen);\n            temp.set(this.data, 0);\n            temp.set(data, this.data.byteLength);\n            this.data = temp;\n        }\n\n        this.findContainerType();\n\n        if (this.containerType === CONTAINER_TYPE.MPEG_TS) {\n            this.readHeader();\n            this.readSamples();\n        } else {\n            const dataParser: BitReader = new BitReader(this.data);\n            this.tracks[0] = new TSTrack(0, Track.TYPE_AUDIO, Track.MIME_TYPE_AAC,\n                new PESReader(0, PESReader.TS_STREAM_TYPE_AAC));\n            (this.tracks[0] as TSTrack).pes.appendData(false, dataParser);\n        }\n\n        if (this.dataOffset > 0) {\n            this.data = this.data.subarray(this.dataOffset);\n            this.dataOffset = 0;\n        }\n    }\n\n    public end(): void {\n        for (let id in this.tracks) {\n            if (this.tracks.hasOwnProperty(id)) {\n                (this.tracks[id] as TSTrack).pes.flush();\n            }\n        }\n    }\n\n    private resetTracks(): void {\n        for (let id in this.tracks) {\n            if (this.tracks.hasOwnProperty(id)) {\n                (this.tracks[id] as TSTrack).pes.reset();\n            }\n        }\n    }\n\n    private findContainerType(): void {\n        while (this.dataOffset < this.data.byteLength) {\n            if (this.data[this.dataOffset] === MpegTSDemuxer.MPEGTS_SYNC) {\n                this.containerType = CONTAINER_TYPE.MPEG_TS;\n                break;\n            } else if ((this.data.byteLength - this.dataOffset) >= 4) {\n                const dataRead: number = (this.data[this.dataOffset] << 8) | (this.data[this.dataOffset + 1]);\n                if (dataRead === 0x4944 || (dataRead & 0xfff6) === 0xfff0) {\n                    this.containerType = CONTAINER_TYPE.RAW_AAC;\n                    break;\n                }\n            }\n            this.dataOffset++;\n        }\n\n        if (this.containerType === CONTAINER_TYPE.UNKNOWN) {\n            throw new Error('Format not supported');\n        }\n    }\n\n    private readHeader(): void {\n        while (this.dataOffset < this.data.byteLength - 1) {\n            const byteRead: number = this.data[this.dataOffset];\n            this.dataOffset++;\n\n            if (byteRead === MpegTSDemuxer.MPEGTS_SYNC\n                && (this.data.byteLength - this.dataOffset) >= MpegTSDemuxer.MPEGTS_PACKET_SIZE) {\n\n                const packet: Uint8Array = this.data.subarray(this.dataOffset,\n                    this.dataOffset + MpegTSDemuxer.MPEGTS_PACKET_SIZE);\n                this.dataOffset += MpegTSDemuxer.MPEGTS_PACKET_SIZE;\n\n                this.processTSPacket(packet);\n\n                if (this.pmtParsed) {\n                    break;\n                }\n            }\n        }\n    }\n\n    private readSamples(): void {\n        while (this.dataOffset < this.data.byteLength - 1) {\n            const byteRead: number = this.data[this.dataOffset++];\n\n            if (byteRead === MpegTSDemuxer.MPEGTS_SYNC\n                && (this.data.byteLength - this.dataOffset) >= MpegTSDemuxer.MPEGTS_PACKET_SIZE) {\n\n                const packet: Uint8Array = this.data.subarray(this.dataOffset, this.dataOffset\n                    + MpegTSDemuxer.MPEGTS_PACKET_SIZE);\n                this.dataOffset += MpegTSDemuxer.MPEGTS_PACKET_SIZE;\n\n                this.processTSPacket(packet);\n            }\n        }\n    }\n\n    private processTSPacket(packet: Uint8Array): void {\n        this.packetsCount++;\n\n        let packetParser: BitReader = new BitReader(packet);\n        packetParser.skipBits(1);\n\n        const payloadUnitStartIndicator: boolean = (packetParser.readBits(1) !== 0);\n        packetParser.skipBits(1);\n\n        const pid: number = packetParser.readBits(13);\n        const adaptationField: number = (packetParser.readByte() & 0x30) >> 4;\n        if (adaptationField > 1) {\n            length = packetParser.readByte();\n            if (length > 0) {\n                packetParser.skipBytes(length);\n            }\n        }\n        if (adaptationField === 1 || adaptationField === 3) {\n            if (pid === 0) {\n                this.parseProgramId(payloadUnitStartIndicator, packetParser);\n            } else if (pid === this.pmtId) {\n                this.parseProgramTable(payloadUnitStartIndicator, packetParser);\n            } else {\n                const track: TSTrack = this.tracks[pid] as TSTrack;\n                if (track && track.pes) {\n                    track.pes.appendData(payloadUnitStartIndicator, packetParser);\n                }\n            }\n        }\n    }\n\n    private parseProgramId(payloadUnitStartIndicator: boolean, packetParser: BitReader): void {\n        if (payloadUnitStartIndicator) {\n            packetParser.skipBytes(packetParser.readByte());\n        }\n        packetParser.skipBits(27 + 7 * 8);\n        this.pmtId = packetParser.readBits(13);\n    }\n\n    private parseProgramTable(payloadUnitStartIndicator: boolean, packetParser: BitReader): void {\n        if (payloadUnitStartIndicator) {\n            packetParser.skipBytes(packetParser.readByte());\n        }\n\n        packetParser.skipBits(12);\n        const sectionLength: number = packetParser.readBits(12);\n        packetParser.skipBits(4 + 7 * 8);\n        const programInfoLength: number = packetParser.readBits(12);\n        packetParser.skipBytes(programInfoLength);\n        let bytesRemaining: number = sectionLength - 9 - programInfoLength - 4;\n\n        while (bytesRemaining > 0) {\n            const streamType: number = packetParser.readBits(8);\n            packetParser.skipBits(3);\n            const elementaryPid: number = packetParser.readBits(13);\n            packetParser.skipBits(4);\n            const infoLength: number = packetParser.readBits(12);\n            packetParser.skipBytes(infoLength);\n            bytesRemaining -= infoLength + 5;\n            if (!this.tracks[elementaryPid]) {\n                const pes: PESReader = new PESReader(elementaryPid, streamType);\n                this.tracks[elementaryPid] = new TSTrack(elementaryPid, '', '', pes);\n            }\n        }\n        this.pmtParsed = true;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/ts/mpegts-demuxer.ts","import BitReader from '../../../utils/bit-reader';\nimport PayloadReader from './payload-reader';\nimport Frame from '../../frame';\nimport Track from '../../track';\n\nexport default class AdtsReader extends PayloadReader {\n    private static ADTS_HEADER_SIZE: number = 5;\n    private static ADTS_SYNC_SIZE: number = 2;\n    private static ADTS_CRC_SIZE: number = 2;\n\n    private static STATE_FIND_SYNC: number = 1;\n    private static STATE_READ_HEADER: number = 2;\n    private static STATE_READ_FRAME: number = 3;\n\n    private static ADTS_SAMPLE_RATES: number[] = [96000, 88200, 64000, 48000,\n        44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n\n    public channels: number;\n    public sampleRate: number;\n    public frameDuration: number;\n    public currentFrameSize: number;\n\n    private state: number;\n\n    constructor () {\n        super();\n        this.channels = 0;\n        this.sampleRate = 0;\n        this.frameDuration = 0;\n        this.currentFrameSize = 0;\n        this.state = AdtsReader.STATE_FIND_SYNC;\n        this.dataOffset = 0;\n    }\n\n    public getMimeType(): string {\n        return Track.MIME_TYPE_AAC;\n    }\n\n    public consumeData(pts: number): void {\n        if (!this.dataBuffer) {\n            return;\n        }\n        if (pts >= 0) {\n            this.timeUs = pts;\n        }\n\n        if (this.firstTimestamp === -1) {\n            this.firstTimestamp = this.timeUs;\n        }\n\n        while (this.dataOffset < this.dataBuffer.byteLength) {\n            if (this.state === AdtsReader.STATE_FIND_SYNC) {\n                this.findNextSync();\n            } else if (this.state === AdtsReader.STATE_READ_HEADER) {\n                if (this.dataBuffer.byteLength - this.dataOffset < (AdtsReader.ADTS_HEADER_SIZE +\n                    AdtsReader.ADTS_SYNC_SIZE)) {\n                    break;\n                }\n                this.parseAACHeader();\n            } else if (this.state === AdtsReader.STATE_READ_FRAME) {\n                if ((this.dataBuffer.byteLength - this.dataOffset) < (AdtsReader.ADTS_SYNC_SIZE +\n                    AdtsReader.ADTS_HEADER_SIZE + this.currentFrameSize)) {\n                    break;\n                }\n                this.frames.push(new Frame(Frame.IDR_FRAME, this.timeUs));\n                this.timeUs = this.timeUs + this.frameDuration;\n\n                this.dataOffset += (AdtsReader.ADTS_SYNC_SIZE + AdtsReader.ADTS_HEADER_SIZE +\n                    this.currentFrameSize);\n                this.state = AdtsReader.STATE_FIND_SYNC;\n            }\n        }\n\n        this.dataBuffer = this.dataBuffer.subarray(this.dataOffset);\n        this.dataOffset = 0;\n    }\n\n    private findNextSync(): void {\n        const limit: number = this.dataBuffer.byteLength - 1;\n        for (let i: number = this.dataOffset; i < limit; i++) {\n            const dataRead: number = (((this.dataBuffer[i]) << 8) | (this.dataBuffer[i + 1]));\n            if ((dataRead & 0xfff6) === 0xfff0) {\n                this.dataOffset = i;\n                if (this.dataOffset < this.dataBuffer.byteLength) {\n                    this.state = AdtsReader.STATE_READ_HEADER;\n                }\n                return;\n            }\n        }\n\n        this.dataOffset = this.dataBuffer.byteLength;\n    }\n\n    private parseAACHeader(): void {\n        const aacHeaderParser: BitReader = new BitReader(this.dataBuffer.subarray(this.dataOffset,\n            this.dataOffset + AdtsReader.ADTS_SYNC_SIZE + AdtsReader.ADTS_HEADER_SIZE));\n\n        aacHeaderParser.skipBits(15);\n        const hasCrc: boolean = !aacHeaderParser.readBool();\n        aacHeaderParser.skipBits(2);\n        const sampleRateIndex: number = aacHeaderParser.readBits(4);\n        if (sampleRateIndex < AdtsReader.ADTS_SAMPLE_RATES.length) {\n            this.sampleRate = AdtsReader.ADTS_SAMPLE_RATES[sampleRateIndex];\n        } else {\n            this.sampleRate = sampleRateIndex;\n        }\n\n        this.frameDuration = (1000000 * 1024) / this.sampleRate;\n\n        aacHeaderParser.skipBits(1);\n        this.channels = aacHeaderParser.readBits(3);\n\n        aacHeaderParser.skipBits(4);\n        this.currentFrameSize = aacHeaderParser.readBits(13) - AdtsReader.ADTS_HEADER_SIZE\n            - AdtsReader.ADTS_SYNC_SIZE;\n\n        if (hasCrc) {\n            this.currentFrameSize -= AdtsReader.ADTS_CRC_SIZE;\n        }\n\n        this.state = AdtsReader.STATE_READ_FRAME;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/ts/payload/adts-reader.ts","import BitReader from '../../../utils/bit-reader';\nimport PayloadReader from './payload-reader';\nimport Frame from '../../frame';\nimport SPSParser from '../../../codecs/h264/sps-parser';\nimport {Sps} from '../../../codecs/h264/nal-units';\nimport Track from '../../track';\n\nenum NAL_UNIT_TYPE {\n    SLICE = 1,\n    DPA,\n    DPB,\n    DPC,\n    IDR,\n    SEI,\n    SPS,\n    PPS,\n    AUD,\n    END_SEQUENCE,\n    END_STREAM\n}\n\nenum SLICE_TYPE {\n    P = 0,\n    B,\n    I,\n    SP,\n    SI\n}\n\nexport class Fraction {\n    constructor(public num: number, public den: number) {\n        // do nothing\n    }\n}\n\nexport default class H264Reader extends PayloadReader {\n    public sps: Sps;\n    public pendingBytes: number;\n\n    constructor() {\n        super();\n        this.pendingBytes = 0;\n    }\n\n    public getMimeType(): string {\n        return Track.MIME_TYPE_AVC;\n    }\n\n    public flush(pts: number): void {\n        if (this.dataBuffer.byteLength > 0) {\n            this.consumeData(pts);\n\n            if (this.dataBuffer.byteLength > 0) {\n                const offset: number = this.findNextNALUnit(0);\n                if (offset < this.dataBuffer.byteLength) {\n                    this.processNALUnit(offset, this.dataBuffer.byteLength, this.dataBuffer[offset + 3] & 0x1F);\n                }\n            }\n        }\n    }\n\n    public consumeData(pts: number): void {\n        if (!this.dataBuffer) {\n            return;\n        }\n        if (this.firstTimestamp === -1) {\n            this.timeUs = this.firstTimestamp = pts;\n        }\n\n        // process any possible reminding data\n        let nextNalUnit: number = 0;\n        let offset: number = 0;\n        if (this.pendingBytes) {\n            nextNalUnit = this.findNextNALUnit(this.pendingBytes);\n            if (nextNalUnit < this.dataBuffer.byteLength) {\n                this.processNALUnit(0, nextNalUnit, this.dataBuffer[offset + 3] & 0x1F);\n                offset = nextNalUnit;\n            }\n            this.pendingBytes = 0;\n        } else {\n            offset = this.findNextNALUnit(0);\n        }\n\n        // process next nal units in the buffer\n        if (pts !== -1) {\n            this.timeUs = pts;\n        }\n\n        if (this.dataBuffer.byteLength > 0) {\n            while (nextNalUnit < this.dataBuffer.byteLength) {\n                nextNalUnit = this.findNextNALUnit(offset + 3);\n                if (nextNalUnit < this.dataBuffer.byteLength) {\n                    this.processNALUnit(offset, nextNalUnit, this.dataBuffer[offset + 3] & 0x1F);\n                    offset = nextNalUnit;\n                }\n            }\n            this.dataBuffer = this.dataBuffer.subarray(offset);\n            this.pendingBytes = this.dataBuffer.byteLength;\n        }\n    }\n\n    private findNextNALUnit(index: number): number {\n        const limit: number = this.dataBuffer.byteLength - 3;\n        for (let i: number = index; i < limit; i++) {\n            if (this.dataBuffer[i] === 0 && this.dataBuffer[i + 1] === 0 && this.dataBuffer[i + 2] === 1) {\n                return i;\n            }\n        }\n\n        return this.dataBuffer.byteLength;\n    }\n\n    private processNALUnit(start: number, limit: number, nalType: number): void {\n        if (nalType === NAL_UNIT_TYPE.SPS) {\n            this.parseSPSNALUnit(start, limit);\n        } else if (nalType === NAL_UNIT_TYPE.AUD) {\n            this.parseAUDNALUnit(start, limit);\n        } else if (nalType === NAL_UNIT_TYPE.IDR) {\n            this.addNewFrame(SLICE_TYPE.I);\n        } else if (nalType === NAL_UNIT_TYPE.SEI) {\n            this.parseSEINALUnit(start, limit);\n        } else if (nalType === NAL_UNIT_TYPE.SLICE) {\n            this.parseSliceNALUnit(start, limit);\n        }\n    }\n\n    private parseSPSNALUnit(start: number, limit: number): void {\n        this.sps = SPSParser.parseSPS(this.dataBuffer.subarray(start + 4, limit));\n    }\n\n    private skipScalingList(parser: BitReader, size: number): void {\n        let lastScale: number = 8;\n        let nextScale: number = 8;\n        for (let i: number = 0; i < size; i++) {\n            if (nextScale !== 0) {\n                const deltaScale: number = parser.readSEG();\n                nextScale = (lastScale + deltaScale + 256) % 256;\n            }\n            if (nextScale !== 0) {\n                lastScale = nextScale;\n            }\n        }\n    }\n\n    private parseSEINALUnit(start: number, limit: number): void {\n        let seiParser: BitReader = new BitReader(this.dataBuffer.subarray(start, limit));\n        seiParser.skipBytes(4);\n\n        while (seiParser.remainingBytes() > 0) {\n            const data: number = seiParser.readByte();\n            if (data !== 0xFF) {\n                break;\n            }\n        }\n\n        // parse payload size\n        while (seiParser.remainingBytes() > 0) {\n            const data: number = seiParser.readByte();\n            if (data !== 0xFF) {\n                break;\n            }\n        }\n\n        seiParser.destroy();\n        seiParser = null;\n    }\n\n    private parseSliceNALUnit(start: number, limit: number): void {\n        let sliceParser: BitReader = new BitReader(this.dataBuffer.subarray(start, limit));\n        sliceParser.skipBytes(4);\n        sliceParser.readUEG();\n        const sliceType: number = sliceParser.readUEG();\n        this.addNewFrame(sliceType);\n        sliceParser.destroy();\n        sliceParser = null;\n    }\n\n    private parseAUDNALUnit(start: number, limit: number): void {\n        // const audParser: BitReader = new BitReader(this.dataBuffer.subarray(start, limit));\n        // audParser.skipBytes(4);\n    }\n\n    private getSliceTypeName(sliceType: number): string {\n        if (sliceType > 4) {\n            sliceType = sliceType - 5;\n        }\n        switch (sliceType) {\n            case SLICE_TYPE.B:\n                return Frame.B_FRAME;\n            case SLICE_TYPE.I:\n                return Frame.IDR_FRAME;\n            case SLICE_TYPE.P:\n                return Frame.P_FRAME;\n            case SLICE_TYPE.SI:\n                return 'SI';\n            case SLICE_TYPE.SP:\n                return 'SP';\n            default:\n                return 'Unknown';\n        }\n    }\n\n    private getNALUnitName(nalType: number): string {\n        switch (nalType) {\n            case NAL_UNIT_TYPE.SLICE:\n                return 'SLICE';\n            case NAL_UNIT_TYPE.SEI:\n                return 'SEI';\n            case NAL_UNIT_TYPE.PPS:\n                return 'PPS';\n            case NAL_UNIT_TYPE.SPS:\n                return 'SPS';\n            case NAL_UNIT_TYPE.AUD:\n                return 'AUD';\n            case NAL_UNIT_TYPE.IDR:\n                return 'IDR';\n            case NAL_UNIT_TYPE.END_SEQUENCE:\n                return 'END SEQUENCE';\n            case NAL_UNIT_TYPE.END_STREAM:\n                return 'END STREAM';\n            default:\n                return 'Unknown';\n        }\n    }\n\n     private addNewFrame(frameType: number): void {\n        this.frames.push(new Frame(this.getSliceTypeName(frameType), this.timeUs));\n     }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/ts/payload/h264-reader.ts","import PayloadReader from './payload-reader';\nimport Track from '../../track';\n\nexport default class ID3Reader extends PayloadReader {\n\n    public getMimeType(): string {\n        return Track.MIME_TYPE_ID3;\n    }\n\n    public consumeData(pts: number): void {\n        // do nothing\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/ts/payload/id3-reader.ts","import ByteParserUtils from '../../../utils/byte-parser-utils';\nimport PayloadReader from './payload-reader';\nimport Frame from '../../frame';\n\nexport default class MpegReader extends PayloadReader {\n    private static STATE_FIND_SYNC: number = 1;\n    private static STATE_READ_HEADER: number = 2;\n    private static STATE_READ_FRAME: number = 3;\n\n    private static HEADER_SIZE: number = 4;\n\n    private static SAMPLING_RATE_V1: number[] = [44100, 48000, 32000];\n    private static BITRATE_V1_L1: number[] =\n      [32, 64, 96, 128, 160, 192, 224, 256, 288, 320, 352, 384, 416, 448];\n    private static BITRATE_V2_L1: number[] =\n      [32, 48, 56, 64, 80, 96, 112, 128, 144, 160, 176, 192, 224, 256];\n    private static BITRATE_V1_L2: number[] =\n      [32, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 384];\n    private static BITRATE_V1_L3: number[] =\n      [32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320];\n    private static BITRATE_V2: number[] =\n      [8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144, 160];\n    private static MIME_TYPE_BY_LAYER: string[] =\n        ['mpeg-L1', 'mpeg-L2', 'mpeg'];\n\n    public channels: number;\n    public bitrate: number;\n    public sampleRate: number;\n    public samplesPerFrame: number;\n    public currentFrameSize: number;\n    public frameDuration: number;\n    public mimeType: string;\n\n    private state: number;\n\n    constructor () {\n        super();\n        this.channels = 0;\n        this.sampleRate = 0;\n        this.samplesPerFrame = 0;\n        this.currentFrameSize = 0;\n        this.frameDuration = 0;\n        this.mimeType = MpegReader.MIME_TYPE_BY_LAYER[2];\n        this.state = MpegReader.STATE_FIND_SYNC;\n        this.dataOffset = 0;\n    }\n\n    public getMimeType(): string {\n        return 'audio/' + this.mimeType;\n    }\n\n    public consumeData(pts: number): void {\n        if (!this.dataBuffer) {\n            return;\n        }\n        if (pts >= 0) {\n            this.timeUs = pts;\n        }\n        if (this.firstTimestamp === -1) {\n            this.firstTimestamp = this.timeUs;\n        }\n        while (this.dataOffset < this.dataBuffer.byteLength) {\n            if (this.state ===  MpegReader.STATE_FIND_SYNC) {\n                this.findHeader();\n            } else if (this.state === MpegReader.STATE_READ_HEADER) {\n                if (!this.readHeader()) {\n                    break;\n                }\n            } else if (this.state === MpegReader.STATE_READ_FRAME) {\n                const len: number = this.readFrame();\n                if (len === 0) {\n                    break;\n                }\n                this.dataOffset += len;\n            }\n        }\n        this.dataBuffer = this.dataBuffer.subarray(this.dataOffset);\n        this.dataOffset = 0;\n    }\n\n    private findHeader(): void {\n        const limit: number = this.dataBuffer.byteLength - 1;\n        let lastByteWasFF: boolean = false;\n        for (let i: number = this.dataOffset; i < limit; i++) {\n            const isFF: boolean = ((this.dataBuffer[i]) & 0xFF) === 0XFF;\n            const found: boolean = lastByteWasFF && ((this.dataBuffer[i] & 0xE0) === 0xE0);\n            lastByteWasFF = isFF;\n\n            if (found) {\n                lastByteWasFF = false;\n                this.state = MpegReader.STATE_READ_HEADER;\n                this.dataOffset = i - 1;\n                return;\n            }\n        }\n\n        this.dataOffset = this.dataBuffer.byteLength;\n    }\n\n    private readHeader(): boolean {\n        if (this.dataBuffer.byteLength - this.dataOffset < MpegReader.HEADER_SIZE) {\n            return false;\n        }\n\n        const header: number = ByteParserUtils.parseUint32(this.dataBuffer, this.dataOffset);\n        if (!this.parseHeader(header)) {\n            this.state = MpegReader.STATE_FIND_SYNC;\n            this.dataOffset++;\n        } else {\n            this.state = MpegReader.STATE_READ_FRAME;\n        }\n        return true;\n    }\n\n    private parseHeader(header: number): boolean {\n        if ((header & 0xFFE00000) >>> 0 !== 0xFFE00000) {\n            console.log(header);\n            return false;\n        }\n\n        const version: number = (header >>> 19) & 3;\n        if (version === 1) {\n            return false;\n        }\n\n        const layer: number = (header >>> 17) & 3;\n        if (layer === 0) {\n            return false;\n        }\n\n        const bitrateIndex: number = (header >>> 12) & 15;\n        const sampleRateIndex: number = (header >>> 10) & 3;\n        if (sampleRateIndex >= MpegReader.SAMPLING_RATE_V1.length) {\n            return false;\n        }\n\n        const sampleRate: number = MpegReader.SAMPLING_RATE_V1[sampleRateIndex];\n        if (version === 2) {\n            this.sampleRate = sampleRate / 2;\n        } else if (version === 0) {\n            this.sampleRate = sampleRate / 4;\n        } else {\n            this.sampleRate = sampleRate;\n        }\n\n        const padding: number = (header >>> 9) & 1;\n        this.channels = ((header >> 6) & 3) === 3 ? 1 : 2;\n        this.mimeType = MpegReader.MIME_TYPE_BY_LAYER[3 - layer];\n        if (layer === 3) {\n            this.bitrate = (version === 3) ? MpegReader.BITRATE_V1_L1[bitrateIndex - 1] :\n                MpegReader.BITRATE_V2_L1[bitrateIndex - 1];\n            this.samplesPerFrame = 384;\n            this.currentFrameSize = Math.floor(this.samplesPerFrame * (this.bitrate * 1000 / 8) / this.sampleRate) + padding;\n        } else {\n            if (version === 3) {\n                this.bitrate = (layer === 2) ? MpegReader.BITRATE_V1_L2[bitrateIndex - 1] :\n                    MpegReader.BITRATE_V1_L3[bitrateIndex - 1];\n                this.samplesPerFrame = 1152;\n                this.currentFrameSize = Math.floor(this.samplesPerFrame * (this.bitrate * 1000 / 8) / this.sampleRate) + padding;\n            } else {\n                // Version 2 or 2.5.\n                this.bitrate = MpegReader.BITRATE_V2[bitrateIndex - 1];\n                this.samplesPerFrame = (layer === 1) ? 576 : 1152;\n                this.currentFrameSize = Math.floor(this.samplesPerFrame * (this.bitrate * 1000 / 8) / this.sampleRate) + padding;\n            }\n        }\n        this.frameDuration = (1000000 * this.samplesPerFrame) / this.sampleRate;\n\n        return true;\n    }\n\n    private readFrame(): number {\n        if ((this.dataBuffer.byteLength - this.dataOffset) < (MpegReader.HEADER_SIZE + this.currentFrameSize)) {\n            return 0;\n        }\n        this.state = MpegReader.STATE_FIND_SYNC;\n        this.frames.push(new Frame(Frame.IDR_FRAME, this.timeUs));\n        this.timeUs = this.timeUs + this.frameDuration;\n        return MpegReader.HEADER_SIZE + this.currentFrameSize;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/ts/payload/mpeg-reader.ts","import PayloadReader from './payload-reader';\n\nexport default class UnknownReader extends PayloadReader {\n\n    public getMimeType(): string {\n        return 'unknown';\n    }\n\n    public consumeData(pts: number): void {\n        // do nothing\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/ts/payload/unknown-reader.ts","import BitReader from '../../utils/bit-reader';\nimport PayloadReader from './payload/payload-reader';\nimport UnknownReader from './payload/unknown-reader';\nimport AdtsReader from './payload/adts-reader';\nimport H264Reader from './payload/h264-reader';\nimport ID3Reader from './payload/id3-reader';\nimport MpegReader from './payload/mpeg-reader';\n\nexport default class PESReader {\n    public static TS_STREAM_TYPE_AAC: number = 0x0F;\n    public static TS_STREAM_TYPE_H264: number = 0x1B;\n    public static TS_STREAM_TYPE_ID3: number = 0x15;\n    public static TS_STREAM_TYPE_MPA: number = 0x03;\n    public static TS_STREAM_TYPE_MPA_LSF: number = 0x04;\n    public static TS_STREAM_TYPE_METADATA: number = 0x06;\n\n    public payloadReader: PayloadReader;\n\n    private lastPts: number;\n    private pesLength: number;\n\n    constructor(public pid: number, public type: number) {\n        this.pid = pid;\n        this.type = type;\n        this.lastPts = -1;\n        this.pesLength = 0;\n\n        if (type === PESReader.TS_STREAM_TYPE_AAC) {\n            this.payloadReader = new AdtsReader();\n        } else if (type === PESReader.TS_STREAM_TYPE_H264) {\n            this.payloadReader = new H264Reader();\n        } else if (type === PESReader.TS_STREAM_TYPE_ID3) {\n            this.payloadReader = new ID3Reader();\n        } else if (type === PESReader.TS_STREAM_TYPE_MPA || type === PESReader.TS_STREAM_TYPE_MPA_LSF) {\n            this.payloadReader = new MpegReader();\n        } else if (type === PESReader.TS_STREAM_TYPE_METADATA) {\n            // do nothing\n        } else {\n            this.payloadReader = new UnknownReader();\n        }\n    }\n\n    public static ptsToTimeUs(pts: number): number {\n        return (pts * 1000000) / 90000;\n    }\n\n    public appendData(payloadUnitStartIndicator: boolean, packet: BitReader): void {\n        if (payloadUnitStartIndicator) {\n            if (this.payloadReader) {\n                this.payloadReader.consumeData(this.lastPts);\n            }\n            this.parsePESHeader(packet);\n        }\n\n        if (this.payloadReader) {\n            this.payloadReader.append(packet);\n        }\n    }\n\n    public parsePESHeader(packet: BitReader): void {\n        packet.skipBytes(7);\n        const timingFlags: number = packet.readByte();\n        if (timingFlags & 0xC0) {\n            packet.skipBytes(1);\n            let pts: number;\n            pts = (packet.readByte() & 0x0E) << 27 |\n                (packet.readByte() & 0xFF) << 20 |\n                (packet.readByte() & 0xFE) << 12 |\n                (packet.readByte() & 0xFF) << 5;\n            const val: number = packet.readByte();\n            pts |= (val & 0xFE) >>> 3;\n            pts = pts << 2;\n            pts += (val & 0x06) >>> 1;\n            this.lastPts = PESReader.ptsToTimeUs(pts);\n        }\n    }\n\n    public reset(): void {\n        if (this.payloadReader) {\n            this.payloadReader.reset();\n        }\n    }\n\n    public flush(): void {\n        if (this.payloadReader) {\n            this.payloadReader.flush(this.lastPts);\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/ts/pes-reader.ts","import Track from '../track';\nimport Frame from '../frame';\nimport PESReader from './pes-reader';\n\nexport default class TSTrack extends Track {\n    constructor(id: number, type: string, mimeType: string, public pes: PESReader) {\n        super(id, type, mimeType);\n    }\n\n    public getType(): string {\n        const mimeType: string = this.getMimeType();\n        if (mimeType) {\n            const pos: number = mimeType.indexOf('/');\n            if (pos > 0) {\n                return mimeType.substring(0, pos);\n            }\n        }\n        return '';\n    }\n\n    public getMimeType(): string {\n        if (this.pes && this.pes.payloadReader) {\n            return this.pes.payloadReader.getMimeType();\n        }\n        return super.getMimeType();\n    }\n\n    public getDuration(): number {\n        if (this.pes && this.pes.payloadReader) {\n            return this.pes.payloadReader.getDuration();\n        }\n        return 0;\n    }\n\n    public getFrames(): Frame[] {\n        if (this.pes && this.pes.payloadReader) {\n            return this.pes.payloadReader.frames;\n        }\n        return [];\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/ts/ts-track.ts"],"sourceRoot":""}