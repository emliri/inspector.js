{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///inspectorjs-lib.min.js","webpack:///webpack/bootstrap 468c5f9a0dc136badaf1?2039","webpack:///./src/demuxer/mp4/atoms/atom.ts?aebf","webpack:///./src/utils/byte-parser-utils.ts?9910","webpack:///./src/demuxer/track.ts?6a4d","webpack:///./src/demuxer/ts/payload/payload-reader.ts?fc02","webpack:///./src/demuxer/frame.ts?0937","webpack:///./src/utils/bit-reader.ts?a2d9","webpack:///./src/demuxer/mp4/atoms/helpers/video-atom.ts?fdd1","webpack:///./src/codecs/h264/sps-parser.ts?4eb6","webpack:///./src/index.ts?eac3","webpack:///./src/codecs/h264/nal-units.ts?873e","webpack:///./src/demuxer/mp4/atoms/avc1.ts?e264","webpack:///./src/demuxer/mp4/atoms/avcC.ts?2b35","webpack:///./src/demuxer/mp4/atoms/dref.ts?7911","webpack:///./src/demuxer/mp4/atoms/emsg.ts?04bf","webpack:///./src/demuxer/mp4/atoms/esds.ts?100c","webpack:///./src/demuxer/mp4/atoms/ftyp.ts?7474","webpack:///./src/demuxer/mp4/atoms/hdlr.ts?75d1","webpack:///./src/demuxer/mp4/atoms/helpers/audio-atom.ts?3e9e","webpack:///./src/demuxer/mp4/atoms/hev1.ts?9542","webpack:///./src/demuxer/mp4/atoms/hvc1.ts?6b89","webpack:///./src/demuxer/mp4/atoms/hvcC.ts?ca87","webpack:///./src/demuxer/mp4/atoms/index.ts?3769","webpack:///./src/demuxer/mp4/atoms/mdat.ts?5a33","webpack:///./src/demuxer/mp4/atoms/mdhd.ts?1e88","webpack:///./src/demuxer/mp4/atoms/mfhd.ts?9abc","webpack:///./src/demuxer/mp4/atoms/mp4a.ts?a25f","webpack:///./src/demuxer/mp4/atoms/mvhd.ts?cd6c","webpack:///./src/demuxer/mp4/atoms/pssh.ts?30be","webpack:///./src/demuxer/mp4/atoms/sidx.ts?ad50","webpack:///./src/demuxer/mp4/atoms/smhd.ts?b2ef","webpack:///./src/demuxer/mp4/atoms/stco.ts?83d2","webpack:///./src/demuxer/mp4/atoms/stsc.ts?298c","webpack:///./src/demuxer/mp4/atoms/stsd.ts?ba6b","webpack:///./src/demuxer/mp4/atoms/stsz.ts?3de8","webpack:///./src/demuxer/mp4/atoms/stts.ts?c1a6","webpack:///./src/demuxer/mp4/atoms/styp.ts?f956","webpack:///./src/demuxer/mp4/atoms/tfdt.ts?6f5e","webpack:///./src/demuxer/mp4/atoms/tfhd.ts?7c98","webpack:///./src/demuxer/mp4/atoms/tkhd.ts?dc56","webpack:///./src/demuxer/mp4/atoms/trex.ts?b291","webpack:///./src/demuxer/mp4/atoms/trun.ts?5f83","webpack:///./src/demuxer/mp4/atoms/vmhd.ts?3eeb","webpack:///./src/demuxer/mp4/mp4-demuxer.ts?9676","webpack:///./src/demuxer/mp4/mp4-track.ts?fd4e","webpack:///./src/demuxer/ts/mpegts-demuxer.ts?af4e","webpack:///./src/demuxer/ts/payload/adts-reader.ts?9198","webpack:///./src/demuxer/ts/payload/h264-reader.ts?6b2c","webpack:///./src/demuxer/ts/payload/id3-reader.ts?a5d7","webpack:///./src/demuxer/ts/payload/mpeg-reader.ts?895f","webpack:///./src/demuxer/ts/payload/unknown-reader.ts?54d4","webpack:///./src/demuxer/ts/pes-reader.ts?9860","webpack:///./src/demuxer/ts/ts-track.ts?8ba8"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__extends","extendStatics","setPrototypeOf","__proto__","Array","b","__","constructor","create","Atom","type","size","isContainerBox","moov","trak","mdia","minf","stbl","moof","traf","mvex","stsd","mp4a","avc1","dref","dinf","ftyp","styp","avc3","hvc1","hev1","s263","d263","vp08","vp09","mdat","wave","ac_3","dac3","ec_3","dec3","dtsc","dtsh","dtsl","dtse","ddts","tfdt","tfhd","trex","trun","sidx","mvhd","avcC","hvcC","vpcC","esds","tkhd","edts","elst","mdhd","hdlr","pssh","sinf","schm","schi","tenc","encv","enca","frma","saiz","saio","uuid","senc","pasp","TTML","vmhd","mp4v","stts","stss","ctts","stsc","stsz","stco","co64","tx3g","wvtt","stpp","samr","sawb","url","smhd","mfhd","emsg","ContainerAtom","_super","_this","containerDataOffset","Mp4SampleFlags","ByteParserUtils","parseStringWithLength","buffer","offset","end","result","strLength","maxOffset","Math","min","String","fromCharCode","parseNullTerminatedString","parseUint32","parseLong64","parseUint16","parseIsoBoxType","parseIsoBoxDate","seconds","Date","parseIsoBoxSampleFlags","flags","isLeading","dependsOn","isDependedOn","hasRedundancy","paddingValue","isNonSyncSample","degradationPriority","default","Track","id","mimeType","getType","getMimeType","getFrames","TYPE_VIDEO","TYPE_AUDIO","TYPE_TEXT","TYPE_UNKNOWN","MIME_TYPE_AAC","MIME_TYPE_AVC","MIME_TYPE_HEVC","MIME_TYPE_MPEG","MIME_TYPE_MPEG_L1","MIME_TYPE_MPEG_l2","MIME_TYPE_ID3","MIME_TYPE_UNKNOWN","PayloadReader","firstTimestamp","timeUs","frames","append","packet","dataToAppend","subarray","bytesOffset","dataBuffer","newLen","byteLength","remainingBytes","temp","Uint8Array","set","reset","dataOffset","flush","pts","consumeData","Error","getDuration","getLastPTS","getFirstPTS","Frame","frameType","IDR_FRAME","P_FRAME","B_FRAME","BitReader","readByte","readBits","workingBytesAvailable","workingWord","workingBitsAvailable","loadWord","destroy","bitsAvailable","skipBytes","count","skipBits","floor","skipUEG","skipLeadingZeros","skipSEG","readUEG","clz","readSEG","val","readBool","bits","position","workingBytes","availableBytes","DataView","getUint32","leadingZeroCount","byte_parser_utils_1","atom_1","VideoAtom","apply","arguments","fillVideoAtom","atom","data","dataReferenceIndex","temporalQuality","spatialQuality","width","height","horizontalResolution","verticalResolution","frameCount","compressorName","depth","bit_reader_1","nal_units_1","SPSParser","parseSPS","gb","profile_idc","level_idc","profile_string","getProfileString","level_string","getLevelString","chroma_format_idc","chroma_format","chroma_format_table","bit_depth","scaling_list_count","skipScalingList","pic_order_cnt_type","num_ref_frames_in_pic_order_cnt_cycle","pic_width_in_mbs_minus1","pic_height_in_map_units_minus1","frame_mbs_only_flag","frame_crop_left_offset","frame_crop_right_offset","frame_crop_top_offset","frame_crop_bottom_offset","sar_width","sar_height","fps","fps_fixed","fps_num","fps_den","aspect_ratio_idc","sar_w_table","sar_h_table","num_units_in_tick","time_scale","sarScale","crop_unit_x","crop_unit_y","sub_wc","sub_hc","codec_width","codec_height","present_width","ceil","Sps","getChromaFormatString","FrameRate","Size","toFixed","chroma","last_scale","next_scale","delta_scale","createMpegTSDemuxer","mpegts_demuxer_1","createMp4Demuxer","mp4_demuxer_1","fixed","fpsDen","fpsNum","profile","level","bitDepth","chromaFormat","chromaFormatStr","frameRate","sar","codecSize","presentSize","video_atom_1","Avc1","parse","sps_parser_1","AvcC","version","profileCompatibility","lengthSizeMinusOne","numOfSequenceParameterSets","sps","spsParsed","spsSize","push","numOfPictureParameterSets","pps","ppsSize","Dref","Emsg","schemeIdUri","length","timescale","presentationTimeDelta","eventDuration","DecoderConfigDescriptor","tag","audioObjectType","samplingFrequencyIndex","channelConfiguration","DecoderConfig","objectProfileIndication","streamType","bufferSize","maxBitrate","avgBitrate","decoderConfigDescriptor","Esds","esId","streamPriority","decoderConfig","Ftyp","majorBrand","minorVersion","compatibleBrands","Hdlr","handlerType","decodeURIComponent","AudioAtom","fillAudioAtom","channelCount","sampleSize","sampleRate","Hev1","Hvc1","HvcC","aux","profileSpace","tierFlag","profileIdc","constraintIndicator","levelIdc","spatialSegmentationIdc","parallelismType","bitDepthLumaMinus8","bitDepthChromaMinus8","avgFrameRate","constantFrameRate","numTemporalLayers","temporalIdNested","ftyp_1","stsd_1","avc1_1","avcC_1","mvhd_1","trex_1","tkhd_1","mdhd_1","hdlr_1","vmhd_1","dref_1","stts_1","stsc_1","stsz_1","stco_1","smhd_1","mp4a_1","esds_1","sidx_1","tfhd_1","tfdt_1","trun_1","mfhd_1","mdat_1","emsg_1","styp_1","pssh_1","hvcC_1","hvc1_1","hev1_1","boxesParsers","Stsd","Mvhd","Trex","Tkhd","Mdhd","Vmhd","Stts","Stsc","Stsz","Stco","Smhd","Mp4a","Sidx","Tfhd","Tfdt","Trun","Mfhd","Mdat","Styp","Pssh","parsePayload","console","log","nalType","creationTime","modificationTime","duration","langVal","language","sequenceNumber","audio_atom_1","rate","volume","matrix","Uint32Array","previewtime","previewDuration","posterTime","selectionTime","selectionDuration","currentTime","nextTrackId","systemId","kId","dataSize","Reference","subsegmentDuration","startsWithSap","sapType","sapDeltaTime","referenceId","earliestPresentationTime","firstOffset","referenceCount","references","balance","chunkOffsets","entryCount","SampleToChunkEntry","firstChunk","samplesPerChunk","sampleDescriptionIndex","sampleToChunks","entries","TimeToSampleEntry","sampleCount","sampleDelta","timeToSamples","baseMediaDecodeTime","pow","baseDataOffsetPresent","sampleDescriptionIndexPresent","defaultSampleDurationPresent","defaultSampleSizePresent","defaultSampleFlagsPresent","baseDataOffset","defaultSampleDuration","defaultSampleSize","defaultSampleFlags","trackId","layer","alternateGroup","defaultSampleDescriptionIndex","sampleDependsOn","sampleIsDependedOn","sampleHasRedundancy","samplePaddingValue","sampleIsDifferenceSample","sampleDegradationPriority","SampleFlags","isSyncFrame","Sample","dataOffsetPresent","firstSampleFlagsPresent","sampleDurationPresent","sampleSizePresent","sampleFlagsPresent","sampleCompositionTimeOffsetPresent","samples","totalSize","sample","parseFlags","compositionTimeOffset","graphichsMode","opColor","Uint16Array","atoms_1","track_1","mp4_track_1","Mp4Demuxer","atoms","tracks","parseAtoms","boxData","processAtom","lastTrackId","checkTrack","setSidxAtom","setTrunAtom","frame_1","Mp4Track","referenceAtom","lastPts","_i","_a","CONTAINER_TYPE","pes_reader_1","ts_track_1","MpegTSDemuxer","containerType","UNKNOWN","pmtParsed","packetsCount","pmtId","findContainerType","MPEG_TS","readHeader","readSamples","dataParser","TS_STREAM_TYPE_AAC","pes","appendData","resetTracks","MPEGTS_SYNC","dataRead","RAW_AAC","byteRead","MPEGTS_PACKET_SIZE","processTSPacket","packetParser","payloadUnitStartIndicator","pid","adaptationField","parseProgramId","parseProgramTable","track","sectionLength","programInfoLength","bytesRemaining","elementaryPid","infoLength","payload_reader_1","AdtsReader","channels","frameDuration","currentFrameSize","state","STATE_FIND_SYNC","findNextSync","STATE_READ_HEADER","ADTS_HEADER_SIZE","ADTS_SYNC_SIZE","parseAACHeader","STATE_READ_FRAME","limit","aacHeaderParser","hasCrc","sampleRateIndex","ADTS_SAMPLE_RATES","ADTS_CRC_SIZE","NAL_UNIT_TYPE","SLICE_TYPE","Fraction","num","den","H264Reader","pendingBytes","findNextNALUnit","processNALUnit","nextNalUnit","index","start","SPS","parseSPSNALUnit","AUD","parseAUDNALUnit","IDR","addNewFrame","I","SEI","parseSEINALUnit","SLICE","parseSliceNALUnit","parser","lastScale","nextScale","seiParser","sliceParser","sliceType","getSliceTypeName","B","P","SI","SP","getNALUnitName","PPS","END_SEQUENCE","END_STREAM","ID3Reader","MpegReader","samplesPerFrame","MIME_TYPE_BY_LAYER","findHeader","len","readFrame","lastByteWasFF","isFF","found","HEADER_SIZE","header","parseHeader","bitrateIndex","SAMPLING_RATE_V1","padding","bitrate","BITRATE_V1_L1","BITRATE_V2_L1","BITRATE_V1_L2","BITRATE_V1_L3","BITRATE_V2","UnknownReader","unknown_reader_1","adts_reader_1","h264_reader_1","id3_reader_1","mpeg_reader_1","PESReader","pesLength","payloadReader","TS_STREAM_TYPE_H264","TS_STREAM_TYPE_ID3","TS_STREAM_TYPE_MPA","TS_STREAM_TYPE_MPA_LSF","TS_STREAM_TYPE_METADATA","ptsToTimeUs","parsePESHeader","TSTrack","pos","indexOf","substring"],"mappings":"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","file":"inspectorjs-lib.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"inspectorjs\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"inspectorjs\"] = factory();\n\telse\n\t\troot[\"inspectorjs\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"inspectorjs\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"inspectorjs\"] = factory();\n\telse\n\t\troot[\"inspectorjs\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 52);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Atom = (function () {\r\n    function Atom(type, size) {\r\n        this.type = type;\r\n        this.size = size;\r\n    }\r\n    Atom.isContainerBox = function (type) {\r\n        return type === Atom.moov || type === Atom.trak || type === Atom.mdia\r\n            || type === Atom.minf || type === Atom.stbl || type === Atom.moof\r\n            || type === Atom.traf || type === Atom.mvex || type === Atom.stsd\r\n            || type === Atom.mp4a || type === Atom.avc1 || type === Atom.dref\r\n            || type === Atom.dinf;\r\n    };\r\n    Atom.ftyp = 'ftyp';\r\n    Atom.styp = 'styp';\r\n    Atom.avc1 = 'avc1';\r\n    Atom.avc3 = 'avc3';\r\n    Atom.hvc1 = 'hvc1';\r\n    Atom.hev1 = 'hev1';\r\n    Atom.s263 = 's263';\r\n    Atom.d263 = 'd263';\r\n    Atom.vp08 = 'vp08';\r\n    Atom.vp09 = 'vp09';\r\n    Atom.mdat = 'mdat';\r\n    Atom.mp4a = 'mp4a';\r\n    Atom.wave = 'wave';\r\n    Atom.ac_3 = 'ac-3';\r\n    Atom.dac3 = 'dac3';\r\n    Atom.ec_3 = 'ec-3';\r\n    Atom.dec3 = 'dec3';\r\n    Atom.dtsc = 'dtsc';\r\n    Atom.dtsh = 'dtsh';\r\n    Atom.dtsl = 'dtsl';\r\n    Atom.dtse = 'dtse';\r\n    Atom.ddts = 'ddts';\r\n    Atom.tfdt = 'tfdt';\r\n    Atom.tfhd = 'tfhd';\r\n    Atom.trex = 'trex';\r\n    Atom.trun = 'trun';\r\n    Atom.sidx = 'sidx';\r\n    Atom.moov = 'moov';\r\n    Atom.mvhd = 'mvhd';\r\n    Atom.trak = 'trak';\r\n    Atom.mdia = 'mdia';\r\n    Atom.minf = 'minf';\r\n    Atom.stbl = 'stbl';\r\n    Atom.avcC = 'avcC';\r\n    Atom.hvcC = 'hvcC';\r\n    Atom.vpcC = 'vpcC';\r\n    Atom.esds = 'esds';\r\n    Atom.moof = 'moof';\r\n    Atom.traf = 'traf';\r\n    Atom.mvex = 'mvex';\r\n    Atom.tkhd = 'tkhd';\r\n    Atom.edts = 'edts';\r\n    Atom.elst = 'elst';\r\n    Atom.mdhd = 'mdhd';\r\n    Atom.hdlr = 'hdlr';\r\n    Atom.stsd = 'stsd';\r\n    Atom.pssh = 'pssh';\r\n    Atom.sinf = 'sinf';\r\n    Atom.schm = 'schm';\r\n    Atom.schi = 'schi';\r\n    Atom.tenc = 'tenc';\r\n    Atom.encv = 'encv';\r\n    Atom.enca = 'enca';\r\n    Atom.frma = 'frma';\r\n    Atom.saiz = 'saiz';\r\n    Atom.saio = 'saio';\r\n    Atom.uuid = 'uuid';\r\n    Atom.senc = 'senc';\r\n    Atom.pasp = 'pasp';\r\n    Atom.TTML = 'TTML';\r\n    Atom.vmhd = 'vmhd';\r\n    Atom.mp4v = 'mp4v';\r\n    Atom.stts = 'stts';\r\n    Atom.stss = 'stss';\r\n    Atom.ctts = 'ctts';\r\n    Atom.stsc = 'stsc';\r\n    Atom.stsz = 'stsz';\r\n    Atom.stco = 'stco';\r\n    Atom.co64 = 'co64';\r\n    Atom.tx3g = 'tx3g';\r\n    Atom.wvtt = 'wvtt';\r\n    Atom.stpp = 'stpp';\r\n    Atom.samr = 'samr';\r\n    Atom.sawb = 'sawb';\r\n    Atom.dinf = 'dinf';\r\n    Atom.dref = 'dref';\r\n    Atom.url = 'url ';\r\n    Atom.smhd = 'smhd';\r\n    Atom.mfhd = 'mfhd';\r\n    Atom.emsg = 'emsg';\r\n    return Atom;\r\n}());\r\nexports.Atom = Atom;\r\nvar ContainerAtom = (function (_super) {\r\n    __extends(ContainerAtom, _super);\r\n    function ContainerAtom(type, size) {\r\n        var _this = _super.call(this, type, size) || this;\r\n        _this.containerDataOffset = 0;\r\n        return _this;\r\n    }\r\n    return ContainerAtom;\r\n}(Atom));\r\nexports.ContainerAtom = ContainerAtom;\r\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Mp4SampleFlags = (function () {\r\n    function Mp4SampleFlags() {\r\n    }\r\n    return Mp4SampleFlags;\r\n}());\r\nexports.Mp4SampleFlags = Mp4SampleFlags;\r\nvar ByteParserUtils = (function () {\r\n    function ByteParserUtils() {\r\n    }\r\n    ByteParserUtils.parseStringWithLength = function (buffer, offset, end) {\r\n        var result = '';\r\n        var strLength = buffer[offset];\r\n        var maxOffset = Math.min(offset + strLength + 1, end);\r\n        for (var i = offset + 1; i < maxOffset && buffer[i] !== 0; i++) {\r\n            result += String.fromCharCode(buffer[i]);\r\n        }\r\n        return result;\r\n    };\r\n    ByteParserUtils.parseNullTerminatedString = function (buffer, offset, end) {\r\n        var result = '';\r\n        for (var i = offset + 1; i < end && buffer[i] !== 0; i++) {\r\n            result += String.fromCharCode(buffer[i]);\r\n        }\r\n        return result;\r\n    };\r\n    ByteParserUtils.parseUint32 = function (buffer, offset) {\r\n        // Js tric: The only JavaScript operator that works using unsigned 32-bit integers is >>>\r\n        // it can be used to convert a signed integer to an unsigned one\r\n        return (buffer[offset++] << 24 |\r\n            buffer[offset++] << 16 |\r\n            buffer[offset++] << 8 |\r\n            buffer[offset]) >>> 0;\r\n    };\r\n    ByteParserUtils.parseLong64 = function (buffer, offset) {\r\n        // Js tric: The only JavaScript operator that works using unsigned 32-bit integers is >>>\r\n        // it can be used to convert a signed integer to an unsigned one\r\n        return (buffer[offset++] << 56 |\r\n            buffer[offset++] << 48 |\r\n            buffer[offset++] << 40 |\r\n            buffer[offset++] << 32 |\r\n            buffer[offset++] << 24 |\r\n            buffer[offset++] << 16 |\r\n            buffer[offset++] << 8 |\r\n            buffer[offset]) >>> 0;\r\n    };\r\n    ByteParserUtils.parseUint16 = function (buffer, offset) {\r\n        return (buffer[offset++] << 8 |\r\n            buffer[offset]) >>> 0;\r\n    };\r\n    ByteParserUtils.parseIsoBoxType = function (buffer, offset) {\r\n        var result = '';\r\n        result += String.fromCharCode(buffer[offset++]);\r\n        result += String.fromCharCode(buffer[offset++]);\r\n        result += String.fromCharCode(buffer[offset++]);\r\n        result += String.fromCharCode(buffer[offset]);\r\n        return result;\r\n    };\r\n    ByteParserUtils.parseIsoBoxDate = function (seconds) {\r\n        return new Date(seconds * 1000 - 2082844800000);\r\n    };\r\n    ByteParserUtils.parseIsoBoxSampleFlags = function (flags) {\r\n        return {\r\n            isLeading: (flags[0] & 0x0c) >>> 2,\r\n            dependsOn: flags[0] & 0x03,\r\n            isDependedOn: (flags[1] & 0xc0) >>> 6,\r\n            hasRedundancy: (flags[1] & 0x30) >>> 4,\r\n            paddingValue: (flags[1] & 0x0e) >>> 1,\r\n            isNonSyncSample: flags[1] & 0x01,\r\n            degradationPriority: (flags[2] << 8) | flags[3]\r\n        };\r\n    };\r\n    return ByteParserUtils;\r\n}());\r\nexports.default = ByteParserUtils;\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Track = (function () {\r\n    function Track(id, type, mimeType) {\r\n        this.id = id;\r\n        this.type = type;\r\n        this.mimeType = mimeType;\r\n    }\r\n    Track.prototype.getType = function () {\r\n        return this.type;\r\n    };\r\n    Track.prototype.getMimeType = function () {\r\n        return this.mimeType;\r\n    };\r\n    Track.prototype.getFrames = function () {\r\n        return [];\r\n    };\r\n    Track.TYPE_VIDEO = 'video';\r\n    Track.TYPE_AUDIO = 'audio';\r\n    Track.TYPE_TEXT = 'text';\r\n    Track.TYPE_UNKNOWN = 'unknown';\r\n    Track.MIME_TYPE_AAC = 'audio/mp4a-latm';\r\n    Track.MIME_TYPE_AVC = 'video/avc';\r\n    Track.MIME_TYPE_HEVC = 'video/hevc';\r\n    Track.MIME_TYPE_MPEG = 'audio/mpeg';\r\n    Track.MIME_TYPE_MPEG_L1 = 'audio/mpeg-L1';\r\n    Track.MIME_TYPE_MPEG_l2 = 'audio/mpeg-L2';\r\n    Track.MIME_TYPE_ID3 = 'application/id3';\r\n    Track.MIME_TYPE_UNKNOWN = 'unknown';\r\n    return Track;\r\n}());\r\nexports.default = Track;\r\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar PayloadReader = (function () {\r\n    function PayloadReader() {\r\n        this.firstTimestamp = -1;\r\n        this.timeUs = -1;\r\n        this.frames = [];\r\n    }\r\n    PayloadReader.prototype.append = function (packet) {\r\n        var dataToAppend = packet.buffer.subarray(packet.bytesOffset());\r\n        if (!this.dataBuffer) {\r\n            this.dataBuffer = dataToAppend;\r\n        }\r\n        else {\r\n            var newLen = this.dataBuffer.byteLength + packet.remainingBytes();\r\n            var temp = new Uint8Array(newLen);\r\n            temp.set(this.dataBuffer, 0);\r\n            temp.set(dataToAppend, this.dataBuffer.byteLength);\r\n            this.dataBuffer = temp;\r\n        }\r\n    };\r\n    PayloadReader.prototype.reset = function () {\r\n        this.frames = [];\r\n        this.dataOffset = 0;\r\n    };\r\n    PayloadReader.prototype.flush = function (pts) {\r\n        if (this.dataBuffer.byteLength > 0) {\r\n            this.consumeData(pts);\r\n            this.dataBuffer = null;\r\n        }\r\n        this.dataOffset = 0;\r\n    };\r\n    PayloadReader.prototype.consumeData = function (pts) {\r\n        throw new Error('Should have implemented this');\r\n    };\r\n    PayloadReader.prototype.getMimeType = function () {\r\n        return 'Unknown';\r\n    };\r\n    PayloadReader.prototype.getDuration = function () {\r\n        return this.getLastPTS() - this.getFirstPTS();\r\n    };\r\n    PayloadReader.prototype.getFirstPTS = function () {\r\n        return this.firstTimestamp;\r\n    };\r\n    PayloadReader.prototype.getLastPTS = function () {\r\n        return this.timeUs;\r\n    };\r\n    return PayloadReader;\r\n}());\r\nexports.default = PayloadReader;\r\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Frame = (function () {\r\n    function Frame(frameType, timeUs) {\r\n        this.frameType = frameType;\r\n        this.timeUs = timeUs;\r\n        // do nothing\r\n    }\r\n    Frame.IDR_FRAME = 'I';\r\n    Frame.P_FRAME = 'P';\r\n    Frame.B_FRAME = 'B';\r\n    return Frame;\r\n}());\r\nexports.default = Frame;\r\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar BitReader = (function () {\r\n    function BitReader(buffer) {\r\n        this.buffer = buffer;\r\n        this.readByte = function () {\r\n            return this.readBits(8);\r\n        };\r\n        this.workingBytesAvailable = buffer.byteLength;\r\n        this.workingWord = 0;\r\n        this.workingBitsAvailable = 0;\r\n        this.loadWord();\r\n    }\r\n    BitReader.prototype.destroy = function () {\r\n        this.buffer = null;\r\n    };\r\n    BitReader.prototype.remainingBytes = function () {\r\n        return this.workingBytesAvailable + this.workingBitsAvailable / 8;\r\n    };\r\n    BitReader.prototype.bitsAvailable = function () {\r\n        return (8 * this.workingBytesAvailable) + this.workingBitsAvailable;\r\n    };\r\n    BitReader.prototype.bytesOffset = function () {\r\n        return this.buffer.byteLength - this.remainingBytes();\r\n    };\r\n    BitReader.prototype.skipBytes = function (count) {\r\n        this.skipBits(count * 8);\r\n    };\r\n    BitReader.prototype.skipBits = function (count) {\r\n        var skipBytes;\r\n        if (this.workingBitsAvailable > count) {\r\n            this.workingWord <<= count;\r\n            this.workingBitsAvailable -= count;\r\n        }\r\n        else {\r\n            count -= this.workingBitsAvailable;\r\n            skipBytes = Math.floor(count / 8);\r\n            count -= (skipBytes * 8);\r\n            this.workingBytesAvailable -= skipBytes;\r\n            this.loadWord();\r\n            this.workingWord <<= count;\r\n            this.workingBitsAvailable -= count;\r\n        }\r\n    };\r\n    BitReader.prototype.skipUEG = function () {\r\n        this.skipBits(1 + this.skipLeadingZeros());\r\n    };\r\n    BitReader.prototype.skipSEG = function () {\r\n        this.skipBits(1 + this.skipLeadingZeros());\r\n    };\r\n    BitReader.prototype.readUEG = function () {\r\n        var clz = this.skipLeadingZeros();\r\n        return this.readBits(clz + 1) - 1;\r\n    };\r\n    BitReader.prototype.readSEG = function () {\r\n        var val = this.readUEG();\r\n        if (0x01 & val) {\r\n            return (1 + val) >>> 1;\r\n        }\r\n        return -1 * (val >>> 1);\r\n    };\r\n    BitReader.prototype.readBool = function () {\r\n        return this.readBits(1) === 1;\r\n    };\r\n    BitReader.prototype.readBits = function (size) {\r\n        var bits = Math.min(this.workingBitsAvailable, size);\r\n        var val = this.workingWord >>> (32 - bits);\r\n        this.workingBitsAvailable -= bits;\r\n        if (this.workingBitsAvailable > 0) {\r\n            this.workingWord <<= bits;\r\n        }\r\n        else if (this.workingBytesAvailable > 0) {\r\n            this.loadWord();\r\n        }\r\n        bits = size - bits;\r\n        if (bits > 0) {\r\n            return (val << bits | this.readBits(bits)) >>> 0;\r\n        }\r\n        return val;\r\n    };\r\n    BitReader.prototype.loadWord = function () {\r\n        var position = this.buffer.byteLength - this.workingBytesAvailable;\r\n        var workingBytes = new Uint8Array(4);\r\n        var availableBytes = Math.min(4, this.workingBytesAvailable);\r\n        if (availableBytes === 0) {\r\n            throw new Error('No bytes available');\r\n        }\r\n        workingBytes.set(this.buffer.subarray(position, position + availableBytes));\r\n        this.workingWord = new DataView(workingBytes.buffer).getUint32(0);\r\n        this.workingBitsAvailable = availableBytes * 8;\r\n        this.workingBytesAvailable -= availableBytes;\r\n    };\r\n    BitReader.prototype.skipLeadingZeros = function () {\r\n        var leadingZeroCount;\r\n        for (leadingZeroCount = 0; leadingZeroCount < this.workingBitsAvailable; ++leadingZeroCount) {\r\n            if ((this.workingWord & (0x80000000 >>> leadingZeroCount)) !== 0) {\r\n                this.workingWord <<= leadingZeroCount;\r\n                this.workingBitsAvailable -= leadingZeroCount;\r\n                return leadingZeroCount;\r\n            }\r\n        }\r\n        this.loadWord();\r\n        return leadingZeroCount + this.skipLeadingZeros();\r\n    };\r\n    return BitReader;\r\n}());\r\nexports.default = BitReader;\r\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar byte_parser_utils_1 = __webpack_require__(1);\r\nvar atom_1 = __webpack_require__(0);\r\nvar VideoAtom = (function (_super) {\r\n    __extends(VideoAtom, _super);\r\n    function VideoAtom() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    VideoAtom.fillVideoAtom = function (atom, data) {\r\n        atom.containerDataOffset = 78;\r\n        atom.dataReferenceIndex = byte_parser_utils_1.default.parseUint16(data, 6);\r\n        atom.temporalQuality = byte_parser_utils_1.default.parseUint32(data, 16);\r\n        atom.spatialQuality = byte_parser_utils_1.default.parseUint32(data, 20);\r\n        atom.width = byte_parser_utils_1.default.parseUint16(data, 24);\r\n        atom.height = byte_parser_utils_1.default.parseUint16(data, 26);\r\n        atom.horizontalResolution = byte_parser_utils_1.default.parseUint16(data, 28) +\r\n            byte_parser_utils_1.default.parseUint16(data, 30) / 16;\r\n        atom.verticalResolution = byte_parser_utils_1.default.parseUint16(data, 32) +\r\n            byte_parser_utils_1.default.parseUint16(data, 34) / 16;\r\n        atom.frameCount = byte_parser_utils_1.default.parseUint16(data, 40);\r\n        atom.compressorName = byte_parser_utils_1.default.parseStringWithLength(data, 42, 74);\r\n        atom.depth = byte_parser_utils_1.default.parseUint16(data, 74);\r\n        return atom;\r\n    };\r\n    return VideoAtom;\r\n}(atom_1.ContainerAtom));\r\nexports.VideoAtom = VideoAtom;\r\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar bit_reader_1 = __webpack_require__(5);\r\nvar nal_units_1 = __webpack_require__(9);\r\nvar SPSParser = (function () {\r\n    function SPSParser() {\r\n    }\r\n    SPSParser.parseSPS = function (data) {\r\n        var gb = new bit_reader_1.default(data);\r\n        var profile_idc = gb.readByte();\r\n        gb.readByte();\r\n        var level_idc = gb.readByte();\r\n        gb.readUEG();\r\n        var profile_string = SPSParser.getProfileString(profile_idc);\r\n        var level_string = SPSParser.getLevelString(level_idc);\r\n        var chroma_format_idc = 1;\r\n        var chroma_format = 420;\r\n        var chroma_format_table = [0, 420, 422, 444];\r\n        var bit_depth = 8;\r\n        if (profile_idc === 100 || profile_idc === 110 || profile_idc === 122 ||\r\n            profile_idc === 244 || profile_idc === 44 || profile_idc === 83 ||\r\n            profile_idc === 86 || profile_idc === 118 || profile_idc === 128 ||\r\n            profile_idc === 138 || profile_idc === 144) {\r\n            chroma_format_idc = gb.readUEG();\r\n            if (chroma_format_idc === 3) {\r\n                gb.readBits(1);\r\n            }\r\n            if (chroma_format_idc <= 3) {\r\n                chroma_format = chroma_format_table[chroma_format_idc];\r\n            }\r\n            bit_depth = gb.readUEG() + 8;\r\n            gb.readUEG();\r\n            gb.readBits(1);\r\n            if (gb.readBool()) {\r\n                var scaling_list_count = (chroma_format_idc !== 3) ? 8 : 12;\r\n                for (var i = 0; i < scaling_list_count; i++) {\r\n                    if (gb.readBool()) {\r\n                        if (i < 6) {\r\n                            SPSParser.skipScalingList(gb, 16);\r\n                        }\r\n                        else {\r\n                            SPSParser.skipScalingList(gb, 64);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        gb.readUEG();\r\n        var pic_order_cnt_type = gb.readUEG();\r\n        if (pic_order_cnt_type === 0) {\r\n            gb.readUEG();\r\n        }\r\n        else if (pic_order_cnt_type === 1) {\r\n            gb.readBits(1);\r\n            gb.readSEG();\r\n            gb.readSEG();\r\n            var num_ref_frames_in_pic_order_cnt_cycle = gb.readUEG();\r\n            for (var i = 0; i < num_ref_frames_in_pic_order_cnt_cycle; i++) {\r\n                gb.readSEG();\r\n            }\r\n        }\r\n        gb.readUEG();\r\n        gb.readBits(1);\r\n        var pic_width_in_mbs_minus1 = gb.readUEG();\r\n        var pic_height_in_map_units_minus1 = gb.readUEG();\r\n        var frame_mbs_only_flag = gb.readBits(1);\r\n        if (frame_mbs_only_flag === 0) {\r\n            gb.readBits(1);\r\n        }\r\n        gb.readBits(1);\r\n        var frame_crop_left_offset = 0;\r\n        var frame_crop_right_offset = 0;\r\n        var frame_crop_top_offset = 0;\r\n        var frame_crop_bottom_offset = 0;\r\n        var frame_cropping_flag = gb.readBool();\r\n        if (frame_cropping_flag) {\r\n            frame_crop_left_offset = gb.readUEG();\r\n            frame_crop_right_offset = gb.readUEG();\r\n            frame_crop_top_offset = gb.readUEG();\r\n            frame_crop_bottom_offset = gb.readUEG();\r\n        }\r\n        var sar_width = 1, sar_height = 1;\r\n        var fps = 0, fps_fixed = true, fps_num = 0, fps_den = 0;\r\n        var vui_parameters_present_flag = gb.readBool();\r\n        if (vui_parameters_present_flag) {\r\n            if (gb.readBool()) {\r\n                var aspect_ratio_idc = gb.readByte();\r\n                var sar_w_table = [1, 12, 10, 16, 40, 24, 20, 32, 80, 18, 15, 64, 160, 4, 3, 2];\r\n                var sar_h_table = [1, 11, 11, 11, 33, 11, 11, 11, 33, 11, 11, 33, 99, 3, 2, 1];\r\n                if (aspect_ratio_idc > 0 && aspect_ratio_idc < 16) {\r\n                    sar_width = sar_w_table[aspect_ratio_idc - 1];\r\n                    sar_height = sar_h_table[aspect_ratio_idc - 1];\r\n                }\r\n                else if (aspect_ratio_idc === 255) {\r\n                    sar_width = gb.readByte() << 8 | gb.readByte();\r\n                    sar_height = gb.readByte() << 8 | gb.readByte();\r\n                }\r\n            }\r\n            if (gb.readBool()) {\r\n                gb.readBool();\r\n            }\r\n            if (gb.readBool()) {\r\n                gb.readBits(4);\r\n                if (gb.readBool()) {\r\n                    gb.readBits(24);\r\n                }\r\n            }\r\n            if (gb.readBool()) {\r\n                gb.readUEG();\r\n                gb.readUEG();\r\n            }\r\n            if (gb.readBool()) {\r\n                var num_units_in_tick = gb.readBits(32);\r\n                var time_scale = gb.readBits(32);\r\n                fps_fixed = gb.readBool();\r\n                fps_num = time_scale;\r\n                fps_den = num_units_in_tick * 2;\r\n                fps = fps_num / fps_den;\r\n            }\r\n        }\r\n        var sarScale = 1;\r\n        if (sar_width !== 1 || sar_height !== 1) {\r\n            sarScale = sar_width / sar_height;\r\n        }\r\n        var crop_unit_x = 0, crop_unit_y = 0;\r\n        if (chroma_format_idc === 0) {\r\n            crop_unit_x = 1;\r\n            crop_unit_y = 2 - frame_mbs_only_flag;\r\n        }\r\n        else {\r\n            var sub_wc = (chroma_format_idc === 3) ? 1 : 2;\r\n            var sub_hc = (chroma_format_idc === 1) ? 2 : 1;\r\n            crop_unit_x = sub_wc;\r\n            crop_unit_y = sub_hc * (2 - frame_mbs_only_flag);\r\n        }\r\n        var codec_width = (pic_width_in_mbs_minus1 + 1) * 16;\r\n        var codec_height = (2 - frame_mbs_only_flag) * ((pic_height_in_map_units_minus1 + 1) * 16);\r\n        codec_width -= (frame_crop_left_offset + frame_crop_right_offset) * crop_unit_x;\r\n        codec_height -= (frame_crop_top_offset + frame_crop_bottom_offset) * crop_unit_y;\r\n        var present_width = Math.ceil(codec_width * sarScale);\r\n        gb.destroy();\r\n        gb = null;\r\n        return new nal_units_1.Sps(profile_string, level_string, bit_depth, chroma_format, SPSParser.getChromaFormatString(chroma_format), new nal_units_1.FrameRate(fps_fixed, fps, fps_den, fps_num), new nal_units_1.Size(sar_width, sar_height), new nal_units_1.Size(codec_width, codec_height), new nal_units_1.Size(present_width, codec_height));\r\n    };\r\n    SPSParser.getProfileString = function (profile_idc) {\r\n        switch (profile_idc) {\r\n            case 66:\r\n                return 'Baseline';\r\n            case 77:\r\n                return 'Main';\r\n            case 88:\r\n                return 'Extended';\r\n            case 100:\r\n                return 'High';\r\n            case 110:\r\n                return 'High10';\r\n            case 122:\r\n                return 'High422';\r\n            case 244:\r\n                return 'High444';\r\n            default:\r\n                return 'Unknown';\r\n        }\r\n    };\r\n    SPSParser.getLevelString = function (level_idc) {\r\n        return (level_idc / 10).toFixed(1);\r\n    };\r\n    SPSParser.getChromaFormatString = function (chroma) {\r\n        switch (chroma) {\r\n            case 420:\r\n                return '4:2:0';\r\n            case 422:\r\n                return '4:2:2';\r\n            case 444:\r\n                return '4:4:4';\r\n            default:\r\n                return 'Unknown';\r\n        }\r\n    };\r\n    SPSParser.skipScalingList = function (gb, count) {\r\n        var last_scale = 8, next_scale = 8;\r\n        var delta_scale = 0;\r\n        for (var i = 0; i < count; i++) {\r\n            if (next_scale !== 0) {\r\n                delta_scale = gb.readSEG();\r\n                next_scale = (last_scale + delta_scale + 256) % 256;\r\n            }\r\n            last_scale = (next_scale === 0) ? last_scale : next_scale;\r\n        }\r\n    };\r\n    return SPSParser;\r\n}());\r\nexports.default = SPSParser;\r\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar mpegts_demuxer_1 = __webpack_require__(44);\r\nvar mp4_demuxer_1 = __webpack_require__(42);\r\nfunction createMpegTSDemuxer(data) {\r\n    return new mpegts_demuxer_1.default();\r\n}\r\nexports.createMpegTSDemuxer = createMpegTSDemuxer;\r\nfunction createMp4Demuxer(data) {\r\n    return new mp4_demuxer_1.default();\r\n}\r\nexports.createMp4Demuxer = createMp4Demuxer;\r\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar FrameRate = (function () {\r\n    function FrameRate(fixed, fps, fpsDen, fpsNum) {\r\n        this.fixed = fixed;\r\n        this.fps = fps;\r\n        this.fpsDen = fpsDen;\r\n        this.fpsNum = fpsNum;\r\n        // do nothing\r\n    }\r\n    return FrameRate;\r\n}());\r\nexports.FrameRate = FrameRate;\r\nvar Size = (function () {\r\n    function Size(width, height) {\r\n        this.width = width;\r\n        this.height = height;\r\n        // do nothing\r\n    }\r\n    return Size;\r\n}());\r\nexports.Size = Size;\r\nvar Sps = (function () {\r\n    function Sps(profile, level, bitDepth, chromaFormat, chromaFormatStr, frameRate, sar, codecSize, presentSize) {\r\n        this.profile = profile;\r\n        this.level = level;\r\n        this.bitDepth = bitDepth;\r\n        this.chromaFormat = chromaFormat;\r\n        this.frameRate = frameRate;\r\n        this.sar = sar;\r\n        this.codecSize = codecSize;\r\n        this.presentSize = presentSize;\r\n        // do nothing\r\n    }\r\n    return Sps;\r\n}());\r\nexports.Sps = Sps;\r\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar atom_1 = __webpack_require__(0);\r\nvar video_atom_1 = __webpack_require__(6);\r\nvar Avc1 = (function (_super) {\r\n    __extends(Avc1, _super);\r\n    function Avc1() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Avc1.parse = function (data) {\r\n        var atom = new Avc1(atom_1.Atom.avc1, data.byteLength);\r\n        video_atom_1.VideoAtom.fillVideoAtom(atom, data);\r\n        return atom;\r\n    };\r\n    return Avc1;\r\n}(video_atom_1.VideoAtom));\r\nexports.Avc1 = Avc1;\r\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar byte_parser_utils_1 = __webpack_require__(1);\r\nvar atom_1 = __webpack_require__(0);\r\nvar sps_parser_1 = __webpack_require__(7);\r\nvar AvcC = (function (_super) {\r\n    __extends(AvcC, _super);\r\n    function AvcC() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    AvcC.parse = function (data) {\r\n        var avcC = new AvcC(atom_1.Atom.avcC, data.byteLength);\r\n        avcC.version = data[0];\r\n        avcC.profile = data[1];\r\n        avcC.profileCompatibility = data[2];\r\n        avcC.level = data[3];\r\n        avcC.lengthSizeMinusOne = data[4] & 0x03;\r\n        avcC.numOfSequenceParameterSets = data[5] & 0x1f;\r\n        avcC.sps = [];\r\n        avcC.spsParsed = [];\r\n        var offset = 6;\r\n        for (var i = 0; i < avcC.numOfSequenceParameterSets; i++) {\r\n            var spsSize = byte_parser_utils_1.default.parseUint16(data, offset);\r\n            offset += 2;\r\n            var sps = new Uint8Array(data.subarray(offset, offset + spsSize));\r\n            avcC.sps.push(sps);\r\n            offset += spsSize;\r\n            avcC.spsParsed.push(sps_parser_1.default.parseSPS(sps.subarray(1, spsSize)));\r\n        }\r\n        avcC.numOfPictureParameterSets = data[offset] & 0x1f;\r\n        avcC.pps = [];\r\n        offset++;\r\n        for (var i = 0; i < avcC.numOfPictureParameterSets; i++) {\r\n            var ppsSize = byte_parser_utils_1.default.parseUint16(data, offset);\r\n            offset += 2;\r\n            avcC.pps.push(new Uint8Array(data.subarray(offset, offset + ppsSize)));\r\n            offset += ppsSize;\r\n        }\r\n        return avcC;\r\n    };\r\n    return AvcC;\r\n}(atom_1.Atom));\r\nexports.AvcC = AvcC;\r\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar atom_1 = __webpack_require__(0);\r\nvar Dref = (function (_super) {\r\n    __extends(Dref, _super);\r\n    function Dref() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Dref.parse = function (data) {\r\n        var dref = new Dref(atom_1.Atom.dref, data.byteLength);\r\n        dref.containerDataOffset = 8;\r\n        dref.version = data[0];\r\n        dref.flags = data.subarray(1, 4);\r\n        return dref;\r\n    };\r\n    return Dref;\r\n}(atom_1.ContainerAtom));\r\nexports.Dref = Dref;\r\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar byte_parser_utils_1 = __webpack_require__(1);\r\nvar atom_1 = __webpack_require__(0);\r\nvar Emsg = (function (_super) {\r\n    __extends(Emsg, _super);\r\n    function Emsg() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Emsg.parse = function (data) {\r\n        var emsg = new Emsg(atom_1.Atom.emsg, data.byteLength);\r\n        emsg.version = data[0];\r\n        emsg.flags = data.subarray(1, 4);\r\n        var i = 4;\r\n        emsg.schemeIdUri = byte_parser_utils_1.default.parseNullTerminatedString(data, i, data.byteLength);\r\n        i += emsg.schemeIdUri.length + 1;\r\n        emsg.value = byte_parser_utils_1.default.parseNullTerminatedString(data, i, data.byteLength);\r\n        i += emsg.value.length + 1;\r\n        emsg.timescale = byte_parser_utils_1.default.parseUint32(data, i);\r\n        i += 4;\r\n        emsg.presentationTimeDelta = byte_parser_utils_1.default.parseUint32(data, i);\r\n        i += 4;\r\n        emsg.eventDuration = byte_parser_utils_1.default.parseUint32(data, i);\r\n        i += 4;\r\n        emsg.id = byte_parser_utils_1.default.parseUint32(data, i);\r\n        i += 4;\r\n        if (i < data.byteLength - 1) {\r\n            emsg.data = data.subarray(i);\r\n        }\r\n        return emsg;\r\n    };\r\n    return Emsg;\r\n}(atom_1.Atom));\r\nexports.Emsg = Emsg;\r\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar byte_parser_utils_1 = __webpack_require__(1);\r\nvar atom_1 = __webpack_require__(0);\r\nvar DecoderConfigDescriptor = (function () {\r\n    function DecoderConfigDescriptor(tag, length, audioObjectType, samplingFrequencyIndex, channelConfiguration) {\r\n        this.tag = tag;\r\n        this.length = length;\r\n        this.audioObjectType = audioObjectType;\r\n        this.samplingFrequencyIndex = samplingFrequencyIndex;\r\n        this.channelConfiguration = channelConfiguration;\r\n    }\r\n    return DecoderConfigDescriptor;\r\n}());\r\nexports.DecoderConfigDescriptor = DecoderConfigDescriptor;\r\nvar DecoderConfig = (function () {\r\n    function DecoderConfig(objectProfileIndication, streamType, bufferSize, maxBitrate, avgBitrate, decoderConfigDescriptor) {\r\n        this.objectProfileIndication = objectProfileIndication;\r\n        this.streamType = streamType;\r\n        this.bufferSize = bufferSize;\r\n        this.maxBitrate = maxBitrate;\r\n        this.avgBitrate = avgBitrate;\r\n        this.decoderConfigDescriptor = decoderConfigDescriptor;\r\n    }\r\n    return DecoderConfig;\r\n}());\r\nexports.DecoderConfig = DecoderConfig;\r\nvar Esds = (function (_super) {\r\n    __extends(Esds, _super);\r\n    function Esds() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Esds.parse = function (data) {\r\n        var esds = new Esds(atom_1.Atom.esds, data.byteLength);\r\n        esds.version = data[0];\r\n        esds.flags = data.subarray(1, 4);\r\n        esds.esId = byte_parser_utils_1.default.parseUint16(data, 6);\r\n        esds.streamPriority = data[8] & 0x1f;\r\n        esds.decoderConfig = new DecoderConfig(data[11], (data[12] >>> 2) & 0x3f, (data[13] << 16) | (data[14] << 8) | data[15], byte_parser_utils_1.default.parseUint32(data, 16), byte_parser_utils_1.default.parseUint32(data, 20), new DecoderConfigDescriptor(data[24], data[25], (data[26] >>> 3) & 0x1f, ((data[26] & 0x07) << 1) | ((data[27] >>> 7) & 0x01), (data[27] >>> 3) & 0x0f));\r\n        return esds;\r\n    };\r\n    return Esds;\r\n}(atom_1.Atom));\r\nexports.Esds = Esds;\r\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar byte_parser_utils_1 = __webpack_require__(1);\r\nvar atom_1 = __webpack_require__(0);\r\nvar Ftyp = (function (_super) {\r\n    __extends(Ftyp, _super);\r\n    function Ftyp() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Ftyp.parse = function (data) {\r\n        var ftyp = new Ftyp(atom_1.Atom.ftyp, data.byteLength);\r\n        ftyp.majorBrand = byte_parser_utils_1.default.parseIsoBoxType(data, 0);\r\n        ftyp.minorVersion = byte_parser_utils_1.default.parseUint32(data, 4);\r\n        ftyp.compatibleBrands = [];\r\n        var i = 8;\r\n        while (i < data.byteLength) {\r\n            ftyp.compatibleBrands.push(byte_parser_utils_1.default.parseIsoBoxType(data, i));\r\n            i += 4;\r\n        }\r\n        return ftyp;\r\n    };\r\n    return Ftyp;\r\n}(atom_1.Atom));\r\nexports.Ftyp = Ftyp;\r\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar byte_parser_utils_1 = __webpack_require__(1);\r\nvar atom_1 = __webpack_require__(0);\r\nvar Hdlr = (function (_super) {\r\n    __extends(Hdlr, _super);\r\n    function Hdlr() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Hdlr.parse = function (data) {\r\n        var hdlr = new Hdlr(atom_1.Atom.hdlr, data.byteLength);\r\n        hdlr.version = data[0];\r\n        hdlr.flags = data.subarray(1, 4);\r\n        hdlr.handlerType = byte_parser_utils_1.default.parseIsoBoxType(data, 8);\r\n        // parse out the name field\r\n        var name = '';\r\n        for (var i = 24; i < data.byteLength; i++) {\r\n            if (data[i] === 0x00) {\r\n                i++;\r\n                break;\r\n            }\r\n            name += String.fromCharCode(data[i]);\r\n        }\r\n        hdlr.name = decodeURIComponent(name);\r\n        return hdlr;\r\n    };\r\n    return Hdlr;\r\n}(atom_1.Atom));\r\nexports.Hdlr = Hdlr;\r\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar byte_parser_utils_1 = __webpack_require__(1);\r\nvar atom_1 = __webpack_require__(0);\r\nvar AudioAtom = (function (_super) {\r\n    __extends(AudioAtom, _super);\r\n    function AudioAtom() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    AudioAtom.fillAudioAtom = function (atom, data) {\r\n        atom.containerDataOffset = 28;\r\n        atom.dataReferenceIndex = byte_parser_utils_1.default.parseUint16(data, 6);\r\n        atom.channelCount = byte_parser_utils_1.default.parseUint16(data, 16);\r\n        atom.sampleSize = byte_parser_utils_1.default.parseUint16(data, 18);\r\n        atom.sampleRate = byte_parser_utils_1.default.parseUint16(data, 24) +\r\n            (byte_parser_utils_1.default.parseUint16(data, 26) >>> 15);\r\n        return atom;\r\n    };\r\n    return AudioAtom;\r\n}(atom_1.ContainerAtom));\r\nexports.AudioAtom = AudioAtom;\r\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar atom_1 = __webpack_require__(0);\r\nvar video_atom_1 = __webpack_require__(6);\r\nvar Hev1 = (function (_super) {\r\n    __extends(Hev1, _super);\r\n    function Hev1() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Hev1.parse = function (data) {\r\n        var atom = new Hev1(atom_1.Atom.hev1, data.byteLength);\r\n        video_atom_1.VideoAtom.fillVideoAtom(atom, data);\r\n        return atom;\r\n    };\r\n    return Hev1;\r\n}(video_atom_1.VideoAtom));\r\nexports.Hev1 = Hev1;\r\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar atom_1 = __webpack_require__(0);\r\nvar video_atom_1 = __webpack_require__(6);\r\nvar Hvc1 = (function (_super) {\r\n    __extends(Hvc1, _super);\r\n    function Hvc1() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Hvc1.parse = function (data) {\r\n        var atom = new Hvc1(atom_1.Atom.hvc1, data.byteLength);\r\n        video_atom_1.VideoAtom.fillVideoAtom(atom, data);\r\n        return atom;\r\n    };\r\n    return Hvc1;\r\n}(video_atom_1.VideoAtom));\r\nexports.Hvc1 = Hvc1;\r\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar byte_parser_utils_1 = __webpack_require__(1);\r\nvar atom_1 = __webpack_require__(0);\r\nvar HvcC = (function (_super) {\r\n    __extends(HvcC, _super);\r\n    function HvcC() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    HvcC.parse = function (data) {\r\n        var hvcC = new HvcC(atom_1.Atom.hvcC, data.byteLength);\r\n        var aux;\r\n        hvcC.version = data[0];\r\n        aux = data[1];\r\n        hvcC.profileSpace = aux >> 6;\r\n        hvcC.tierFlag = (aux & 0x20) >> 5;\r\n        hvcC.profileIdc = (aux & 0x1F);\r\n        hvcC.profileCompatibility = byte_parser_utils_1.default.parseUint32(data, 2);\r\n        hvcC.constraintIndicator = data.subarray(6, 12);\r\n        hvcC.levelIdc = data[12];\r\n        hvcC.spatialSegmentationIdc = byte_parser_utils_1.default.parseUint16(data, 13) & 0xFFF;\r\n        hvcC.parallelismType = (data[15] & 0x3);\r\n        hvcC.chromaFormat = (data[16] & 0x3);\r\n        hvcC.bitDepthLumaMinus8 = (data[17] & 0x7);\r\n        hvcC.bitDepthChromaMinus8 = (data[18] & 0x7);\r\n        hvcC.avgFrameRate = byte_parser_utils_1.default.parseUint16(data, 19);\r\n        aux = data[21];\r\n        hvcC.constantFrameRate = (aux >> 6);\r\n        hvcC.numTemporalLayers = (aux & 0XD) >> 3;\r\n        hvcC.temporalIdNested = (aux & 0X4) >> 2;\r\n        hvcC.lengthSizeMinusOne = (aux & 0X3);\r\n        // TODO: read H265 nalus\r\n        return hvcC;\r\n    };\r\n    return HvcC;\r\n}(atom_1.Atom));\r\nexports.HvcC = HvcC;\r\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar atom_1 = __webpack_require__(0);\r\nvar ftyp_1 = __webpack_require__(15);\r\nvar stsd_1 = __webpack_require__(32);\r\nvar avc1_1 = __webpack_require__(10);\r\nvar avcC_1 = __webpack_require__(11);\r\nvar mvhd_1 = __webpack_require__(26);\r\nvar trex_1 = __webpack_require__(39);\r\nvar tkhd_1 = __webpack_require__(38);\r\nvar mdhd_1 = __webpack_require__(23);\r\nvar hdlr_1 = __webpack_require__(16);\r\nvar vmhd_1 = __webpack_require__(41);\r\nvar dref_1 = __webpack_require__(12);\r\nvar stts_1 = __webpack_require__(34);\r\nvar stsc_1 = __webpack_require__(31);\r\nvar stsz_1 = __webpack_require__(33);\r\nvar stco_1 = __webpack_require__(30);\r\nvar smhd_1 = __webpack_require__(29);\r\nvar mp4a_1 = __webpack_require__(25);\r\nvar esds_1 = __webpack_require__(14);\r\nvar sidx_1 = __webpack_require__(28);\r\nvar tfhd_1 = __webpack_require__(37);\r\nvar tfdt_1 = __webpack_require__(36);\r\nvar trun_1 = __webpack_require__(40);\r\nvar mfhd_1 = __webpack_require__(24);\r\nvar mdat_1 = __webpack_require__(22);\r\nvar emsg_1 = __webpack_require__(13);\r\nvar styp_1 = __webpack_require__(35);\r\nvar pssh_1 = __webpack_require__(27);\r\nvar hvcC_1 = __webpack_require__(20);\r\nvar hvc1_1 = __webpack_require__(19);\r\nvar hev1_1 = __webpack_require__(18);\r\nexports.boxesParsers = {};\r\nexports.boxesParsers[atom_1.Atom.ftyp] = ftyp_1.Ftyp.parse;\r\nexports.boxesParsers[atom_1.Atom.stsd] = stsd_1.Stsd.parse;\r\nexports.boxesParsers[atom_1.Atom.avc1] = avc1_1.Avc1.parse;\r\nexports.boxesParsers[atom_1.Atom.avcC] = avcC_1.AvcC.parse;\r\nexports.boxesParsers[atom_1.Atom.mvhd] = mvhd_1.Mvhd.parse;\r\nexports.boxesParsers[atom_1.Atom.trex] = trex_1.Trex.parse;\r\nexports.boxesParsers[atom_1.Atom.tkhd] = tkhd_1.Tkhd.parse;\r\nexports.boxesParsers[atom_1.Atom.mdhd] = mdhd_1.Mdhd.parse;\r\nexports.boxesParsers[atom_1.Atom.hdlr] = hdlr_1.Hdlr.parse;\r\nexports.boxesParsers[atom_1.Atom.vmhd] = vmhd_1.Vmhd.parse;\r\nexports.boxesParsers[atom_1.Atom.dref] = dref_1.Dref.parse;\r\nexports.boxesParsers[atom_1.Atom.stts] = stts_1.Stts.parse;\r\nexports.boxesParsers[atom_1.Atom.stsc] = stsc_1.Stsc.parse;\r\nexports.boxesParsers[atom_1.Atom.stsz] = stsz_1.Stsz.parse;\r\nexports.boxesParsers[atom_1.Atom.stco] = stco_1.Stco.parse;\r\nexports.boxesParsers[atom_1.Atom.smhd] = smhd_1.Smhd.parse;\r\nexports.boxesParsers[atom_1.Atom.mp4a] = mp4a_1.Mp4a.parse;\r\nexports.boxesParsers[atom_1.Atom.esds] = esds_1.Esds.parse;\r\nexports.boxesParsers[atom_1.Atom.sidx] = sidx_1.Sidx.parse;\r\nexports.boxesParsers[atom_1.Atom.tfhd] = tfhd_1.Tfhd.parse;\r\nexports.boxesParsers[atom_1.Atom.tfdt] = tfdt_1.Tfdt.parse;\r\nexports.boxesParsers[atom_1.Atom.trun] = trun_1.Trun.parse;\r\nexports.boxesParsers[atom_1.Atom.mfhd] = mfhd_1.Mfhd.parse;\r\nexports.boxesParsers[atom_1.Atom.mdat] = mdat_1.Mdat.parse;\r\nexports.boxesParsers[atom_1.Atom.emsg] = emsg_1.Emsg.parse;\r\nexports.boxesParsers[atom_1.Atom.styp] = styp_1.Styp.parse;\r\nexports.boxesParsers[atom_1.Atom.pssh] = pssh_1.Pssh.parse;\r\nexports.boxesParsers[atom_1.Atom.hvcC] = hvcC_1.HvcC.parse;\r\nexports.boxesParsers[atom_1.Atom.hvc1] = hvc1_1.Hvc1.parse;\r\nexports.boxesParsers[atom_1.Atom.hev1] = hev1_1.Hev1.parse;\r\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar byte_parser_utils_1 = __webpack_require__(1);\r\nvar atom_1 = __webpack_require__(0);\r\nvar Mdat = (function (_super) {\r\n    __extends(Mdat, _super);\r\n    function Mdat() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Mdat.parse = function (data) {\r\n        var mdat = new Mdat(atom_1.Atom.mdat, data.byteLength);\r\n        Mdat.parsePayload(data);\r\n        return mdat;\r\n    };\r\n    Mdat.parsePayload = function (data) {\r\n        var length;\r\n        for (var i = 0; i + 4 < data.byteLength; i += length) {\r\n            length = byte_parser_utils_1.default.parseUint32(data, i);\r\n            i += 4;\r\n            if (length <= 0) {\r\n                console.log('is this an H264 stream?');\r\n                continue;\r\n            }\r\n            var nalType = data[i] & 0x1F;\r\n            switch (nalType) {\r\n                case 0x01:\r\n                    console.log('slice_layer_without_partitioning_rbsp');\r\n                    break;\r\n                case 0x05:\r\n                    console.log('slice_layer_without_partitioning_rbsp_idr');\r\n                    break;\r\n                case 0x06:\r\n                    console.log('sei_rbsp');\r\n                    break;\r\n                case 0x07:\r\n                    console.log('seq_parameter_set_rbsp');\r\n                    break;\r\n                case 0x08:\r\n                    console.log('pic_parameter_set_rbsp');\r\n                    break;\r\n                case 0x09:\r\n                    console.log('access_unit_delimiter_rbsp');\r\n                    break;\r\n                default:\r\n                    console.log('Unknown nal unit: ' + nalType);\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n    return Mdat;\r\n}(atom_1.Atom));\r\nexports.Mdat = Mdat;\r\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar byte_parser_utils_1 = __webpack_require__(1);\r\nvar atom_1 = __webpack_require__(0);\r\nvar Mdhd = (function (_super) {\r\n    __extends(Mdhd, _super);\r\n    function Mdhd() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Mdhd.parse = function (data) {\r\n        var mdhd = new Mdhd(atom_1.Atom.mdhd, data.byteLength);\r\n        mdhd.version = data[0];\r\n        mdhd.flags = data.subarray(1, 4);\r\n        var offset = 4;\r\n        if (mdhd.version === 1) {\r\n            offset += 4;\r\n            mdhd.creationTime = byte_parser_utils_1.default.parseIsoBoxDate(byte_parser_utils_1.default.parseUint32(data, offset));\r\n            offset += 8;\r\n            mdhd.modificationTime = byte_parser_utils_1.default.parseIsoBoxDate(byte_parser_utils_1.default.parseUint32(data, offset));\r\n            offset += 4;\r\n            mdhd.timescale = byte_parser_utils_1.default.parseUint32(data, offset);\r\n            offset += 8;\r\n            mdhd.duration = byte_parser_utils_1.default.parseUint32(data, offset);\r\n        }\r\n        else {\r\n            mdhd.creationTime = byte_parser_utils_1.default.parseIsoBoxDate(byte_parser_utils_1.default.parseUint32(data, offset));\r\n            offset += 4;\r\n            mdhd.modificationTime = byte_parser_utils_1.default.parseIsoBoxDate(byte_parser_utils_1.default.parseUint32(data, offset));\r\n            offset += 4;\r\n            mdhd.timescale = byte_parser_utils_1.default.parseUint32(data, offset);\r\n            offset += 4;\r\n            mdhd.duration = byte_parser_utils_1.default.parseUint32(data, offset);\r\n        }\r\n        offset += 4;\r\n        var langVal = byte_parser_utils_1.default.parseUint16(data, offset);\r\n        mdhd.language = '';\r\n        mdhd.language += String.fromCharCode((langVal >> 10) + 0x60);\r\n        mdhd.language += String.fromCharCode(((langVal & 0x03c0) >> 5) + 0x60);\r\n        mdhd.language += String.fromCharCode((langVal & 0x1f) + 0x60);\r\n        return mdhd;\r\n    };\r\n    return Mdhd;\r\n}(atom_1.Atom));\r\nexports.Mdhd = Mdhd;\r\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar byte_parser_utils_1 = __webpack_require__(1);\r\nvar atom_1 = __webpack_require__(0);\r\nvar Mfhd = (function (_super) {\r\n    __extends(Mfhd, _super);\r\n    function Mfhd() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Mfhd.parse = function (data) {\r\n        var mfhd = new Mfhd(atom_1.Atom.mfhd, data.byteLength);\r\n        mfhd.version = data[0];\r\n        mfhd.flags = data.subarray(1, 4);\r\n        mfhd.sequenceNumber = byte_parser_utils_1.default.parseUint32(data, 4);\r\n        return mfhd;\r\n    };\r\n    return Mfhd;\r\n}(atom_1.Atom));\r\nexports.Mfhd = Mfhd;\r\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar atom_1 = __webpack_require__(0);\r\nvar audio_atom_1 = __webpack_require__(17);\r\nvar Mp4a = (function (_super) {\r\n    __extends(Mp4a, _super);\r\n    function Mp4a() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Mp4a.parse = function (data) {\r\n        var atom = new Mp4a(atom_1.Atom.mp4a, data.byteLength);\r\n        audio_atom_1.AudioAtom.fillAudioAtom(atom, data);\r\n        return atom;\r\n    };\r\n    return Mp4a;\r\n}(audio_atom_1.AudioAtom));\r\nexports.Mp4a = Mp4a;\r\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar byte_parser_utils_1 = __webpack_require__(1);\r\nvar atom_1 = __webpack_require__(0);\r\nvar Mvhd = (function (_super) {\r\n    __extends(Mvhd, _super);\r\n    function Mvhd() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Mvhd.parse = function (data) {\r\n        var mvhd = new Mvhd(atom_1.Atom.mvhd, data.byteLength);\r\n        mvhd.version = data[0];\r\n        mvhd.flags = data.subarray(1, 4);\r\n        var offset = 4;\r\n        if (mvhd.version === 1) {\r\n            offset += 4;\r\n            mvhd.creationTime = byte_parser_utils_1.default.parseIsoBoxDate(byte_parser_utils_1.default.parseUint32(data, offset));\r\n            offset += 8;\r\n            mvhd.modificationTime = byte_parser_utils_1.default.parseIsoBoxDate(byte_parser_utils_1.default.parseUint32(data, offset));\r\n            offset += 4;\r\n            mvhd.timescale = byte_parser_utils_1.default.parseUint32(data, offset);\r\n            offset += 8;\r\n            mvhd.duration = byte_parser_utils_1.default.parseUint32(data, offset);\r\n        }\r\n        else {\r\n            mvhd.creationTime = byte_parser_utils_1.default.parseIsoBoxDate(byte_parser_utils_1.default.parseUint32(data, offset));\r\n            offset += 4;\r\n            mvhd.modificationTime = byte_parser_utils_1.default.parseIsoBoxDate(byte_parser_utils_1.default.parseUint32(data, offset));\r\n            offset += 4;\r\n            mvhd.timescale = byte_parser_utils_1.default.parseUint32(data, offset);\r\n            offset += 4;\r\n            mvhd.duration = byte_parser_utils_1.default.parseUint32(data, offset);\r\n        }\r\n        offset += 4;\r\n        mvhd.rate = byte_parser_utils_1.default.parseUint16(data, offset) +\r\n            byte_parser_utils_1.default.parseUint16(data, offset + 2) / 16;\r\n        offset += 4;\r\n        mvhd.volume = data[offset] + data[offset + 1] / 8;\r\n        offset += 12;\r\n        mvhd.matrix = new Uint32Array(data.subarray(offset, offset + (9 * 4)));\r\n        offset += 9 * 4;\r\n        mvhd.previewtime = byte_parser_utils_1.default.parseUint32(data, offset);\r\n        offset += 4;\r\n        mvhd.previewDuration = byte_parser_utils_1.default.parseUint32(data, offset);\r\n        offset += 4;\r\n        mvhd.posterTime = byte_parser_utils_1.default.parseUint32(data, offset);\r\n        offset += 4;\r\n        mvhd.selectionTime = byte_parser_utils_1.default.parseUint32(data, offset);\r\n        offset += 4;\r\n        mvhd.selectionDuration = byte_parser_utils_1.default.parseUint32(data, offset);\r\n        offset += 4;\r\n        mvhd.currentTime = byte_parser_utils_1.default.parseUint32(data, offset);\r\n        offset += 4;\r\n        mvhd.nextTrackId = byte_parser_utils_1.default.parseUint32(data, offset);\r\n        return mvhd;\r\n    };\r\n    return Mvhd;\r\n}(atom_1.Atom));\r\nexports.Mvhd = Mvhd;\r\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar byte_parser_utils_1 = __webpack_require__(1);\r\nvar atom_1 = __webpack_require__(0);\r\nvar Pssh = (function (_super) {\r\n    __extends(Pssh, _super);\r\n    function Pssh() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Pssh.parse = function (data) {\r\n        var pssh = new Pssh(atom_1.Atom.pssh, data.byteLength);\r\n        pssh.version = data[0];\r\n        pssh.flags = data.subarray(1, 4);\r\n        var offset = 4;\r\n        pssh.systemId = data.subarray(offset, offset + 16);\r\n        offset += 16;\r\n        if (pssh.version > 0) {\r\n            var count = byte_parser_utils_1.default.parseUint32(data, 4);\r\n            offset += 4;\r\n            pssh.kId = [];\r\n            for (var i = 0; i < count; i++) {\r\n                pssh.kId[i] = data.subarray(offset, offset + 16);\r\n                offset += 16;\r\n            }\r\n        }\r\n        var dataSize = byte_parser_utils_1.default.parseUint32(data, offset);\r\n        offset += 4;\r\n        if (dataSize > 0) {\r\n            pssh.data = data.subarray(offset, offset + 16);\r\n        }\r\n        return pssh;\r\n    };\r\n    return Pssh;\r\n}(atom_1.Atom));\r\nexports.Pssh = Pssh;\r\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar byte_parser_utils_1 = __webpack_require__(1);\r\nvar atom_1 = __webpack_require__(0);\r\nvar Reference = (function () {\r\n    function Reference(type, size, subsegmentDuration, startsWithSap, sapType, sapDeltaTime) {\r\n        this.type = type;\r\n        this.size = size;\r\n        this.subsegmentDuration = subsegmentDuration;\r\n        this.startsWithSap = startsWithSap;\r\n        this.sapType = sapType;\r\n        this.sapDeltaTime = sapDeltaTime;\r\n    }\r\n    return Reference;\r\n}());\r\nexports.Reference = Reference;\r\nvar Sidx = (function (_super) {\r\n    __extends(Sidx, _super);\r\n    function Sidx() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Sidx.parse = function (data) {\r\n        var sidx = new Sidx(atom_1.Atom.sidx, data.byteLength);\r\n        sidx.version = data[0];\r\n        sidx.flags = data.subarray(1, 4);\r\n        sidx.referenceId = byte_parser_utils_1.default.parseUint32(data, 4);\r\n        sidx.timescale = byte_parser_utils_1.default.parseUint32(data, 8);\r\n        var offset;\r\n        if (sidx.version === 0) {\r\n            sidx.earliestPresentationTime = byte_parser_utils_1.default.parseUint32(data, 12);\r\n            sidx.firstOffset = byte_parser_utils_1.default.parseUint32(data, 16);\r\n            offset = 20;\r\n        }\r\n        else {\r\n            sidx.earliestPresentationTime = byte_parser_utils_1.default.parseLong64(data, 12);\r\n            sidx.firstOffset = byte_parser_utils_1.default.parseLong64(data, 20);\r\n            offset = 28;\r\n        }\r\n        offset += 2;\r\n        var referenceCount = byte_parser_utils_1.default.parseUint16(data, offset);\r\n        sidx.references = [];\r\n        offset += 2;\r\n        for (var i = 0; i < referenceCount; i++) {\r\n            sidx.references.push(new Reference((data[offset] & 0x80) >>> 7, byte_parser_utils_1.default.parseUint32(data, offset) & 0x7FFFFFFF, byte_parser_utils_1.default.parseUint32(data, offset + 4), !!(data[offset + 8] & 0x80), (data[offset + 8] & 0x70) >>> 4, byte_parser_utils_1.default.parseUint32(data, offset + 8) & 0x0FFFFFFF));\r\n            offset += 12;\r\n        }\r\n        return sidx;\r\n    };\r\n    return Sidx;\r\n}(atom_1.Atom));\r\nexports.Sidx = Sidx;\r\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar atom_1 = __webpack_require__(0);\r\nvar Smhd = (function (_super) {\r\n    __extends(Smhd, _super);\r\n    function Smhd() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Smhd.parse = function (data) {\r\n        var smhd = new Smhd(atom_1.Atom.smhd, data.byteLength);\r\n        smhd.version = data[0];\r\n        smhd.flags = data.subarray(1, 4);\r\n        smhd.balance = data[4] + data[5] / 256;\r\n        return smhd;\r\n    };\r\n    return Smhd;\r\n}(atom_1.Atom));\r\nexports.Smhd = Smhd;\r\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar byte_parser_utils_1 = __webpack_require__(1);\r\nvar atom_1 = __webpack_require__(0);\r\nvar Stco = (function (_super) {\r\n    __extends(Stco, _super);\r\n    function Stco() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Stco.parse = function (data) {\r\n        var stco = new Stco(atom_1.Atom.stco, data.byteLength);\r\n        stco.version = data[0];\r\n        stco.flags = data.subarray(1, 4);\r\n        stco.chunkOffsets = [];\r\n        var entryCount = byte_parser_utils_1.default.parseUint32(data, 4);\r\n        var offset = 8;\r\n        for (var i = 0; i < entryCount; i++) {\r\n            stco.chunkOffsets.push(byte_parser_utils_1.default.parseUint32(data, offset));\r\n            offset += 4;\r\n        }\r\n        return stco;\r\n    };\r\n    return Stco;\r\n}(atom_1.Atom));\r\nexports.Stco = Stco;\r\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar byte_parser_utils_1 = __webpack_require__(1);\r\nvar atom_1 = __webpack_require__(0);\r\nvar SampleToChunkEntry = (function () {\r\n    function SampleToChunkEntry(firstChunk, samplesPerChunk, sampleDescriptionIndex) {\r\n        this.firstChunk = firstChunk;\r\n        this.samplesPerChunk = samplesPerChunk;\r\n        this.sampleDescriptionIndex = sampleDescriptionIndex;\r\n    }\r\n    return SampleToChunkEntry;\r\n}());\r\nexports.SampleToChunkEntry = SampleToChunkEntry;\r\nvar Stsc = (function (_super) {\r\n    __extends(Stsc, _super);\r\n    function Stsc() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Stsc.parse = function (data) {\r\n        var stsc = new Stsc(atom_1.Atom.stsc, data.byteLength);\r\n        stsc.version = data[0];\r\n        stsc.flags = data.subarray(1, 4);\r\n        stsc.sampleToChunks = [];\r\n        var entryCount = byte_parser_utils_1.default.parseUint32(data, 4);\r\n        var offset = 8;\r\n        for (var i = 0; i < entryCount; i++) {\r\n            stsc.sampleToChunks.push(new SampleToChunkEntry(byte_parser_utils_1.default.parseUint32(data, offset), byte_parser_utils_1.default.parseUint32(data, offset + 4), byte_parser_utils_1.default.parseUint32(data, offset + 8)));\r\n            offset += 12;\r\n        }\r\n        return stsc;\r\n    };\r\n    return Stsc;\r\n}(atom_1.Atom));\r\nexports.Stsc = Stsc;\r\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar byte_parser_utils_1 = __webpack_require__(1);\r\nvar atom_1 = __webpack_require__(0);\r\nvar Stsd = (function (_super) {\r\n    __extends(Stsd, _super);\r\n    function Stsd() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Stsd.parse = function (data) {\r\n        var stsd = new Stsd(atom_1.Atom.stsd, data.byteLength);\r\n        stsd.containerDataOffset = 8;\r\n        stsd.version = data[0];\r\n        stsd.flags = data.subarray(1, 4);\r\n        stsd.entryCount = byte_parser_utils_1.default.parseUint32(data, 4);\r\n        return stsd;\r\n    };\r\n    return Stsd;\r\n}(atom_1.ContainerAtom));\r\nexports.Stsd = Stsd;\r\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar byte_parser_utils_1 = __webpack_require__(1);\r\nvar atom_1 = __webpack_require__(0);\r\nvar Stsz = (function (_super) {\r\n    __extends(Stsz, _super);\r\n    function Stsz() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Stsz.parse = function (data) {\r\n        var stsz = new Stsz(atom_1.Atom.stsz, data.byteLength);\r\n        stsz.version = data[0];\r\n        stsz.flags = data.subarray(1, 4);\r\n        stsz.sampleSize = byte_parser_utils_1.default.parseUint32(data, 4);\r\n        stsz.entries = [];\r\n        for (var i = 12; i < data.byteLength; i += 4) {\r\n            stsz.entries.push(byte_parser_utils_1.default.parseUint32(data, i));\r\n        }\r\n        return stsz;\r\n    };\r\n    return Stsz;\r\n}(atom_1.Atom));\r\nexports.Stsz = Stsz;\r\n\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar byte_parser_utils_1 = __webpack_require__(1);\r\nvar atom_1 = __webpack_require__(0);\r\nvar TimeToSampleEntry = (function () {\r\n    function TimeToSampleEntry(sampleCount, sampleDelta) {\r\n        this.sampleCount = sampleCount;\r\n        this.sampleDelta = sampleDelta;\r\n    }\r\n    return TimeToSampleEntry;\r\n}());\r\nexports.TimeToSampleEntry = TimeToSampleEntry;\r\nvar Stts = (function (_super) {\r\n    __extends(Stts, _super);\r\n    function Stts() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Stts.parse = function (data) {\r\n        var stts = new Stts(atom_1.Atom.stts, data.byteLength);\r\n        stts.version = data[0];\r\n        stts.flags = data.subarray(1, 4);\r\n        stts.timeToSamples = [];\r\n        var entryCount = byte_parser_utils_1.default.parseUint32(data, 4);\r\n        var offset = 8;\r\n        for (var i = 0; i < entryCount; i++) {\r\n            stts.timeToSamples.push(new TimeToSampleEntry(byte_parser_utils_1.default.parseUint32(data, offset), byte_parser_utils_1.default.parseUint32(data, offset + 4)));\r\n            offset += 8;\r\n        }\r\n        return stts;\r\n    };\r\n    return Stts;\r\n}(atom_1.Atom));\r\nexports.Stts = Stts;\r\n\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar byte_parser_utils_1 = __webpack_require__(1);\r\nvar atom_1 = __webpack_require__(0);\r\nvar Styp = (function (_super) {\r\n    __extends(Styp, _super);\r\n    function Styp() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Styp.parse = function (data) {\r\n        var styp = new Styp(atom_1.Atom.styp, data.byteLength);\r\n        styp.majorBrand = byte_parser_utils_1.default.parseIsoBoxType(data, 0);\r\n        styp.minorVersion = byte_parser_utils_1.default.parseUint32(data, 4);\r\n        styp.compatibleBrands = [];\r\n        var i = 8;\r\n        while (i < data.byteLength) {\r\n            styp.compatibleBrands.push(byte_parser_utils_1.default.parseIsoBoxType(data, i));\r\n            i += 4;\r\n        }\r\n        return styp;\r\n    };\r\n    return Styp;\r\n}(atom_1.Atom));\r\nexports.Styp = Styp;\r\n\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar byte_parser_utils_1 = __webpack_require__(1);\r\nvar atom_1 = __webpack_require__(0);\r\nvar Tfdt = (function (_super) {\r\n    __extends(Tfdt, _super);\r\n    function Tfdt() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Tfdt.parse = function (data) {\r\n        var tfdt = new Tfdt(atom_1.Atom.tfdt, data.byteLength);\r\n        tfdt.version = data[0];\r\n        tfdt.flags = data.subarray(1, 4);\r\n        tfdt.baseMediaDecodeTime = byte_parser_utils_1.default.parseUint32(data, 4);\r\n        if (tfdt.version === 1) {\r\n            tfdt.baseMediaDecodeTime *= Math.pow(2, 32);\r\n            tfdt.baseMediaDecodeTime += byte_parser_utils_1.default.parseUint32(data, 8);\r\n        }\r\n        return tfdt;\r\n    };\r\n    return Tfdt;\r\n}(atom_1.Atom));\r\nexports.Tfdt = Tfdt;\r\n\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar byte_parser_utils_1 = __webpack_require__(1);\r\nvar atom_1 = __webpack_require__(0);\r\nvar Tfhd = (function (_super) {\r\n    __extends(Tfhd, _super);\r\n    function Tfhd() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Tfhd.parse = function (data) {\r\n        var tfhd = new Tfhd(atom_1.Atom.tfhd, data.byteLength);\r\n        tfhd.version = data[0];\r\n        tfhd.flags = data.subarray(1, 4);\r\n        var baseDataOffsetPresent = !!(tfhd.flags[2] & 0x01);\r\n        var sampleDescriptionIndexPresent = !!(tfhd.flags[2] & 0x02);\r\n        var defaultSampleDurationPresent = !!(tfhd.flags[2] & 0x08);\r\n        var defaultSampleSizePresent = !!(tfhd.flags[2] & 0x10);\r\n        var defaultSampleFlagsPresent = !!(tfhd.flags[2] & 0x20);\r\n        var offset = 8;\r\n        if (baseDataOffsetPresent) {\r\n            tfhd.baseDataOffset = byte_parser_utils_1.default.parseLong64(data, 12);\r\n            offset += 8;\r\n        }\r\n        if (sampleDescriptionIndexPresent) {\r\n            tfhd.sampleDescriptionIndex = byte_parser_utils_1.default.parseUint32(data, offset);\r\n            offset += 4;\r\n        }\r\n        if (defaultSampleDurationPresent) {\r\n            tfhd.defaultSampleDuration = byte_parser_utils_1.default.parseUint32(data, offset);\r\n            offset += 4;\r\n        }\r\n        if (defaultSampleSizePresent) {\r\n            tfhd.defaultSampleSize = byte_parser_utils_1.default.parseUint32(data, offset);\r\n            offset += 4;\r\n        }\r\n        if (defaultSampleFlagsPresent) {\r\n            tfhd.defaultSampleFlags = byte_parser_utils_1.default.parseUint32(data, offset);\r\n        }\r\n        return tfhd;\r\n    };\r\n    return Tfhd;\r\n}(atom_1.Atom));\r\nexports.Tfhd = Tfhd;\r\n\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar byte_parser_utils_1 = __webpack_require__(1);\r\nvar atom_1 = __webpack_require__(0);\r\nvar Tkhd = (function (_super) {\r\n    __extends(Tkhd, _super);\r\n    function Tkhd() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Tkhd.parse = function (data) {\r\n        var tkhd = new Tkhd(atom_1.Atom.tkhd, data.byteLength);\r\n        tkhd.version = data[0];\r\n        tkhd.flags = data.subarray(1, 4);\r\n        var offset = 4;\r\n        if (tkhd.version === 1) {\r\n            offset += 4;\r\n            tkhd.creationTime = byte_parser_utils_1.default.parseIsoBoxDate(byte_parser_utils_1.default.parseUint32(data, offset));\r\n            offset += 8;\r\n            tkhd.modificationTime = byte_parser_utils_1.default.parseIsoBoxDate(byte_parser_utils_1.default.parseUint32(data, offset));\r\n            offset += 4;\r\n            tkhd.trackId = byte_parser_utils_1.default.parseUint32(data, offset);\r\n            offset += 12;\r\n            tkhd.duration = byte_parser_utils_1.default.parseUint32(data, offset);\r\n        }\r\n        else {\r\n            tkhd.creationTime = byte_parser_utils_1.default.parseIsoBoxDate(byte_parser_utils_1.default.parseUint32(data, offset));\r\n            offset += 4;\r\n            tkhd.modificationTime = byte_parser_utils_1.default.parseIsoBoxDate(byte_parser_utils_1.default.parseUint32(data, offset));\r\n            offset += 4;\r\n            tkhd.trackId = byte_parser_utils_1.default.parseUint32(data, offset);\r\n            offset += 8;\r\n            tkhd.duration = byte_parser_utils_1.default.parseUint32(data, offset);\r\n        }\r\n        offset += 12;\r\n        tkhd.layer = byte_parser_utils_1.default.parseUint16(data, offset);\r\n        offset += 2;\r\n        tkhd.alternateGroup = byte_parser_utils_1.default.parseUint16(data, offset);\r\n        offset += 2;\r\n        tkhd.volume = data[offset] + (data[offset + 1] / 8);\r\n        offset += 4;\r\n        tkhd.matrix = new Uint32Array(data.subarray(offset, offset + (9 * 4)));\r\n        offset += 9 * 4;\r\n        tkhd.width = byte_parser_utils_1.default.parseUint16(data, offset) +\r\n            (byte_parser_utils_1.default.parseUint16(data, offset + 2) / 16);\r\n        offset += 4;\r\n        tkhd.height = byte_parser_utils_1.default.parseUint16(data, offset) +\r\n            (byte_parser_utils_1.default.parseUint16(data, offset + 2) / 16);\r\n        return tkhd;\r\n    };\r\n    return Tkhd;\r\n}(atom_1.Atom));\r\nexports.Tkhd = Tkhd;\r\n\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar byte_parser_utils_1 = __webpack_require__(1);\r\nvar atom_1 = __webpack_require__(0);\r\nvar Trex = (function (_super) {\r\n    __extends(Trex, _super);\r\n    function Trex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Trex.parse = function (data) {\r\n        var trex = new Trex(atom_1.Atom.trex, data.byteLength);\r\n        trex.version = data[0];\r\n        trex.flags = new Uint8Array(data.subarray(1, 4)),\r\n            trex.trackId = byte_parser_utils_1.default.parseUint32(data, 4),\r\n            trex.defaultSampleDescriptionIndex = byte_parser_utils_1.default.parseUint32(data, 8);\r\n        trex.defaultSampleDuration = byte_parser_utils_1.default.parseUint32(data, 12);\r\n        trex.defaultSampleSize = byte_parser_utils_1.default.parseUint32(data, 16);\r\n        trex.sampleDependsOn = data[20] & 0x03;\r\n        trex.sampleIsDependedOn = (data[21] & 0xc0) >> 6;\r\n        trex.sampleHasRedundancy = (data[21] & 0x30) >> 4;\r\n        trex.samplePaddingValue = (data[21] & 0x0e) >> 1;\r\n        trex.sampleIsDifferenceSample = !!(data[21] & 0x01);\r\n        trex.sampleDegradationPriority = byte_parser_utils_1.default.parseUint32(data, 22);\r\n        return trex;\r\n    };\r\n    return Trex;\r\n}(atom_1.Atom));\r\nexports.Trex = Trex;\r\n\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar byte_parser_utils_1 = __webpack_require__(1);\r\nvar atom_1 = __webpack_require__(0);\r\nvar SampleFlags = (function () {\r\n    function SampleFlags(isLeading, dependsOn, isDependedOn, hasRedundancy, paddingValue, isSyncFrame, degradationPriority) {\r\n        this.isLeading = isLeading;\r\n        this.dependsOn = dependsOn;\r\n        this.isDependedOn = isDependedOn;\r\n        this.hasRedundancy = hasRedundancy;\r\n        this.paddingValue = paddingValue;\r\n        this.isSyncFrame = isSyncFrame;\r\n        this.degradationPriority = degradationPriority;\r\n    }\r\n    return SampleFlags;\r\n}());\r\nexports.SampleFlags = SampleFlags;\r\nvar Sample = (function () {\r\n    function Sample() {\r\n    }\r\n    return Sample;\r\n}());\r\nexports.Sample = Sample;\r\nvar Trun = (function (_super) {\r\n    __extends(Trun, _super);\r\n    function Trun() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Trun.parse = function (data) {\r\n        var trun = new Trun(atom_1.Atom.trun, data.byteLength);\r\n        trun.version = data[0];\r\n        trun.flags = data.subarray(1, 4);\r\n        var dataOffsetPresent = !!(trun.flags[2] & 0x01);\r\n        var firstSampleFlagsPresent = !!(trun.flags[2] & 0x04);\r\n        var sampleDurationPresent = !!(trun.flags[1] & 0x01);\r\n        var sampleSizePresent = !!(trun.flags[1] & 0x02);\r\n        var sampleFlagsPresent = !!(trun.flags[1] & 0x04);\r\n        var sampleCompositionTimeOffsetPresent = !!(trun.flags[1] & 0x08);\r\n        var sampleCount = byte_parser_utils_1.default.parseUint32(data, 4);\r\n        var offset = 8;\r\n        trun.samples = [];\r\n        var totalSize = 0;\r\n        if (dataOffsetPresent) {\r\n            trun.dataOffset = byte_parser_utils_1.default.parseUint32(data, offset);\r\n            offset += 4;\r\n        }\r\n        if (firstSampleFlagsPresent && sampleCount) {\r\n            var sample = new Sample();\r\n            sample.flags = Trun.parseFlags(data.subarray(offset, offset + 4));\r\n            offset += 4;\r\n            if (sampleDurationPresent) {\r\n                sample.duration = byte_parser_utils_1.default.parseUint32(data, offset);\r\n                offset += 4;\r\n            }\r\n            if (sampleSizePresent) {\r\n                sample.size = byte_parser_utils_1.default.parseUint32(data, offset);\r\n                totalSize += sample.size;\r\n                offset += 4;\r\n            }\r\n            if (sampleCompositionTimeOffsetPresent) {\r\n                sample.compositionTimeOffset = byte_parser_utils_1.default.parseUint32(data, offset);\r\n                offset += 4;\r\n            }\r\n            trun.samples.push(sample);\r\n            sampleCount--;\r\n        }\r\n        while (sampleCount--) {\r\n            var sample = new Sample();\r\n            if (sampleDurationPresent) {\r\n                sample.duration = byte_parser_utils_1.default.parseUint32(data, offset);\r\n                offset += 4;\r\n            }\r\n            if (sampleSizePresent) {\r\n                sample.size = byte_parser_utils_1.default.parseUint32(data, offset);\r\n                totalSize += sample.size;\r\n                offset += 4;\r\n            }\r\n            if (sampleFlagsPresent) {\r\n                sample.flags = Trun.parseFlags(data.subarray(offset, offset + 4));\r\n                offset += 4;\r\n            }\r\n            if (sampleCompositionTimeOffsetPresent) {\r\n                sample.compositionTimeOffset = byte_parser_utils_1.default.parseUint32(data, offset);\r\n                offset += 4;\r\n            }\r\n            trun.samples.push(sample);\r\n        }\r\n        console.log('total size: ' + totalSize);\r\n        return trun;\r\n    };\r\n    Trun.parseFlags = function (data) {\r\n        return new SampleFlags((data[0] & 0x0c) >>> 2, (data[0] & 0x03), (data[1] & 0xc0) >>> 6, (data[1] & 0x30) >>> 4, (data[1] & 0x0e) >>> 1, (data[1] & 0x01) === 0, (data[2] << 8) | data[3]);\r\n    };\r\n    return Trun;\r\n}(atom_1.Atom));\r\nexports.Trun = Trun;\r\n\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar byte_parser_utils_1 = __webpack_require__(1);\r\nvar atom_1 = __webpack_require__(0);\r\nvar Vmhd = (function (_super) {\r\n    __extends(Vmhd, _super);\r\n    function Vmhd() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Vmhd.parse = function (data) {\r\n        var vmhd = new Vmhd(atom_1.Atom.vmhd, data.byteLength);\r\n        vmhd.version = data[0];\r\n        vmhd.flags = data.subarray(1, 4);\r\n        vmhd.graphichsMode = byte_parser_utils_1.default.parseUint16(data, 4);\r\n        vmhd.opColor = new Uint16Array([\r\n            byte_parser_utils_1.default.parseUint16(data, 6),\r\n            byte_parser_utils_1.default.parseUint16(data, 8),\r\n            byte_parser_utils_1.default.parseUint16(data, 10)\r\n        ]);\r\n        return vmhd;\r\n    };\r\n    return Vmhd;\r\n}(atom_1.Atom));\r\nexports.Vmhd = Vmhd;\r\n\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar byte_parser_utils_1 = __webpack_require__(1);\r\nvar atoms_1 = __webpack_require__(21);\r\nvar atom_1 = __webpack_require__(0);\r\nvar track_1 = __webpack_require__(2);\r\nvar mp4_track_1 = __webpack_require__(43);\r\nvar Mp4Demuxer = (function () {\r\n    function Mp4Demuxer() {\r\n        this.atoms = [];\r\n        this.tracks = {};\r\n    }\r\n    Mp4Demuxer.prototype.append = function (data) {\r\n        this.atoms = this.parseAtoms(data);\r\n    };\r\n    Mp4Demuxer.prototype.end = function () {\r\n        // do nothing\r\n    };\r\n    Mp4Demuxer.prototype.parseAtoms = function (data, offset) {\r\n        if (offset === void 0) { offset = 0; }\r\n        var atoms = [];\r\n        this.data = data;\r\n        var dataOffset = offset;\r\n        while (dataOffset < data.byteLength) {\r\n            var size = byte_parser_utils_1.default.parseUint32(data, dataOffset);\r\n            var type = byte_parser_utils_1.default.parseIsoBoxType(data, dataOffset + 4);\r\n            var end = size > 1 ? dataOffset + size : data.byteLength;\r\n            var boxData = data.subarray(dataOffset + 8, end);\r\n            // parse\r\n            var atom = void 0;\r\n            if (atoms_1.boxesParsers[type]) {\r\n                atom = atoms_1.boxesParsers[type](boxData);\r\n            }\r\n            if (!atom) {\r\n                // don't know how to parse this box\r\n                // so let's just add it without parsing its content\r\n                if (atom_1.Atom.isContainerBox(type)) {\r\n                    atom = new atom_1.ContainerAtom(type, boxData.byteLength);\r\n                }\r\n                else {\r\n                    atom = new atom_1.Atom(type, boxData.byteLength);\r\n                }\r\n            }\r\n            if (atom instanceof atom_1.ContainerAtom) {\r\n                atom.atoms = this.parseAtoms(boxData, atom.containerDataOffset);\r\n            }\r\n            atoms.push(atom);\r\n            this.processAtom(atom);\r\n            dataOffset = end;\r\n        }\r\n        return atoms;\r\n    };\r\n    Mp4Demuxer.prototype.processAtom = function (atom) {\r\n        switch (atom.type) {\r\n            case atom_1.Atom.tkhd:\r\n                this.lastTrackId = atom.trackId;\r\n                break;\r\n            case atom_1.Atom.avcC:\r\n                if (this.lastTrackId > 0) {\r\n                    this.tracks[this.lastTrackId] = new mp4_track_1.default(this.lastTrackId, track_1.default.TYPE_VIDEO, track_1.default.MIME_TYPE_AVC, atom);\r\n                }\r\n                break;\r\n            case atom_1.Atom.hvcC:\r\n                if (this.lastTrackId > 0) {\r\n                    this.tracks[this.lastTrackId] = new mp4_track_1.default(this.lastTrackId, track_1.default.TYPE_VIDEO, track_1.default.MIME_TYPE_HEVC, atom);\r\n                }\r\n                break;\r\n            case atom_1.Atom.mp4a:\r\n                if (this.lastTrackId > 0) {\r\n                    this.tracks[this.lastTrackId] = new mp4_track_1.default(this.lastTrackId, track_1.default.TYPE_AUDIO, track_1.default.MIME_TYPE_AAC, atom);\r\n                }\r\n                break;\r\n            case atom_1.Atom.sidx:\r\n                this.checkTrack();\r\n                this.tracks[this.lastTrackId].setSidxAtom(atom);\r\n                break;\r\n            case atom_1.Atom.trun:\r\n                this.checkTrack();\r\n                this.tracks[this.lastTrackId].setTrunAtom(atom);\r\n                break;\r\n        }\r\n    };\r\n    Mp4Demuxer.prototype.checkTrack = function () {\r\n        if (this.lastTrackId === 0 || !this.tracks[this.lastTrackId]) {\r\n            this.lastTrackId = 1;\r\n            this.tracks[this.lastTrackId] = new mp4_track_1.default(this.lastTrackId, track_1.default.TYPE_UNKNOWN, track_1.default.MIME_TYPE_UNKNOWN, null);\r\n        }\r\n    };\r\n    return Mp4Demuxer;\r\n}());\r\nexports.default = Mp4Demuxer;\r\n\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar track_1 = __webpack_require__(2);\r\nvar frame_1 = __webpack_require__(4);\r\nvar Mp4Track = (function (_super) {\r\n    __extends(Mp4Track, _super);\r\n    function Mp4Track(id, type, mimeType, referenceAtom) {\r\n        var _this = _super.call(this, id, type, mimeType) || this;\r\n        _this.referenceAtom = referenceAtom;\r\n        _this.frames = [];\r\n        _this.lastPts = 0;\r\n        return _this;\r\n    }\r\n    Mp4Track.prototype.getFrames = function () {\r\n        return this.frames;\r\n    };\r\n    Mp4Track.prototype.setSidxAtom = function (atom) {\r\n        this.sidx = atom;\r\n        this.lastPts = 1000000 * this.sidx.earliestPresentationTime / this.sidx.timescale;\r\n    };\r\n    Mp4Track.prototype.setTrunAtom = function (atom) {\r\n        this.trun = atom;\r\n        for (var _i = 0, _a = this.trun.samples; _i < _a.length; _i++) {\r\n            var sample = _a[_i];\r\n            if (sample.flags) {\r\n                this.frames.push(new frame_1.default(sample.flags.isSyncFrame ? frame_1.default.IDR_FRAME : frame_1.default.P_FRAME, this.lastPts));\r\n            }\r\n            if (sample.duration) {\r\n                this.lastPts += sample.duration;\r\n            }\r\n        }\r\n    };\r\n    return Mp4Track;\r\n}(track_1.default));\r\nexports.default = Mp4Track;\r\n\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar bit_reader_1 = __webpack_require__(5);\r\nvar pes_reader_1 = __webpack_require__(50);\r\nvar ts_track_1 = __webpack_require__(51);\r\nvar track_1 = __webpack_require__(2);\r\nvar CONTAINER_TYPE;\r\n(function (CONTAINER_TYPE) {\r\n    CONTAINER_TYPE[CONTAINER_TYPE[\"UNKNOWN\"] = 1] = \"UNKNOWN\";\r\n    CONTAINER_TYPE[CONTAINER_TYPE[\"MPEG_TS\"] = 2] = \"MPEG_TS\";\r\n    CONTAINER_TYPE[CONTAINER_TYPE[\"RAW_AAC\"] = 3] = \"RAW_AAC\";\r\n})(CONTAINER_TYPE || (CONTAINER_TYPE = {}));\r\nvar MpegTSDemuxer = (function () {\r\n    function MpegTSDemuxer() {\r\n        this.containerType = CONTAINER_TYPE.UNKNOWN;\r\n        this.pmtParsed = false;\r\n        this.packetsCount = 0;\r\n        this.pmtId = -1;\r\n        this.tracks = {};\r\n    }\r\n    MpegTSDemuxer.prototype.append = function (data) {\r\n        if (!this.data || this.data.byteLength === 0 || this.dataOffset >= this.data.byteLength) {\r\n            this.data = data;\r\n            this.dataOffset = 0;\r\n        }\r\n        else {\r\n            var newLen = this.data.byteLength + data.byteLength;\r\n            var temp = new Uint8Array(newLen);\r\n            temp.set(this.data, 0);\r\n            temp.set(data, this.data.byteLength);\r\n            this.data = temp;\r\n        }\r\n        this.findContainerType();\r\n        if (this.containerType === CONTAINER_TYPE.MPEG_TS) {\r\n            this.readHeader();\r\n            this.readSamples();\r\n        }\r\n        else {\r\n            var dataParser = new bit_reader_1.default(this.data);\r\n            this.tracks[0] = new ts_track_1.default(0, track_1.default.TYPE_AUDIO, track_1.default.MIME_TYPE_AAC, new pes_reader_1.default(0, pes_reader_1.default.TS_STREAM_TYPE_AAC));\r\n            this.tracks[0].pes.appendData(false, dataParser);\r\n        }\r\n        if (this.dataOffset > 0) {\r\n            this.data = this.data.subarray(this.dataOffset);\r\n            this.dataOffset = 0;\r\n        }\r\n    };\r\n    MpegTSDemuxer.prototype.end = function () {\r\n        for (var id in this.tracks) {\r\n            if (this.tracks.hasOwnProperty(id)) {\r\n                this.tracks[id].pes.flush();\r\n            }\r\n        }\r\n    };\r\n    MpegTSDemuxer.prototype.resetTracks = function () {\r\n        for (var id in this.tracks) {\r\n            if (this.tracks.hasOwnProperty(id)) {\r\n                this.tracks[id].pes.reset();\r\n            }\r\n        }\r\n    };\r\n    MpegTSDemuxer.prototype.findContainerType = function () {\r\n        while (this.dataOffset < this.data.byteLength) {\r\n            if (this.data[this.dataOffset] === MpegTSDemuxer.MPEGTS_SYNC) {\r\n                this.containerType = CONTAINER_TYPE.MPEG_TS;\r\n                break;\r\n            }\r\n            else if ((this.data.byteLength - this.dataOffset) >= 4) {\r\n                var dataRead = (this.data[this.dataOffset] << 8) | (this.data[this.dataOffset + 1]);\r\n                if (dataRead === 0x4944 || (dataRead & 0xfff6) === 0xfff0) {\r\n                    this.containerType = CONTAINER_TYPE.RAW_AAC;\r\n                    break;\r\n                }\r\n            }\r\n            this.dataOffset++;\r\n        }\r\n        if (this.containerType === CONTAINER_TYPE.UNKNOWN) {\r\n            throw new Error('Format not supported');\r\n        }\r\n    };\r\n    MpegTSDemuxer.prototype.readHeader = function () {\r\n        while (this.dataOffset < this.data.byteLength - 1) {\r\n            var byteRead = this.data[this.dataOffset];\r\n            this.dataOffset++;\r\n            if (byteRead === MpegTSDemuxer.MPEGTS_SYNC\r\n                && (this.data.byteLength - this.dataOffset) >= MpegTSDemuxer.MPEGTS_PACKET_SIZE) {\r\n                var packet = this.data.subarray(this.dataOffset, this.dataOffset + MpegTSDemuxer.MPEGTS_PACKET_SIZE);\r\n                this.dataOffset += MpegTSDemuxer.MPEGTS_PACKET_SIZE;\r\n                this.processTSPacket(packet);\r\n                if (this.pmtParsed) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    MpegTSDemuxer.prototype.readSamples = function () {\r\n        while (this.dataOffset < this.data.byteLength - 1) {\r\n            var byteRead = this.data[this.dataOffset++];\r\n            if (byteRead === MpegTSDemuxer.MPEGTS_SYNC\r\n                && (this.data.byteLength - this.dataOffset) >= MpegTSDemuxer.MPEGTS_PACKET_SIZE) {\r\n                var packet = this.data.subarray(this.dataOffset, this.dataOffset\r\n                    + MpegTSDemuxer.MPEGTS_PACKET_SIZE);\r\n                this.dataOffset += MpegTSDemuxer.MPEGTS_PACKET_SIZE;\r\n                this.processTSPacket(packet);\r\n            }\r\n        }\r\n    };\r\n    MpegTSDemuxer.prototype.processTSPacket = function (packet) {\r\n        this.packetsCount++;\r\n        var packetParser = new bit_reader_1.default(packet);\r\n        packetParser.skipBits(1);\r\n        var payloadUnitStartIndicator = (packetParser.readBits(1) !== 0);\r\n        packetParser.skipBits(1);\r\n        var pid = packetParser.readBits(13);\r\n        var adaptationField = (packetParser.readByte() & 0x30) >> 4;\r\n        if (adaptationField > 1) {\r\n            length = packetParser.readByte();\r\n            if (length > 0) {\r\n                packetParser.skipBytes(length);\r\n            }\r\n        }\r\n        if (adaptationField === 1 || adaptationField === 3) {\r\n            if (pid === 0) {\r\n                this.parseProgramId(payloadUnitStartIndicator, packetParser);\r\n            }\r\n            else if (pid === this.pmtId) {\r\n                this.parseProgramTable(payloadUnitStartIndicator, packetParser);\r\n            }\r\n            else {\r\n                var track = this.tracks[pid];\r\n                if (track && track.pes) {\r\n                    track.pes.appendData(payloadUnitStartIndicator, packetParser);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    MpegTSDemuxer.prototype.parseProgramId = function (payloadUnitStartIndicator, packetParser) {\r\n        if (payloadUnitStartIndicator) {\r\n            packetParser.skipBytes(packetParser.readByte());\r\n        }\r\n        packetParser.skipBits(27 + 7 * 8);\r\n        this.pmtId = packetParser.readBits(13);\r\n    };\r\n    MpegTSDemuxer.prototype.parseProgramTable = function (payloadUnitStartIndicator, packetParser) {\r\n        if (payloadUnitStartIndicator) {\r\n            packetParser.skipBytes(packetParser.readByte());\r\n        }\r\n        packetParser.skipBits(12);\r\n        var sectionLength = packetParser.readBits(12);\r\n        packetParser.skipBits(4 + 7 * 8);\r\n        var programInfoLength = packetParser.readBits(12);\r\n        packetParser.skipBytes(programInfoLength);\r\n        var bytesRemaining = sectionLength - 9 - programInfoLength - 4;\r\n        while (bytesRemaining > 0) {\r\n            var streamType = packetParser.readBits(8);\r\n            packetParser.skipBits(3);\r\n            var elementaryPid = packetParser.readBits(13);\r\n            packetParser.skipBits(4);\r\n            var infoLength = packetParser.readBits(12);\r\n            packetParser.skipBytes(infoLength);\r\n            bytesRemaining -= infoLength + 5;\r\n            if (!this.tracks[elementaryPid]) {\r\n                var pes = new pes_reader_1.default(elementaryPid, streamType);\r\n                this.tracks[elementaryPid] = new ts_track_1.default(elementaryPid, '', '', pes);\r\n            }\r\n        }\r\n        this.pmtParsed = true;\r\n    };\r\n    MpegTSDemuxer.MPEGTS_SYNC = 0x47;\r\n    MpegTSDemuxer.MPEGTS_PACKET_SIZE = 187;\r\n    return MpegTSDemuxer;\r\n}());\r\nexports.default = MpegTSDemuxer;\r\n\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar bit_reader_1 = __webpack_require__(5);\r\nvar payload_reader_1 = __webpack_require__(3);\r\nvar frame_1 = __webpack_require__(4);\r\nvar track_1 = __webpack_require__(2);\r\nvar AdtsReader = (function (_super) {\r\n    __extends(AdtsReader, _super);\r\n    function AdtsReader() {\r\n        var _this = _super.call(this) || this;\r\n        _this.channels = 0;\r\n        _this.sampleRate = 0;\r\n        _this.frameDuration = 0;\r\n        _this.currentFrameSize = 0;\r\n        _this.state = AdtsReader.STATE_FIND_SYNC;\r\n        _this.dataOffset = 0;\r\n        return _this;\r\n    }\r\n    AdtsReader.prototype.getMimeType = function () {\r\n        return track_1.default.MIME_TYPE_AAC;\r\n    };\r\n    AdtsReader.prototype.consumeData = function (pts) {\r\n        if (!this.dataBuffer) {\r\n            return;\r\n        }\r\n        if (pts >= 0) {\r\n            this.timeUs = pts;\r\n        }\r\n        if (this.firstTimestamp === -1) {\r\n            this.firstTimestamp = this.timeUs;\r\n        }\r\n        while (this.dataOffset < this.dataBuffer.byteLength) {\r\n            if (this.state === AdtsReader.STATE_FIND_SYNC) {\r\n                this.findNextSync();\r\n            }\r\n            else if (this.state === AdtsReader.STATE_READ_HEADER) {\r\n                if (this.dataBuffer.byteLength - this.dataOffset < (AdtsReader.ADTS_HEADER_SIZE +\r\n                    AdtsReader.ADTS_SYNC_SIZE)) {\r\n                    break;\r\n                }\r\n                this.parseAACHeader();\r\n            }\r\n            else if (this.state === AdtsReader.STATE_READ_FRAME) {\r\n                if ((this.dataBuffer.byteLength - this.dataOffset) < (AdtsReader.ADTS_SYNC_SIZE +\r\n                    AdtsReader.ADTS_HEADER_SIZE + this.currentFrameSize)) {\r\n                    break;\r\n                }\r\n                this.frames.push(new frame_1.default(frame_1.default.IDR_FRAME, this.timeUs));\r\n                this.timeUs = this.timeUs + this.frameDuration;\r\n                this.dataOffset += (AdtsReader.ADTS_SYNC_SIZE + AdtsReader.ADTS_HEADER_SIZE +\r\n                    this.currentFrameSize);\r\n                this.state = AdtsReader.STATE_FIND_SYNC;\r\n            }\r\n        }\r\n        this.dataBuffer = this.dataBuffer.subarray(this.dataOffset);\r\n        this.dataOffset = 0;\r\n    };\r\n    AdtsReader.prototype.findNextSync = function () {\r\n        var limit = this.dataBuffer.byteLength - 1;\r\n        for (var i = this.dataOffset; i < limit; i++) {\r\n            var dataRead = (((this.dataBuffer[i]) << 8) | (this.dataBuffer[i + 1]));\r\n            if ((dataRead & 0xfff6) === 0xfff0) {\r\n                this.dataOffset = i;\r\n                if (this.dataOffset < this.dataBuffer.byteLength) {\r\n                    this.state = AdtsReader.STATE_READ_HEADER;\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        this.dataOffset = this.dataBuffer.byteLength;\r\n    };\r\n    AdtsReader.prototype.parseAACHeader = function () {\r\n        var aacHeaderParser = new bit_reader_1.default(this.dataBuffer.subarray(this.dataOffset, this.dataOffset + AdtsReader.ADTS_SYNC_SIZE + AdtsReader.ADTS_HEADER_SIZE));\r\n        aacHeaderParser.skipBits(15);\r\n        var hasCrc = !aacHeaderParser.readBool();\r\n        aacHeaderParser.skipBits(2);\r\n        var sampleRateIndex = aacHeaderParser.readBits(4);\r\n        if (sampleRateIndex < AdtsReader.ADTS_SAMPLE_RATES.length) {\r\n            this.sampleRate = AdtsReader.ADTS_SAMPLE_RATES[sampleRateIndex];\r\n        }\r\n        else {\r\n            this.sampleRate = sampleRateIndex;\r\n        }\r\n        this.frameDuration = (1000000 * 1024) / this.sampleRate;\r\n        aacHeaderParser.skipBits(1);\r\n        this.channels = aacHeaderParser.readBits(3);\r\n        aacHeaderParser.skipBits(4);\r\n        this.currentFrameSize = aacHeaderParser.readBits(13) - AdtsReader.ADTS_HEADER_SIZE\r\n            - AdtsReader.ADTS_SYNC_SIZE;\r\n        if (hasCrc) {\r\n            this.currentFrameSize -= AdtsReader.ADTS_CRC_SIZE;\r\n        }\r\n        this.state = AdtsReader.STATE_READ_FRAME;\r\n    };\r\n    AdtsReader.ADTS_HEADER_SIZE = 5;\r\n    AdtsReader.ADTS_SYNC_SIZE = 2;\r\n    AdtsReader.ADTS_CRC_SIZE = 2;\r\n    AdtsReader.STATE_FIND_SYNC = 1;\r\n    AdtsReader.STATE_READ_HEADER = 2;\r\n    AdtsReader.STATE_READ_FRAME = 3;\r\n    AdtsReader.ADTS_SAMPLE_RATES = [96000, 88200, 64000, 48000,\r\n        44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\r\n    return AdtsReader;\r\n}(payload_reader_1.default));\r\nexports.default = AdtsReader;\r\n\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar bit_reader_1 = __webpack_require__(5);\r\nvar payload_reader_1 = __webpack_require__(3);\r\nvar frame_1 = __webpack_require__(4);\r\nvar sps_parser_1 = __webpack_require__(7);\r\nvar track_1 = __webpack_require__(2);\r\nvar NAL_UNIT_TYPE;\r\n(function (NAL_UNIT_TYPE) {\r\n    NAL_UNIT_TYPE[NAL_UNIT_TYPE[\"SLICE\"] = 1] = \"SLICE\";\r\n    NAL_UNIT_TYPE[NAL_UNIT_TYPE[\"DPA\"] = 2] = \"DPA\";\r\n    NAL_UNIT_TYPE[NAL_UNIT_TYPE[\"DPB\"] = 3] = \"DPB\";\r\n    NAL_UNIT_TYPE[NAL_UNIT_TYPE[\"DPC\"] = 4] = \"DPC\";\r\n    NAL_UNIT_TYPE[NAL_UNIT_TYPE[\"IDR\"] = 5] = \"IDR\";\r\n    NAL_UNIT_TYPE[NAL_UNIT_TYPE[\"SEI\"] = 6] = \"SEI\";\r\n    NAL_UNIT_TYPE[NAL_UNIT_TYPE[\"SPS\"] = 7] = \"SPS\";\r\n    NAL_UNIT_TYPE[NAL_UNIT_TYPE[\"PPS\"] = 8] = \"PPS\";\r\n    NAL_UNIT_TYPE[NAL_UNIT_TYPE[\"AUD\"] = 9] = \"AUD\";\r\n    NAL_UNIT_TYPE[NAL_UNIT_TYPE[\"END_SEQUENCE\"] = 10] = \"END_SEQUENCE\";\r\n    NAL_UNIT_TYPE[NAL_UNIT_TYPE[\"END_STREAM\"] = 11] = \"END_STREAM\";\r\n})(NAL_UNIT_TYPE || (NAL_UNIT_TYPE = {}));\r\nvar SLICE_TYPE;\r\n(function (SLICE_TYPE) {\r\n    SLICE_TYPE[SLICE_TYPE[\"P\"] = 0] = \"P\";\r\n    SLICE_TYPE[SLICE_TYPE[\"B\"] = 1] = \"B\";\r\n    SLICE_TYPE[SLICE_TYPE[\"I\"] = 2] = \"I\";\r\n    SLICE_TYPE[SLICE_TYPE[\"SP\"] = 3] = \"SP\";\r\n    SLICE_TYPE[SLICE_TYPE[\"SI\"] = 4] = \"SI\";\r\n})(SLICE_TYPE || (SLICE_TYPE = {}));\r\nvar Fraction = (function () {\r\n    function Fraction(num, den) {\r\n        this.num = num;\r\n        this.den = den;\r\n        // do nothing\r\n    }\r\n    return Fraction;\r\n}());\r\nexports.Fraction = Fraction;\r\nvar H264Reader = (function (_super) {\r\n    __extends(H264Reader, _super);\r\n    function H264Reader() {\r\n        var _this = _super.call(this) || this;\r\n        _this.pendingBytes = 0;\r\n        return _this;\r\n    }\r\n    H264Reader.prototype.getMimeType = function () {\r\n        return track_1.default.MIME_TYPE_AVC;\r\n    };\r\n    H264Reader.prototype.flush = function (pts) {\r\n        if (this.dataBuffer.byteLength > 0) {\r\n            this.consumeData(pts);\r\n            if (this.dataBuffer.byteLength > 0) {\r\n                var offset = this.findNextNALUnit(0);\r\n                if (offset < this.dataBuffer.byteLength) {\r\n                    this.processNALUnit(offset, this.dataBuffer.byteLength, this.dataBuffer[offset + 3] & 0x1F);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    H264Reader.prototype.consumeData = function (pts) {\r\n        if (!this.dataBuffer) {\r\n            return;\r\n        }\r\n        if (this.firstTimestamp === -1) {\r\n            this.timeUs = this.firstTimestamp = pts;\r\n        }\r\n        // process any possible reminding data\r\n        var nextNalUnit = 0;\r\n        var offset = 0;\r\n        if (this.pendingBytes) {\r\n            nextNalUnit = this.findNextNALUnit(this.pendingBytes);\r\n            if (nextNalUnit < this.dataBuffer.byteLength) {\r\n                this.processNALUnit(0, nextNalUnit, this.dataBuffer[offset + 3] & 0x1F);\r\n                offset = nextNalUnit;\r\n            }\r\n            this.pendingBytes = 0;\r\n        }\r\n        else {\r\n            offset = this.findNextNALUnit(0);\r\n        }\r\n        // process next nal units in the buffer\r\n        if (pts !== -1) {\r\n            this.timeUs = pts;\r\n        }\r\n        if (this.dataBuffer.byteLength > 0) {\r\n            while (nextNalUnit < this.dataBuffer.byteLength) {\r\n                nextNalUnit = this.findNextNALUnit(offset + 3);\r\n                if (nextNalUnit < this.dataBuffer.byteLength) {\r\n                    this.processNALUnit(offset, nextNalUnit, this.dataBuffer[offset + 3] & 0x1F);\r\n                    offset = nextNalUnit;\r\n                }\r\n            }\r\n            this.dataBuffer = this.dataBuffer.subarray(offset);\r\n            this.pendingBytes = this.dataBuffer.byteLength;\r\n        }\r\n    };\r\n    H264Reader.prototype.findNextNALUnit = function (index) {\r\n        var limit = this.dataBuffer.byteLength - 3;\r\n        for (var i = index; i < limit; i++) {\r\n            if (this.dataBuffer[i] === 0 && this.dataBuffer[i + 1] === 0 && this.dataBuffer[i + 2] === 1) {\r\n                return i;\r\n            }\r\n        }\r\n        return this.dataBuffer.byteLength;\r\n    };\r\n    H264Reader.prototype.processNALUnit = function (start, limit, nalType) {\r\n        if (nalType === NAL_UNIT_TYPE.SPS) {\r\n            this.parseSPSNALUnit(start, limit);\r\n        }\r\n        else if (nalType === NAL_UNIT_TYPE.AUD) {\r\n            this.parseAUDNALUnit(start, limit);\r\n        }\r\n        else if (nalType === NAL_UNIT_TYPE.IDR) {\r\n            this.addNewFrame(SLICE_TYPE.I);\r\n        }\r\n        else if (nalType === NAL_UNIT_TYPE.SEI) {\r\n            this.parseSEINALUnit(start, limit);\r\n        }\r\n        else if (nalType === NAL_UNIT_TYPE.SLICE) {\r\n            this.parseSliceNALUnit(start, limit);\r\n        }\r\n    };\r\n    H264Reader.prototype.parseSPSNALUnit = function (start, limit) {\r\n        this.sps = sps_parser_1.default.parseSPS(this.dataBuffer.subarray(start + 4, limit));\r\n    };\r\n    H264Reader.prototype.skipScalingList = function (parser, size) {\r\n        var lastScale = 8;\r\n        var nextScale = 8;\r\n        for (var i = 0; i < size; i++) {\r\n            if (nextScale !== 0) {\r\n                var deltaScale = parser.readSEG();\r\n                nextScale = (lastScale + deltaScale + 256) % 256;\r\n            }\r\n            if (nextScale !== 0) {\r\n                lastScale = nextScale;\r\n            }\r\n        }\r\n    };\r\n    H264Reader.prototype.parseSEINALUnit = function (start, limit) {\r\n        var seiParser = new bit_reader_1.default(this.dataBuffer.subarray(start, limit));\r\n        seiParser.skipBytes(4);\r\n        while (seiParser.remainingBytes() > 0) {\r\n            var data = seiParser.readByte();\r\n            if (data !== 0xFF) {\r\n                break;\r\n            }\r\n        }\r\n        // parse payload size\r\n        while (seiParser.remainingBytes() > 0) {\r\n            var data = seiParser.readByte();\r\n            if (data !== 0xFF) {\r\n                break;\r\n            }\r\n        }\r\n        seiParser.destroy();\r\n        seiParser = null;\r\n    };\r\n    H264Reader.prototype.parseSliceNALUnit = function (start, limit) {\r\n        var sliceParser = new bit_reader_1.default(this.dataBuffer.subarray(start, limit));\r\n        sliceParser.skipBytes(4);\r\n        sliceParser.readUEG();\r\n        var sliceType = sliceParser.readUEG();\r\n        this.addNewFrame(sliceType);\r\n        sliceParser.destroy();\r\n        sliceParser = null;\r\n    };\r\n    H264Reader.prototype.parseAUDNALUnit = function (start, limit) {\r\n        // const audParser: BitReader = new BitReader(this.dataBuffer.subarray(start, limit));\r\n        // audParser.skipBytes(4);\r\n    };\r\n    H264Reader.prototype.getSliceTypeName = function (sliceType) {\r\n        if (sliceType > 4) {\r\n            sliceType = sliceType - 5;\r\n        }\r\n        switch (sliceType) {\r\n            case SLICE_TYPE.B:\r\n                return frame_1.default.B_FRAME;\r\n            case SLICE_TYPE.I:\r\n                return frame_1.default.IDR_FRAME;\r\n            case SLICE_TYPE.P:\r\n                return frame_1.default.P_FRAME;\r\n            case SLICE_TYPE.SI:\r\n                return 'SI';\r\n            case SLICE_TYPE.SP:\r\n                return 'SP';\r\n            default:\r\n                return 'Unknown';\r\n        }\r\n    };\r\n    H264Reader.prototype.getNALUnitName = function (nalType) {\r\n        switch (nalType) {\r\n            case NAL_UNIT_TYPE.SLICE:\r\n                return 'SLICE';\r\n            case NAL_UNIT_TYPE.SEI:\r\n                return 'SEI';\r\n            case NAL_UNIT_TYPE.PPS:\r\n                return 'PPS';\r\n            case NAL_UNIT_TYPE.SPS:\r\n                return 'SPS';\r\n            case NAL_UNIT_TYPE.AUD:\r\n                return 'AUD';\r\n            case NAL_UNIT_TYPE.IDR:\r\n                return 'IDR';\r\n            case NAL_UNIT_TYPE.END_SEQUENCE:\r\n                return 'END SEQUENCE';\r\n            case NAL_UNIT_TYPE.END_STREAM:\r\n                return 'END STREAM';\r\n            default:\r\n                return 'Unknown';\r\n        }\r\n    };\r\n    H264Reader.prototype.addNewFrame = function (frameType) {\r\n        this.frames.push(new frame_1.default(this.getSliceTypeName(frameType), this.timeUs));\r\n    };\r\n    return H264Reader;\r\n}(payload_reader_1.default));\r\nexports.default = H264Reader;\r\n\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar payload_reader_1 = __webpack_require__(3);\r\nvar track_1 = __webpack_require__(2);\r\nvar ID3Reader = (function (_super) {\r\n    __extends(ID3Reader, _super);\r\n    function ID3Reader() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ID3Reader.prototype.getMimeType = function () {\r\n        return track_1.default.MIME_TYPE_ID3;\r\n    };\r\n    ID3Reader.prototype.consumeData = function (pts) {\r\n        // do nothing\r\n    };\r\n    return ID3Reader;\r\n}(payload_reader_1.default));\r\nexports.default = ID3Reader;\r\n\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar byte_parser_utils_1 = __webpack_require__(1);\r\nvar payload_reader_1 = __webpack_require__(3);\r\nvar frame_1 = __webpack_require__(4);\r\nvar MpegReader = (function (_super) {\r\n    __extends(MpegReader, _super);\r\n    function MpegReader() {\r\n        var _this = _super.call(this) || this;\r\n        _this.channels = 0;\r\n        _this.sampleRate = 0;\r\n        _this.samplesPerFrame = 0;\r\n        _this.currentFrameSize = 0;\r\n        _this.frameDuration = 0;\r\n        _this.mimeType = MpegReader.MIME_TYPE_BY_LAYER[2];\r\n        _this.state = MpegReader.STATE_FIND_SYNC;\r\n        _this.dataOffset = 0;\r\n        return _this;\r\n    }\r\n    MpegReader.prototype.getMimeType = function () {\r\n        return 'audio/' + this.mimeType;\r\n    };\r\n    MpegReader.prototype.consumeData = function (pts) {\r\n        if (!this.dataBuffer) {\r\n            return;\r\n        }\r\n        if (pts >= 0) {\r\n            this.timeUs = pts;\r\n        }\r\n        if (this.firstTimestamp === -1) {\r\n            this.firstTimestamp = this.timeUs;\r\n        }\r\n        while (this.dataOffset < this.dataBuffer.byteLength) {\r\n            if (this.state === MpegReader.STATE_FIND_SYNC) {\r\n                this.findHeader();\r\n            }\r\n            else if (this.state === MpegReader.STATE_READ_HEADER) {\r\n                if (!this.readHeader()) {\r\n                    break;\r\n                }\r\n            }\r\n            else if (this.state === MpegReader.STATE_READ_FRAME) {\r\n                var len = this.readFrame();\r\n                if (len === 0) {\r\n                    break;\r\n                }\r\n                this.dataOffset += len;\r\n            }\r\n        }\r\n        this.dataBuffer = this.dataBuffer.subarray(this.dataOffset);\r\n        this.dataOffset = 0;\r\n    };\r\n    MpegReader.prototype.findHeader = function () {\r\n        var limit = this.dataBuffer.byteLength - 1;\r\n        var lastByteWasFF = false;\r\n        for (var i = this.dataOffset; i < limit; i++) {\r\n            var isFF = ((this.dataBuffer[i]) & 0xFF) === 0XFF;\r\n            var found = lastByteWasFF && ((this.dataBuffer[i] & 0xE0) === 0xE0);\r\n            lastByteWasFF = isFF;\r\n            if (found) {\r\n                lastByteWasFF = false;\r\n                this.state = MpegReader.STATE_READ_HEADER;\r\n                this.dataOffset = i - 1;\r\n                return;\r\n            }\r\n        }\r\n        this.dataOffset = this.dataBuffer.byteLength;\r\n    };\r\n    MpegReader.prototype.readHeader = function () {\r\n        if (this.dataBuffer.byteLength - this.dataOffset < MpegReader.HEADER_SIZE) {\r\n            return false;\r\n        }\r\n        var header = byte_parser_utils_1.default.parseUint32(this.dataBuffer, this.dataOffset);\r\n        if (!this.parseHeader(header)) {\r\n            this.state = MpegReader.STATE_FIND_SYNC;\r\n            this.dataOffset++;\r\n        }\r\n        else {\r\n            this.state = MpegReader.STATE_READ_FRAME;\r\n        }\r\n        return true;\r\n    };\r\n    MpegReader.prototype.parseHeader = function (header) {\r\n        if ((header & 0xFFE00000) >>> 0 !== 0xFFE00000) {\r\n            console.log(header);\r\n            return false;\r\n        }\r\n        var version = (header >>> 19) & 3;\r\n        if (version === 1) {\r\n            return false;\r\n        }\r\n        var layer = (header >>> 17) & 3;\r\n        if (layer === 0) {\r\n            return false;\r\n        }\r\n        var bitrateIndex = (header >>> 12) & 15;\r\n        var sampleRateIndex = (header >>> 10) & 3;\r\n        if (sampleRateIndex >= MpegReader.SAMPLING_RATE_V1.length) {\r\n            return false;\r\n        }\r\n        var sampleRate = MpegReader.SAMPLING_RATE_V1[sampleRateIndex];\r\n        if (version === 2) {\r\n            this.sampleRate = sampleRate / 2;\r\n        }\r\n        else if (version === 0) {\r\n            this.sampleRate = sampleRate / 4;\r\n        }\r\n        else {\r\n            this.sampleRate = sampleRate;\r\n        }\r\n        var padding = (header >>> 9) & 1;\r\n        this.channels = ((header >> 6) & 3) === 3 ? 1 : 2;\r\n        this.mimeType = MpegReader.MIME_TYPE_BY_LAYER[3 - layer];\r\n        if (layer === 3) {\r\n            this.bitrate = (version === 3) ? MpegReader.BITRATE_V1_L1[bitrateIndex - 1] :\r\n                MpegReader.BITRATE_V2_L1[bitrateIndex - 1];\r\n            this.samplesPerFrame = 384;\r\n            this.currentFrameSize = Math.floor(this.samplesPerFrame * (this.bitrate * 1000 / 8) / this.sampleRate) + padding;\r\n        }\r\n        else {\r\n            if (version === 3) {\r\n                this.bitrate = (layer === 2) ? MpegReader.BITRATE_V1_L2[bitrateIndex - 1] :\r\n                    MpegReader.BITRATE_V1_L3[bitrateIndex - 1];\r\n                this.samplesPerFrame = 1152;\r\n                this.currentFrameSize = Math.floor(this.samplesPerFrame * (this.bitrate * 1000 / 8) / this.sampleRate) + padding;\r\n            }\r\n            else {\r\n                // Version 2 or 2.5.\r\n                this.bitrate = MpegReader.BITRATE_V2[bitrateIndex - 1];\r\n                this.samplesPerFrame = (layer === 1) ? 576 : 1152;\r\n                this.currentFrameSize = Math.floor(this.samplesPerFrame * (this.bitrate * 1000 / 8) / this.sampleRate) + padding;\r\n            }\r\n        }\r\n        this.frameDuration = (1000000 * this.samplesPerFrame) / this.sampleRate;\r\n        return true;\r\n    };\r\n    MpegReader.prototype.readFrame = function () {\r\n        if ((this.dataBuffer.byteLength - this.dataOffset) < (MpegReader.HEADER_SIZE + this.currentFrameSize)) {\r\n            return 0;\r\n        }\r\n        this.state = MpegReader.STATE_FIND_SYNC;\r\n        this.frames.push(new frame_1.default(frame_1.default.IDR_FRAME, this.timeUs));\r\n        this.timeUs = this.timeUs + this.frameDuration;\r\n        return MpegReader.HEADER_SIZE + this.currentFrameSize;\r\n    };\r\n    MpegReader.STATE_FIND_SYNC = 1;\r\n    MpegReader.STATE_READ_HEADER = 2;\r\n    MpegReader.STATE_READ_FRAME = 3;\r\n    MpegReader.HEADER_SIZE = 4;\r\n    MpegReader.SAMPLING_RATE_V1 = [44100, 48000, 32000];\r\n    MpegReader.BITRATE_V1_L1 = [32, 64, 96, 128, 160, 192, 224, 256, 288, 320, 352, 384, 416, 448];\r\n    MpegReader.BITRATE_V2_L1 = [32, 48, 56, 64, 80, 96, 112, 128, 144, 160, 176, 192, 224, 256];\r\n    MpegReader.BITRATE_V1_L2 = [32, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 384];\r\n    MpegReader.BITRATE_V1_L3 = [32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320];\r\n    MpegReader.BITRATE_V2 = [8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144, 160];\r\n    MpegReader.MIME_TYPE_BY_LAYER = ['mpeg-L1', 'mpeg-L2', 'mpeg'];\r\n    return MpegReader;\r\n}(payload_reader_1.default));\r\nexports.default = MpegReader;\r\n\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar payload_reader_1 = __webpack_require__(3);\r\nvar UnknownReader = (function (_super) {\r\n    __extends(UnknownReader, _super);\r\n    function UnknownReader() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    UnknownReader.prototype.getMimeType = function () {\r\n        return 'unknown';\r\n    };\r\n    UnknownReader.prototype.consumeData = function (pts) {\r\n        // do nothing\r\n    };\r\n    return UnknownReader;\r\n}(payload_reader_1.default));\r\nexports.default = UnknownReader;\r\n\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar unknown_reader_1 = __webpack_require__(49);\r\nvar adts_reader_1 = __webpack_require__(45);\r\nvar h264_reader_1 = __webpack_require__(46);\r\nvar id3_reader_1 = __webpack_require__(47);\r\nvar mpeg_reader_1 = __webpack_require__(48);\r\nvar PESReader = (function () {\r\n    function PESReader(pid, type) {\r\n        this.pid = pid;\r\n        this.type = type;\r\n        this.pid = pid;\r\n        this.type = type;\r\n        this.lastPts = -1;\r\n        this.pesLength = 0;\r\n        if (type === PESReader.TS_STREAM_TYPE_AAC) {\r\n            this.payloadReader = new adts_reader_1.default();\r\n        }\r\n        else if (type === PESReader.TS_STREAM_TYPE_H264) {\r\n            this.payloadReader = new h264_reader_1.default();\r\n        }\r\n        else if (type === PESReader.TS_STREAM_TYPE_ID3) {\r\n            this.payloadReader = new id3_reader_1.default();\r\n        }\r\n        else if (type === PESReader.TS_STREAM_TYPE_MPA || type === PESReader.TS_STREAM_TYPE_MPA_LSF) {\r\n            this.payloadReader = new mpeg_reader_1.default();\r\n        }\r\n        else if (type === PESReader.TS_STREAM_TYPE_METADATA) {\r\n            // do nothing\r\n        }\r\n        else {\r\n            this.payloadReader = new unknown_reader_1.default();\r\n        }\r\n    }\r\n    PESReader.ptsToTimeUs = function (pts) {\r\n        return (pts * 1000000) / 90000;\r\n    };\r\n    PESReader.prototype.appendData = function (payloadUnitStartIndicator, packet) {\r\n        if (payloadUnitStartIndicator) {\r\n            if (this.payloadReader) {\r\n                this.payloadReader.consumeData(this.lastPts);\r\n            }\r\n            this.parsePESHeader(packet);\r\n        }\r\n        if (this.payloadReader) {\r\n            this.payloadReader.append(packet);\r\n        }\r\n    };\r\n    PESReader.prototype.parsePESHeader = function (packet) {\r\n        packet.skipBytes(7);\r\n        var timingFlags = packet.readByte();\r\n        if (timingFlags & 0xC0) {\r\n            packet.skipBytes(1);\r\n            var pts = void 0;\r\n            pts = (packet.readByte() & 0x0E) << 27 |\r\n                (packet.readByte() & 0xFF) << 20 |\r\n                (packet.readByte() & 0xFE) << 12 |\r\n                (packet.readByte() & 0xFF) << 5;\r\n            var val = packet.readByte();\r\n            pts |= (val & 0xFE) >>> 3;\r\n            pts = pts << 2;\r\n            pts += (val & 0x06) >>> 1;\r\n            this.lastPts = PESReader.ptsToTimeUs(pts);\r\n        }\r\n    };\r\n    PESReader.prototype.reset = function () {\r\n        if (this.payloadReader) {\r\n            this.payloadReader.reset();\r\n        }\r\n    };\r\n    PESReader.prototype.flush = function () {\r\n        if (this.payloadReader) {\r\n            this.payloadReader.flush(this.lastPts);\r\n        }\r\n    };\r\n    PESReader.TS_STREAM_TYPE_AAC = 0x0F;\r\n    PESReader.TS_STREAM_TYPE_H264 = 0x1B;\r\n    PESReader.TS_STREAM_TYPE_ID3 = 0x15;\r\n    PESReader.TS_STREAM_TYPE_MPA = 0x03;\r\n    PESReader.TS_STREAM_TYPE_MPA_LSF = 0x04;\r\n    PESReader.TS_STREAM_TYPE_METADATA = 0x06;\r\n    return PESReader;\r\n}());\r\nexports.default = PESReader;\r\n\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar track_1 = __webpack_require__(2);\r\nvar TSTrack = (function (_super) {\r\n    __extends(TSTrack, _super);\r\n    function TSTrack(id, type, mimeType, pes) {\r\n        var _this = _super.call(this, id, type, mimeType) || this;\r\n        _this.pes = pes;\r\n        return _this;\r\n    }\r\n    TSTrack.prototype.getType = function () {\r\n        var mimeType = this.getMimeType();\r\n        if (mimeType) {\r\n            var pos = mimeType.indexOf('/');\r\n            if (pos > 0) {\r\n                return mimeType.substring(0, pos);\r\n            }\r\n        }\r\n        return '';\r\n    };\r\n    TSTrack.prototype.getMimeType = function () {\r\n        if (this.pes && this.pes.payloadReader) {\r\n            return this.pes.payloadReader.getMimeType();\r\n        }\r\n        return _super.prototype.getMimeType.call(this);\r\n    };\r\n    TSTrack.prototype.getDuration = function () {\r\n        if (this.pes && this.pes.payloadReader) {\r\n            return this.pes.payloadReader.getDuration();\r\n        }\r\n        return 0;\r\n    };\r\n    TSTrack.prototype.getFrames = function () {\r\n        if (this.pes && this.pes.payloadReader) {\r\n            return this.pes.payloadReader.frames;\r\n        }\r\n        return [];\r\n    };\r\n    return TSTrack;\r\n}(track_1.default));\r\nexports.default = TSTrack;\r\n\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(8);\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// inspectorjs-lib.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 52);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 468c5f9a0dc136badaf1","export class Atom {\n    public static ftyp: string = 'ftyp';\n    public static styp: string = 'styp';\n    public static avc1: string = 'avc1';\n    public static avc3: string = 'avc3';\n    public static hvc1: string = 'hvc1';\n    public static hev1: string = 'hev1';\n    public static s263: string = 's263';\n    public static d263: string = 'd263';\n    public static vp08: string = 'vp08';\n    public static vp09: string = 'vp09';\n    public static mdat: string = 'mdat';\n    public static mp4a: string = 'mp4a';\n    public static wave: string = 'wave';\n    public static ac_3: string = 'ac-3';\n    public static dac3: string = 'dac3';\n    public static ec_3: string = 'ec-3';\n    public static dec3: string = 'dec3';\n    public static dtsc: string = 'dtsc';\n    public static dtsh: string = 'dtsh';\n    public static dtsl: string = 'dtsl';\n    public static dtse: string = 'dtse';\n    public static ddts: string = 'ddts';\n    public static tfdt: string = 'tfdt';\n    public static tfhd: string = 'tfhd';\n    public static trex: string = 'trex';\n    public static trun: string = 'trun';\n    public static sidx: string = 'sidx';\n    public static moov: string = 'moov';\n    public static mvhd: string = 'mvhd';\n    public static trak: string = 'trak';\n    public static mdia: string = 'mdia';\n    public static minf: string = 'minf';\n    public static stbl: string = 'stbl';\n    public static avcC: string = 'avcC';\n    public static hvcC: string = 'hvcC';\n    public static vpcC: string = 'vpcC';\n    public static esds: string = 'esds';\n    public static moof: string = 'moof';\n    public static traf: string = 'traf';\n    public static mvex: string = 'mvex';\n    public static tkhd: string = 'tkhd';\n    public static edts: string = 'edts';\n    public static elst: string = 'elst';\n    public static mdhd: string = 'mdhd';\n    public static hdlr: string = 'hdlr';\n    public static stsd: string = 'stsd';\n    public static pssh: string = 'pssh';\n    public static sinf: string = 'sinf';\n    public static schm: string = 'schm';\n    public static schi: string = 'schi';\n    public static tenc: string = 'tenc';\n    public static encv: string = 'encv';\n    public static enca: string = 'enca';\n    public static frma: string = 'frma';\n    public static saiz: string = 'saiz';\n    public static saio: string = 'saio';\n    public static uuid: string = 'uuid';\n    public static senc: string = 'senc';\n    public static pasp: string = 'pasp';\n    public static TTML: string = 'TTML';\n    public static vmhd: string = 'vmhd';\n    public static mp4v: string = 'mp4v';\n    public static stts: string = 'stts';\n    public static stss: string = 'stss';\n    public static ctts: string = 'ctts';\n    public static stsc: string = 'stsc';\n    public static stsz: string = 'stsz';\n    public static stco: string = 'stco';\n    public static co64: string = 'co64';\n    public static tx3g: string = 'tx3g';\n    public static wvtt: string = 'wvtt';\n    public static stpp: string = 'stpp';\n    public static samr: string = 'samr';\n    public static sawb: string = 'sawb';\n    public static dinf: string = 'dinf';\n    public static dref: string = 'dref';\n    public static url: string = 'url ';\n    public static smhd: string = 'smhd';\n    public static mfhd: string = 'mfhd';\n    public static emsg: string = 'emsg';\n\n    constructor (public type: string, public size: number) {\n    }\n\n    public static isContainerBox(type: string): boolean {\n        return type === Atom.moov || type === Atom.trak || type === Atom.mdia\n            || type === Atom.minf || type === Atom.stbl || type === Atom.moof\n            || type === Atom.traf || type === Atom.mvex || type === Atom.stsd\n            || type === Atom.mp4a || type === Atom.avc1 || type === Atom.dref\n            || type === Atom.dinf;\n    }\n}\n\nexport class ContainerAtom extends Atom {\n    containerDataOffset: number;\n    atoms: Atom[];\n\n    constructor(type: string, size: number) {\n        super(type, size);\n        this.containerDataOffset = 0;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/atom.ts","export class Mp4SampleFlags {\n    public isLeading: number;\n    public dependsOn: number;\n    public isDependedOn: number;\n    public hasRedundancy: number;\n    public paddingValue: number;\n    public isNonSyncSample: number;\n    public degradationPriority: number;\n}\n\nexport default class ByteParserUtils {\n    public static parseStringWithLength(buffer: Uint8Array, offset: number, end: number): string {\n        let result: string = '';\n        const strLength: number = buffer[offset];\n        const maxOffset: number = Math.min(offset + strLength + 1, end);\n        for (let i: number = offset + 1; i < maxOffset && buffer[i] !== 0; i++) {\n            result += String.fromCharCode(buffer[i]);\n        }\n        return result;\n    }\n\n    public static parseNullTerminatedString(buffer: Uint8Array, offset: number, end: number): string {\n        let result: string = '';\n        for (let i: number = offset + 1; i < end && buffer[i] !== 0; i++) {\n            result += String.fromCharCode(buffer[i]);\n        }\n        return result;\n    }\n\n    public static parseUint32(buffer: Uint8Array, offset: number): number {\n        // Js tric: The only JavaScript operator that works using unsigned 32-bit integers is >>>\n        // it can be used to convert a signed integer to an unsigned one\n        return (buffer[offset++] << 24 |\n            buffer[offset++] << 16 |\n            buffer[offset++] << 8  |\n            buffer[offset]) >>> 0;\n    }\n\n    public static parseLong64(buffer: Uint8Array, offset: number): number {\n        // Js tric: The only JavaScript operator that works using unsigned 32-bit integers is >>>\n        // it can be used to convert a signed integer to an unsigned one\n        return (buffer[offset++] << 56 |\n            buffer[offset++] << 48 |\n            buffer[offset++] << 40 |\n            buffer[offset++] << 32 |\n            buffer[offset++] << 24 |\n            buffer[offset++] << 16 |\n            buffer[offset++] << 8  |\n            buffer[offset]) >>> 0;\n    }\n\n    public static parseUint16(buffer: Uint8Array, offset: number): number {\n        return (buffer[offset++] << 8  |\n            buffer[offset]) >>> 0;\n    }\n\n    public static parseIsoBoxType(buffer: Uint8Array, offset: number): string {\n        let result: string = '';\n        result += String.fromCharCode(buffer[offset++]);\n        result += String.fromCharCode(buffer[offset++]);\n        result += String.fromCharCode(buffer[offset++]);\n        result += String.fromCharCode(buffer[offset]);\n        return result;\n    }\n\n    public static parseIsoBoxDate(seconds: number): Date {\n        return new Date(seconds * 1000 - 2082844800000);\n    }\n\n    public static parseIsoBoxSampleFlags(flags: number): Mp4SampleFlags {\n        return {\n            isLeading: (flags[0] & 0x0c) >>> 2,\n            dependsOn: flags[0] & 0x03,\n            isDependedOn: (flags[1] & 0xc0) >>> 6,\n            hasRedundancy: (flags[1] & 0x30) >>> 4,\n            paddingValue: (flags[1] & 0x0e) >>> 1,\n            isNonSyncSample: flags[1] & 0x01,\n            degradationPriority: (flags[2] << 8) | flags[3]\n        };\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/byte-parser-utils.ts","import Frame from './frame';\n\nexport default class Track {\n    public static TYPE_VIDEO: string = 'video';\n    public static TYPE_AUDIO: string = 'audio';\n    public static TYPE_TEXT: string = 'text';\n    public static TYPE_UNKNOWN: string = 'unknown';\n\n    public static MIME_TYPE_AAC: string = 'audio/mp4a-latm';\n    public static MIME_TYPE_AVC: string = 'video/avc';\n    public static MIME_TYPE_HEVC: string = 'video/hevc';\n    public static MIME_TYPE_MPEG: string = 'audio/mpeg';\n    public static MIME_TYPE_MPEG_L1: string = 'audio/mpeg-L1';\n    public static MIME_TYPE_MPEG_l2: string = 'audio/mpeg-L2';\n    public static MIME_TYPE_ID3: string = 'application/id3';\n    public static MIME_TYPE_UNKNOWN: string = 'unknown';\n\n    constructor(public id: number, private type: string, private mimeType: string) {\n    }\n\n    public getType(): string {\n        return this.type;\n    }\n\n    public getMimeType(): string {\n        return this.mimeType;\n    }\n\n    public getFrames(): Frame[] {\n        return [];\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/track.ts","import BitReader from '../../../utils/bit-reader';\nimport Frame from '../../frame';\n\nexport default class PayloadReader {\n    public firstTimestamp: number = -1;\n    public timeUs: number = -1;\n    public frames: Frame[] = [];\n    public dataBuffer: Uint8Array;\n\n    protected dataOffset: number;\n\n    public append(packet: BitReader): void {\n        const dataToAppend: Uint8Array = packet.buffer.subarray(packet.bytesOffset());\n        if (!this.dataBuffer) {\n            this.dataBuffer = dataToAppend;\n        } else {\n            const newLen: number = this.dataBuffer.byteLength + packet.remainingBytes();\n            const temp: Uint8Array = new Uint8Array(newLen);\n            temp.set(this.dataBuffer, 0);\n            temp.set(dataToAppend, this.dataBuffer.byteLength);\n            this.dataBuffer = temp;\n        }\n    }\n\n    public reset(): void {\n        this.frames = [];\n        this.dataOffset = 0;\n    }\n\n    public flush(pts: number): void {\n        if (this.dataBuffer.byteLength > 0) {\n            this.consumeData(pts);\n            this.dataBuffer = null;\n        }\n        this.dataOffset = 0;\n    }\n\n    public consumeData(pts: number): void {\n        throw new Error('Should have implemented this');\n    }\n\n    public getMimeType(): string {\n        return 'Unknown';\n    }\n\n    public getDuration(): number {\n        return this.getLastPTS() - this.getFirstPTS();\n    }\n\n    public getFirstPTS(): number {\n        return this.firstTimestamp;\n    }\n\n    public getLastPTS(): number {\n        return this.timeUs;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/ts/payload/payload-reader.ts","export default class Frame {\n    public static IDR_FRAME: string = 'I';\n    public static P_FRAME: string = 'P';\n    public static B_FRAME: string = 'B';\n\n    constructor (public frameType: string, public timeUs: number) {\n        // do nothing\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/frame.ts","export default class BitReader {\n    private workingBytesAvailable: number;\n    private workingWord: number;\n    private workingBitsAvailable: number;\n\n    constructor(public buffer: Uint8Array) {\n        this.workingBytesAvailable = buffer.byteLength;\n        this.workingWord = 0;\n        this.workingBitsAvailable = 0;\n\n        this.loadWord();\n    }\n\n    public destroy(): void {\n        this.buffer = null;\n    }\n\n    public remainingBytes(): number {\n        return this.workingBytesAvailable + this.workingBitsAvailable / 8;\n    }\n\n    public bitsAvailable(): number {\n        return (8 * this.workingBytesAvailable) + this.workingBitsAvailable;\n    }\n\n    public bytesOffset(): number {\n        return this.buffer.byteLength - this.remainingBytes();\n    }\n\n    public skipBytes(count: number): void {\n        this.skipBits(count * 8);\n    }\n\n    public skipBits(count: number): void {\n        let skipBytes: number;\n        if (this.workingBitsAvailable > count) {\n            this.workingWord <<= count;\n            this.workingBitsAvailable -= count;\n        } else {\n            count -= this.workingBitsAvailable;\n            skipBytes = Math.floor(count / 8);\n\n            count -= (skipBytes * 8);\n            this.workingBytesAvailable -= skipBytes;\n\n            this.loadWord();\n\n            this.workingWord <<= count;\n            this.workingBitsAvailable -= count;\n        }\n    }\n\n    public skipUEG(): void {\n        this.skipBits(1 + this.skipLeadingZeros());\n    }\n\n    public skipSEG(): void {\n        this.skipBits(1 + this.skipLeadingZeros());\n    }\n\n    public readUEG(): number {\n        const clz: number = this.skipLeadingZeros();\n        return this.readBits(clz + 1) - 1;\n    }\n\n    public readSEG(): number {\n        var val: number = this.readUEG();\n        if (0x01 & val) {\n            return (1 + val) >>> 1;\n        }\n        return -1 * (val >>> 1);\n    }\n\n    public readBool(): boolean {\n        return this.readBits(1) === 1;\n    }\n\n    public readByte = function(): number {\n        return this.readBits(8);\n    };\n\n    public readBits(size: number): number {\n        let bits: number = Math.min(this.workingBitsAvailable, size);\n        const val: number = this.workingWord >>> (32 - bits);\n\n        this.workingBitsAvailable -= bits;\n        if (this.workingBitsAvailable > 0) {\n            this.workingWord <<= bits;\n        } else if (this.workingBytesAvailable > 0) {\n            this.loadWord();\n        }\n\n        bits = size - bits;\n        if (bits > 0) {\n            return (val << bits | this.readBits(bits)) >>> 0;\n        }\n        return val;\n    }\n\n    private loadWord(): void {\n        const position: number = this.buffer.byteLength - this.workingBytesAvailable;\n        const workingBytes: Uint8Array = new Uint8Array(4);\n        const availableBytes: number = Math.min(4, this.workingBytesAvailable);\n\n        if (availableBytes === 0) {\n            throw new Error('No bytes available');\n        }\n\n        workingBytes.set(this.buffer.subarray(position, position + availableBytes));\n        this.workingWord = new DataView(workingBytes.buffer).getUint32(0);\n\n        this.workingBitsAvailable = availableBytes * 8;\n        this.workingBytesAvailable -= availableBytes;\n    }\n\n    private skipLeadingZeros(): number {\n        let leadingZeroCount: number;\n        for (leadingZeroCount = 0; leadingZeroCount < this.workingBitsAvailable; ++leadingZeroCount) {\n            if ((this.workingWord & (0x80000000 >>> leadingZeroCount)) !== 0) {\n                this.workingWord <<= leadingZeroCount;\n                this.workingBitsAvailable -= leadingZeroCount;\n                return leadingZeroCount;\n            }\n        }\n        this.loadWord();\n        return leadingZeroCount + this.skipLeadingZeros();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/bit-reader.ts","import ByteParserUtils from '../../../../utils/byte-parser-utils';\nimport {Atom, ContainerAtom} from '../atom';\n\nexport class VideoAtom extends ContainerAtom {\n    public dataReferenceIndex: number;\n    public temporalQuality: number;\n    public spatialQuality: number;\n    public width: number;\n    public height: number;\n    public horizontalResolution: number;\n    public verticalResolution: number;\n    public compressorName: string;\n    public frameCount: number;\n    public depth: number;\n\n    protected static fillVideoAtom(atom: VideoAtom, data: Uint8Array): Atom {\n        atom.containerDataOffset = 78;\n        atom.dataReferenceIndex = ByteParserUtils.parseUint16(data, 6);\n        atom.temporalQuality = ByteParserUtils.parseUint32(data, 16);\n        atom.spatialQuality = ByteParserUtils.parseUint32(data, 20);\n        atom.width = ByteParserUtils.parseUint16(data, 24);\n        atom.height = ByteParserUtils.parseUint16(data, 26);\n        atom.horizontalResolution = ByteParserUtils.parseUint16(data, 28) +\n            ByteParserUtils.parseUint16(data, 30) / 16;\n        atom.verticalResolution = ByteParserUtils.parseUint16(data, 32) +\n            ByteParserUtils.parseUint16(data, 34) / 16;\n        atom.frameCount = ByteParserUtils.parseUint16(data, 40);\n        atom.compressorName = ByteParserUtils.parseStringWithLength(data, 42, 74);\n        atom.depth = ByteParserUtils.parseUint16(data, 74);\n        return atom;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/helpers/video-atom.ts","import BitReader from '../../utils/bit-reader';\nimport { Sps, Size, FrameRate } from './nal-units';\n\nexport default class SPSParser {\n    public static parseSPS(data: Uint8Array): Sps {\n        let gb: BitReader = new BitReader(data);\n        const profile_idc: number = gb.readByte();\n        gb.readByte();\n        const level_idc: number = gb.readByte();\n        gb.readUEG();\n\n        const profile_string: string = SPSParser.getProfileString(profile_idc);\n        const level_string: string = SPSParser.getLevelString(level_idc);\n        let chroma_format_idc: number = 1;\n        let chroma_format: number = 420;\n        let chroma_format_table: number[] = [0, 420, 422, 444];\n        let bit_depth: number = 8;\n\n        if (profile_idc === 100 || profile_idc === 110 || profile_idc === 122 ||\n            profile_idc === 244 || profile_idc === 44 || profile_idc === 83 ||\n            profile_idc === 86 || profile_idc === 118 || profile_idc === 128 ||\n            profile_idc === 138 || profile_idc === 144) {\n\n            chroma_format_idc = gb.readUEG();\n            if (chroma_format_idc === 3) {\n                gb.readBits(1);\n            }\n            if (chroma_format_idc <= 3) {\n                chroma_format = chroma_format_table[chroma_format_idc];\n            }\n\n            bit_depth = gb.readUEG() + 8;\n            gb.readUEG();\n            gb.readBits(1);\n            if (gb.readBool()) {\n                const scaling_list_count: number = (chroma_format_idc !== 3) ? 8 : 12;\n                for (let i: number = 0; i < scaling_list_count; i++) {\n                    if (gb.readBool()) {\n                        if (i < 6) {\n                            SPSParser.skipScalingList(gb, 16);\n                        } else {\n                            SPSParser.skipScalingList(gb, 64);\n                        }\n                    }\n                }\n            }\n        }\n        gb.readUEG();\n        let pic_order_cnt_type: number = gb.readUEG();\n        if (pic_order_cnt_type === 0) {\n            gb.readUEG();\n        } else if (pic_order_cnt_type === 1) {\n            gb.readBits(1);\n            gb.readSEG();\n            gb.readSEG();\n            const num_ref_frames_in_pic_order_cnt_cycle: number = gb.readUEG();\n            for (let i: number = 0; i < num_ref_frames_in_pic_order_cnt_cycle; i++) {\n                gb.readSEG();\n            }\n        }\n        gb.readUEG();\n        gb.readBits(1);\n\n        const pic_width_in_mbs_minus1: number = gb.readUEG();\n        const pic_height_in_map_units_minus1: number = gb.readUEG();\n\n        const frame_mbs_only_flag: number = gb.readBits(1);\n        if (frame_mbs_only_flag === 0) {\n            gb.readBits(1);\n        }\n        gb.readBits(1);\n\n        let frame_crop_left_offset: number = 0;\n        let frame_crop_right_offset: number = 0;\n        let frame_crop_top_offset: number = 0;\n        let frame_crop_bottom_offset: number = 0;\n\n        const frame_cropping_flag: boolean = gb.readBool();\n        if (frame_cropping_flag) {\n            frame_crop_left_offset = gb.readUEG();\n            frame_crop_right_offset = gb.readUEG();\n            frame_crop_top_offset = gb.readUEG();\n            frame_crop_bottom_offset = gb.readUEG();\n        }\n\n        let sar_width: number = 1, sar_height: number = 1;\n        let fps: number = 0, fps_fixed: boolean = true, fps_num: number = 0, fps_den: number = 0;\n\n        let vui_parameters_present_flag: boolean = gb.readBool();\n        if (vui_parameters_present_flag) {\n            if (gb.readBool()) {  // aspect_ratio_info_present_flag\n                const aspect_ratio_idc: number = gb.readByte();\n                const sar_w_table: number[] = [1, 12, 10, 16, 40, 24, 20, 32, 80, 18, 15, 64, 160, 4, 3, 2];\n                const sar_h_table: number[] = [1, 11, 11, 11, 33, 11, 11, 11, 33, 11, 11, 33,  99, 3, 2, 1];\n\n                if (aspect_ratio_idc > 0 && aspect_ratio_idc < 16) {\n                    sar_width = sar_w_table[aspect_ratio_idc - 1];\n                    sar_height = sar_h_table[aspect_ratio_idc - 1];\n                } else if (aspect_ratio_idc === 255) {\n                    sar_width = gb.readByte() << 8 | gb.readByte();\n                    sar_height = gb.readByte() << 8 | gb.readByte();\n                }\n            }\n\n            if (gb.readBool()) {\n                gb.readBool();\n            }\n            if (gb.readBool()) {\n                gb.readBits(4);\n                if (gb.readBool()) {\n                    gb.readBits(24);\n                }\n            }\n            if (gb.readBool()) {\n                gb.readUEG();\n                gb.readUEG();\n            }\n            if (gb.readBool()) {\n                const num_units_in_tick: number = gb.readBits(32);\n                const time_scale: number = gb.readBits(32);\n                fps_fixed = gb.readBool();\n\n                fps_num = time_scale;\n                fps_den = num_units_in_tick * 2;\n                fps = fps_num / fps_den;\n            }\n        }\n\n        let sarScale: number = 1;\n        if (sar_width !== 1 || sar_height !== 1) {\n            sarScale = sar_width / sar_height;\n        }\n\n        let crop_unit_x: number = 0, crop_unit_y: number = 0;\n        if (chroma_format_idc === 0) {\n            crop_unit_x = 1;\n            crop_unit_y = 2 - frame_mbs_only_flag;\n        } else {\n            const sub_wc: number = (chroma_format_idc === 3) ? 1 : 2;\n            const sub_hc: number = (chroma_format_idc === 1) ? 2 : 1;\n            crop_unit_x = sub_wc;\n            crop_unit_y = sub_hc * (2 - frame_mbs_only_flag);\n        }\n\n        let codec_width: number = (pic_width_in_mbs_minus1 + 1) * 16;\n        let codec_height: number = (2 - frame_mbs_only_flag) * ((pic_height_in_map_units_minus1 + 1) * 16);\n\n        codec_width -= (frame_crop_left_offset + frame_crop_right_offset) * crop_unit_x;\n        codec_height -= (frame_crop_top_offset + frame_crop_bottom_offset) * crop_unit_y;\n\n        const present_width: number = Math.ceil(codec_width * sarScale);\n\n        gb.destroy();\n        gb = null;\n\n        return new Sps(profile_string, level_string, bit_depth, chroma_format,\n            SPSParser.getChromaFormatString(chroma_format), new FrameRate(fps_fixed, fps, fps_den, fps_num),\n            new Size(sar_width, sar_height), new Size(codec_width, codec_height), new Size(present_width, codec_height));\n    }\n\n    private static getProfileString(profile_idc: number): string {\n        switch (profile_idc) {\n            case 66:\n                return 'Baseline';\n            case 77:\n                return 'Main';\n            case 88:\n                return 'Extended';\n            case 100:\n                return 'High';\n            case 110:\n                return 'High10';\n            case 122:\n                return 'High422';\n            case 244:\n                return 'High444';\n            default:\n                return 'Unknown';\n        }\n    }\n\n    private static getLevelString(level_idc: number): string {\n        return (level_idc / 10).toFixed(1);\n    }\n\n    private static getChromaFormatString(chroma: number): string {\n        switch (chroma) {\n            case 420:\n                return '4:2:0';\n            case 422:\n                return '4:2:2';\n            case 444:\n                return '4:4:4';\n            default:\n                return 'Unknown';\n        }\n    }\n\n    private static skipScalingList(gb: BitReader, count: number): void {\n        let last_scale: number = 8, next_scale: number = 8;\n        let delta_scale: number = 0;\n        for (let i: number = 0; i < count; i++) {\n            if (next_scale !== 0) {\n                delta_scale = gb.readSEG();\n                next_scale = (last_scale + delta_scale + 256) % 256;\n            }\n            last_scale = (next_scale === 0) ? last_scale : next_scale;\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/codecs/h264/sps-parser.ts","import MpegTSDemuxer from './demuxer/ts/mpegts-demuxer';\nimport Mp4Demuxer from './demuxer/mp4/mp4-demuxer';\n\nexport function createMpegTSDemuxer(data: Uint8Array): MpegTSDemuxer {\n    return new MpegTSDemuxer();\n}\n\nexport function createMp4Demuxer(data: Uint8Array): Mp4Demuxer {\n    return new Mp4Demuxer();\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.ts","export class FrameRate {\n    constructor (public fixed: boolean, public fps: number,\n        public fpsDen: number, public fpsNum: number) {\n            // do nothing\n        }\n}\n\nexport class Size {\n    constructor (public width: number, public height: number) {\n        // do nothing\n    }\n}\n\nexport class Sps {\n    constructor (public profile: string, public level: string, public bitDepth: number,\n        public chromaFormat: number, chromaFormatStr: string, public frameRate: FrameRate,\n        public sar: Size, public codecSize: Size, public presentSize: Size ) {\n        // do nothing\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/codecs/h264/nal-units.ts","import {Atom} from './atom';\nimport {VideoAtom} from './helpers/video-atom';\n\nexport class Avc1 extends VideoAtom {\n    public static parse(data: Uint8Array): Atom {\n        const atom: Avc1 = new Avc1(Atom.avc1, data.byteLength);\n        VideoAtom.fillVideoAtom(atom, data);\n        return atom;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/avc1.ts","import ByteParserUtils from '../../../utils/byte-parser-utils';\nimport {Atom, ContainerAtom} from './atom';\nimport SPSParser from '../../../codecs/h264/sps-parser';\nimport {Sps} from '../../../codecs/h264/nal-units';\n\nexport class AvcC extends Atom {\n    public version: number;\n    public profile: number;\n    public profileCompatibility: number;\n    public level: number;\n    public lengthSizeMinusOne: number;\n    public numOfSequenceParameterSets: number;\n    public numOfPictureParameterSets: number;\n    public sps: Uint8Array[];\n    public spsParsed: Sps[];\n    public pps: Uint8Array[];\n\n    public static parse(data: Uint8Array): Atom {\n        const avcC: AvcC = new AvcC(Atom.avcC, data.byteLength);\n\n        avcC.version = data[0];\n        avcC.profile = data[1];\n        avcC.profileCompatibility = data[2];\n        avcC.level = data[3];\n        avcC.lengthSizeMinusOne = data[4] & 0x03;\n        avcC.numOfSequenceParameterSets = data[5] & 0x1f;\n\n        avcC.sps = [];\n        avcC.spsParsed = [];\n        let offset: number = 6;\n        for (let i: number = 0; i < avcC.numOfSequenceParameterSets; i++) {\n            const spsSize: number = ByteParserUtils.parseUint16(data, offset);\n            offset += 2;\n            const sps: Uint8Array = new Uint8Array(data.subarray(offset, offset + spsSize));\n            avcC.sps.push(sps);\n            offset += spsSize;\n\n            avcC.spsParsed.push(SPSParser.parseSPS(sps.subarray(1, spsSize)));\n        }\n\n        avcC.numOfPictureParameterSets = data[offset] & 0x1f;\n        avcC.pps = [];\n        offset++;\n        for (let i: number = 0; i < avcC.numOfPictureParameterSets; i++) {\n            const ppsSize: number = ByteParserUtils.parseUint16(data, offset);\n            offset += 2;\n            avcC.pps.push(new Uint8Array(data.subarray(offset, offset + ppsSize)));\n            offset += ppsSize;\n        }\n\n        return avcC;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/avcC.ts","import ByteParserUtils from '../../../utils/byte-parser-utils';\nimport {Atom, ContainerAtom} from './atom';\n\nexport class Dref extends ContainerAtom {\n    public version: number;\n    public flags: Uint8Array;\n\n    public static parse(data: Uint8Array): Atom {\n        const dref: Dref = new Dref(Atom.dref, data.byteLength);\n        dref.containerDataOffset = 8;\n\n        dref.version = data[0];\n        dref.flags = data.subarray(1, 4);\n        return dref;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/dref.ts","import ByteParserUtils from '../../../utils/byte-parser-utils';\nimport {Atom} from './atom';\n\nexport class Emsg extends Atom {\n    public version: number;\n    public flags: Uint8Array;\n    public schemeIdUri: string;\n    public value: string;\n    public timescale: number;\n    public presentationTimeDelta: number;\n    public eventDuration: number;\n    public id: number;\n    public data: Uint8Array;\n\n    public static parse(data: Uint8Array): Atom {\n        const emsg: Emsg = new Emsg(Atom.emsg, data.byteLength);\n        emsg.version = data[0];\n        emsg.flags = data.subarray(1, 4);\n\n        let i: number = 4;\n        emsg.schemeIdUri = ByteParserUtils.parseNullTerminatedString(data, i, data.byteLength);\n        i += emsg.schemeIdUri.length + 1;\n        emsg.value = ByteParserUtils.parseNullTerminatedString(data, i, data.byteLength);\n        i += emsg.value.length + 1;\n        emsg.timescale = ByteParserUtils.parseUint32(data, i);\n        i += 4;\n        emsg.presentationTimeDelta = ByteParserUtils.parseUint32(data, i);\n        i += 4;\n        emsg.eventDuration = ByteParserUtils.parseUint32(data, i);\n        i += 4;\n        emsg.id = ByteParserUtils.parseUint32(data, i);\n        i += 4;\n        if (i < data.byteLength - 1) {\n            emsg.data = data.subarray(i);\n        }\n        return emsg;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/emsg.ts","import ByteParserUtils from '../../../utils/byte-parser-utils';\nimport {Atom} from './atom';\n\nexport class DecoderConfigDescriptor {\n    constructor(public tag: number, public length: number,\n        public audioObjectType: number, public samplingFrequencyIndex: number,\n        public channelConfiguration: number) {\n        }\n}\n\nexport class DecoderConfig {\n    constructor(public objectProfileIndication: number, public streamType: number,\n        public bufferSize: number, public maxBitrate: number, public avgBitrate: number,\n        public decoderConfigDescriptor: DecoderConfigDescriptor) {\n        }\n}\n\nexport class Esds extends Atom {\n    public version: number;\n    public flags: Uint8Array;\n    public esId: number;\n    public streamPriority: number;\n    public decoderConfig: DecoderConfig;\n\n    public static parse(data: Uint8Array): Atom {\n        const esds: Esds = new Esds(Atom.esds, data.byteLength);\n\n        esds.version = data[0];\n        esds.flags = data.subarray(1, 4);\n        esds.esId = ByteParserUtils.parseUint16(data, 6);\n        esds.streamPriority = data[8] & 0x1f;\n        esds.decoderConfig = new DecoderConfig(\n            data[11],\n            (data[12] >>> 2) & 0x3f,\n            (data[13] << 16) | (data[14] << 8) | data[15],\n            ByteParserUtils.parseUint32(data, 16),\n            ByteParserUtils.parseUint32(data, 20),\n            new DecoderConfigDescriptor(\n                data[24],\n                data[25],\n                (data[26] >>> 3) & 0x1f,\n                ((data[26] & 0x07) << 1) | ((data[27] >>> 7) & 0x01),\n                (data[27] >>> 3) & 0x0f\n            )\n        );\n        return esds;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/esds.ts","import ByteParserUtils from '../../../utils/byte-parser-utils';\nimport {Atom} from './atom';\n\nexport class Ftyp extends Atom {\n    public majorBrand: string;\n    public minorVersion: number;\n    public compatibleBrands: string [];\n\n    public static parse(data: Uint8Array): Atom {\n        const ftyp: Ftyp = new Ftyp(Atom.ftyp, data.byteLength);\n        ftyp.majorBrand = ByteParserUtils.parseIsoBoxType(data, 0);\n        ftyp.minorVersion = ByteParserUtils.parseUint32(data, 4);\n        ftyp.compatibleBrands = [];\n\n        let i: number = 8;\n        while (i < data.byteLength) {\n            ftyp.compatibleBrands.push(ByteParserUtils.parseIsoBoxType(data, i));\n            i += 4;\n        }\n\n        return ftyp;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/ftyp.ts","import ByteParserUtils from '../../../utils/byte-parser-utils';\nimport {Atom} from './atom';\n\nexport class Hdlr extends Atom {\n    public version: number;\n    public flags: Uint8Array;\n    public handlerType: string;\n    public name: string;\n\n    public static parse(data: Uint8Array): Atom {\n        const hdlr: Hdlr = new Hdlr(Atom.hdlr, data.byteLength);\n        hdlr.version = data[0];\n        hdlr.flags = data.subarray(1, 4);\n        hdlr.handlerType = ByteParserUtils.parseIsoBoxType(data, 8);\n\n        // parse out the name field\n        let name: string = '';\n        for (let i: number = 24; i < data.byteLength; i++) {\n            if (data[i] === 0x00) {\n                i++;\n                break;\n            }\n            name += String.fromCharCode(data[i]);\n        }\n        hdlr.name = decodeURIComponent(name);\n\n        return hdlr;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/hdlr.ts","import ByteParserUtils from '../../../../utils/byte-parser-utils';\nimport {Atom, ContainerAtom} from '../atom';\n\nexport class AudioAtom extends ContainerAtom {\n    public dataReferenceIndex: number;\n    public channelCount: number;\n    public sampleSize: number;\n    public sampleRate: number;\n\n    public static fillAudioAtom(atom: AudioAtom, data: Uint8Array): Atom {\n        atom.containerDataOffset = 28;\n\n        atom.dataReferenceIndex = ByteParserUtils.parseUint16(data, 6);\n        atom.channelCount = ByteParserUtils.parseUint16(data, 16);\n        atom.sampleSize = ByteParserUtils.parseUint16(data, 18);\n        atom.sampleRate = ByteParserUtils.parseUint16(data, 24) +\n            (ByteParserUtils.parseUint16(data, 26) >>> 15);\n\n        return atom;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/helpers/audio-atom.ts","import {Atom} from './atom';\nimport {VideoAtom} from './helpers/video-atom';\n\nexport class Hev1 extends VideoAtom {\n    public static parse(data: Uint8Array): Atom {\n        const atom: Hev1 = new Hev1(Atom.hev1, data.byteLength);\n        VideoAtom.fillVideoAtom(atom, data);\n        return atom;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/hev1.ts","import {Atom} from './atom';\nimport {VideoAtom} from './helpers/video-atom';\n\nexport class Hvc1 extends VideoAtom {\n    public static parse(data: Uint8Array): Atom {\n        const atom: Hvc1 = new Hvc1(Atom.hvc1, data.byteLength);\n        VideoAtom.fillVideoAtom(atom, data);\n        return atom;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/hvc1.ts","import ByteParserUtils from '../../../utils/byte-parser-utils';\nimport { Atom, ContainerAtom } from './atom';\n\nexport class HvcC extends Atom {\n    public version: number;\n    public profileSpace: number;\n    public tierFlag: number;\n    public profileIdc: number;\n    public profileCompatibility: number;\n    public constraintIndicator: Uint8Array;\n    public levelIdc: number;\n    public spatialSegmentationIdc: number;\n    public parallelismType: number;\n    public chromaFormat: number;\n    public bitDepthLumaMinus8: number;\n    public bitDepthChromaMinus8: number;\n    public avgFrameRate: number;\n    public constantFrameRate: number;\n    public numTemporalLayers: number;\n    public temporalIdNested: number;\n    public lengthSizeMinusOne: number;\n\n    public static parse(data: Uint8Array): Atom {\n        const hvcC: HvcC = new HvcC(Atom.hvcC, data.byteLength);\n        let aux: number;\n\n        hvcC.version = data[0];\n\n        aux = data[1];\n        hvcC.profileSpace = aux >> 6;\n        hvcC.tierFlag = (aux & 0x20) >> 5;\n        hvcC.profileIdc = (aux & 0x1F);\n\n        hvcC.profileCompatibility = ByteParserUtils.parseUint32(data, 2);\n        hvcC.constraintIndicator = data.subarray(6, 12);\n        hvcC.levelIdc = data[12];\n        hvcC.spatialSegmentationIdc = ByteParserUtils.parseUint16(data, 13) & 0xFFF;\n        hvcC.parallelismType = (data[15] & 0x3);\n        hvcC.chromaFormat = (data[16] & 0x3);\n        hvcC.bitDepthLumaMinus8 = (data[17] & 0x7);\n        hvcC.bitDepthChromaMinus8 = (data[18] & 0x7);\n        hvcC.avgFrameRate = ByteParserUtils.parseUint16(data, 19);\n\n        aux = data[21];\n        hvcC.constantFrameRate = (aux >> 6);\n        hvcC.numTemporalLayers = (aux & 0XD) >> 3;\n        hvcC.temporalIdNested = (aux & 0X4) >> 2;\n        hvcC.lengthSizeMinusOne = (aux & 0X3);\n\n        // TODO: read H265 nalus\n\n        return hvcC;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/hvcC.ts","import {Atom} from './atom';\nimport {Ftyp} from './ftyp';\nimport {Stsd} from './stsd';\nimport {Avc1} from './avc1';\nimport {AvcC} from './avcC';\nimport {Mvhd} from './mvhd';\nimport {Trex} from './trex';\nimport {Tkhd} from './tkhd';\nimport {Mdhd} from './mdhd';\nimport {Hdlr} from './hdlr';\nimport {Vmhd} from './vmhd';\nimport {Dref} from './dref';\nimport {Stts} from './stts';\nimport {Stsc} from './stsc';\nimport {Stsz} from './stsz';\nimport {Stco} from './stco';\nimport {Smhd} from './smhd';\nimport {Mp4a} from './mp4a';\nimport {Esds} from './esds';\nimport {Sidx} from './sidx';\nimport {Tfhd} from './tfhd';\nimport {Tfdt} from './tfdt';\nimport {Trun} from './trun';\nimport {Mfhd} from './mfhd';\nimport {Mdat} from './mdat';\nimport {Emsg} from './emsg';\nimport {Styp} from './styp';\nimport {Pssh} from './pssh';\nimport {HvcC} from './hvcC';\nimport {Hvc1} from './hvc1';\nimport {Hev1} from './hev1';\n\nexport const boxesParsers: {[type: string] : (data: Uint8Array) => Atom} = {};\n\nboxesParsers[Atom.ftyp] = Ftyp.parse;\nboxesParsers[Atom.stsd] = Stsd.parse;\nboxesParsers[Atom.avc1] = Avc1.parse;\nboxesParsers[Atom.avcC] = AvcC.parse;\nboxesParsers[Atom.mvhd] = Mvhd.parse;\nboxesParsers[Atom.trex] = Trex.parse;\nboxesParsers[Atom.tkhd] = Tkhd.parse;\nboxesParsers[Atom.mdhd] = Mdhd.parse;\nboxesParsers[Atom.hdlr] = Hdlr.parse;\nboxesParsers[Atom.vmhd] = Vmhd.parse;\nboxesParsers[Atom.dref] = Dref.parse;\nboxesParsers[Atom.stts] = Stts.parse;\nboxesParsers[Atom.stsc] = Stsc.parse;\nboxesParsers[Atom.stsz] = Stsz.parse;\nboxesParsers[Atom.stco] = Stco.parse;\nboxesParsers[Atom.smhd] = Smhd.parse;\nboxesParsers[Atom.mp4a] = Mp4a.parse;\nboxesParsers[Atom.esds] = Esds.parse;\nboxesParsers[Atom.sidx] = Sidx.parse;\nboxesParsers[Atom.tfhd] = Tfhd.parse;\nboxesParsers[Atom.tfdt] = Tfdt.parse;\nboxesParsers[Atom.trun] = Trun.parse;\nboxesParsers[Atom.mfhd] = Mfhd.parse;\nboxesParsers[Atom.mdat] = Mdat.parse;\nboxesParsers[Atom.emsg] = Emsg.parse;\nboxesParsers[Atom.styp] = Styp.parse;\nboxesParsers[Atom.pssh] = Pssh.parse;\nboxesParsers[Atom.hvcC] = HvcC.parse;\nboxesParsers[Atom.hvc1] = Hvc1.parse;\nboxesParsers[Atom.hev1] = Hev1.parse;\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/index.ts","import ByteParserUtils from '../../../utils/byte-parser-utils';\nimport { Atom } from './atom';\n\nexport class Mdat extends Atom {\n\n    public static parse(data: Uint8Array): Atom {\n        const mdat: Mdat = new Mdat(Atom.mdat, data.byteLength);\n        Mdat.parsePayload(data);\n        return mdat;\n    }\n\n    private static parsePayload(data: Uint8Array): void {\n        let length: number;\n        for (let i: number = 0; i + 4 < data.byteLength; i += length) {\n            length = ByteParserUtils.parseUint32(data, i);\n            i += 4;\n\n            if (length <= 0) {\n                console.log('is this an H264 stream?');\n                continue;\n            }\n\n            const nalType: number = data[i] & 0x1F;\n            switch (nalType) {\n                case 0x01:\n                    console.log('slice_layer_without_partitioning_rbsp');\n                    break;\n                case 0x05:\n                    console.log('slice_layer_without_partitioning_rbsp_idr');\n                    break;\n                case 0x06:\n                    console.log('sei_rbsp');\n                    break;\n                case 0x07:\n                    console.log('seq_parameter_set_rbsp');\n                    break;\n                case 0x08:\n                    console.log('pic_parameter_set_rbsp');\n                    break;\n                case 0x09:\n                    console.log('access_unit_delimiter_rbsp');\n                    break;\n                default:\n                    console.log('Unknown nal unit: ' + nalType);\n                    break;\n            }\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/mdat.ts","import ByteParserUtils from '../../../utils/byte-parser-utils';\nimport {Atom} from './atom';\n\nexport class Mdhd extends Atom {\n    public version: number;\n    public flags: Uint8Array;\n    public language: string;\n    public creationTime: Date;\n    public modificationTime: Date;\n    public timescale: number;\n    public duration: number;\n\n    public static parse(data: Uint8Array): Atom {\n        const mdhd: Mdhd = new Mdhd(Atom.mdhd, data.byteLength);\n        mdhd.version = data[0];\n        mdhd.flags = data.subarray(1, 4);\n\n        let offset: number = 4;\n        if (mdhd.version === 1) {\n            offset += 4;\n            mdhd.creationTime = ByteParserUtils.parseIsoBoxDate(ByteParserUtils.parseUint32(data, offset));\n            offset += 8;\n            mdhd.modificationTime = ByteParserUtils.parseIsoBoxDate(ByteParserUtils.parseUint32(data, offset));\n            offset += 4;\n            mdhd.timescale = ByteParserUtils.parseUint32(data, offset);\n            offset += 8;\n            mdhd.duration = ByteParserUtils.parseUint32(data, offset);\n        } else {\n            mdhd.creationTime = ByteParserUtils.parseIsoBoxDate(ByteParserUtils.parseUint32(data, offset));\n            offset += 4;\n            mdhd.modificationTime = ByteParserUtils.parseIsoBoxDate(ByteParserUtils.parseUint32(data, offset));\n            offset += 4;\n            mdhd.timescale = ByteParserUtils.parseUint32(data, offset);\n            offset += 4;\n            mdhd.duration = ByteParserUtils.parseUint32(data, offset);\n        }\n        offset += 4;\n        let langVal: number = ByteParserUtils.parseUint16(data, offset);\n        mdhd.language = '';\n        mdhd.language += String.fromCharCode((langVal >> 10) + 0x60);\n        mdhd.language += String.fromCharCode(((langVal & 0x03c0) >> 5) + 0x60);\n        mdhd.language += String.fromCharCode((langVal & 0x1f) + 0x60);\n\n        return mdhd;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/mdhd.ts","import ByteParserUtils from '../../../utils/byte-parser-utils';\nimport {Atom} from './atom';\n\nexport class Mfhd extends Atom {\n    public version: number;\n    public flags: Uint8Array;\n    public sequenceNumber: number;\n\n    public static parse(data: Uint8Array): Atom {\n        const mfhd: Mfhd = new Mfhd(Atom.mfhd, data.byteLength);\n        mfhd.version = data[0];\n        mfhd.flags = data.subarray(1, 4);\n        mfhd.sequenceNumber = ByteParserUtils.parseUint32(data, 4);\n        return mfhd;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/mfhd.ts","import ByteParserUtils from '../../../utils/byte-parser-utils';\nimport {Atom, ContainerAtom} from './atom';\nimport {AudioAtom} from './helpers/audio-atom';\n\nexport class Mp4a extends AudioAtom {\n    public static parse(data: Uint8Array): Atom {\n        const atom: Mp4a = new Mp4a(Atom.mp4a, data.byteLength);\n        AudioAtom.fillAudioAtom(atom, data);\n        return atom;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/mp4a.ts","import ByteParserUtils from '../../../utils/byte-parser-utils';\nimport {Atom} from './atom';\n\nexport class Mvhd extends Atom {\n    public version: number;\n    public flags: Uint8Array;\n    public creationTime: Date;\n    public modificationTime: Date;\n    public timescale: number;\n    public duration: number;\n    public rate: number;\n    public volume: number;\n    public matrix: Uint32Array;\n    public previewtime: number;\n    public previewDuration: number;\n    public posterTime: number;\n    public selectionTime: number;\n    public selectionDuration: number;\n    public currentTime: number;\n    public nextTrackId: number;\n\n    public static parse(data: Uint8Array): Atom {\n        const mvhd: Mvhd = new Mvhd(Atom.mvhd, data.byteLength);\n        mvhd.version = data[0];\n        mvhd.flags = data.subarray(1, 4);\n\n        let offset: number = 4;\n        if (mvhd.version === 1) {\n            offset += 4;\n            mvhd.creationTime = ByteParserUtils.parseIsoBoxDate(ByteParserUtils.parseUint32(data, offset));\n            offset += 8;\n            mvhd.modificationTime = ByteParserUtils.parseIsoBoxDate(ByteParserUtils.parseUint32(data, offset));\n            offset += 4;\n            mvhd.timescale = ByteParserUtils.parseUint32(data, offset);\n            offset += 8;\n            mvhd.duration = ByteParserUtils.parseUint32(data, offset);\n        } else {\n            mvhd.creationTime = ByteParserUtils.parseIsoBoxDate(ByteParserUtils.parseUint32(data, offset));\n            offset += 4;\n            mvhd.modificationTime = ByteParserUtils.parseIsoBoxDate(ByteParserUtils.parseUint32(data, offset));\n            offset += 4;\n            mvhd.timescale = ByteParserUtils.parseUint32(data, offset);\n            offset += 4;\n            mvhd.duration = ByteParserUtils.parseUint32(data, offset);\n        }\n        offset += 4;\n        mvhd.rate = ByteParserUtils.parseUint16(data, offset) +\n            ByteParserUtils.parseUint16(data, offset + 2) / 16;\n        offset += 4;\n        mvhd.volume = data[offset] + data[offset + 1] / 8;\n        offset += 12;\n        mvhd.matrix = new Uint32Array(data.subarray(offset, offset + (9 * 4)));\n        offset += 9 * 4;\n        mvhd.previewtime = ByteParserUtils.parseUint32(data, offset);\n        offset += 4;\n        mvhd.previewDuration = ByteParserUtils.parseUint32(data, offset);\n        offset += 4;\n        mvhd.posterTime = ByteParserUtils.parseUint32(data, offset);\n        offset += 4;\n        mvhd.selectionTime = ByteParserUtils.parseUint32(data, offset);\n        offset += 4;\n        mvhd.selectionDuration = ByteParserUtils.parseUint32(data, offset);\n        offset += 4;\n        mvhd.currentTime = ByteParserUtils.parseUint32(data, offset);\n        offset += 4;\n        mvhd.nextTrackId = ByteParserUtils.parseUint32(data, offset);\n        return mvhd;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/mvhd.ts","import ByteParserUtils from '../../../utils/byte-parser-utils';\nimport { Atom } from './atom';\n\nexport class Pssh extends Atom {\n    public version: number;\n    public flags: Uint8Array;\n    public systemId: Uint8Array;\n    public kId: Uint8Array[];\n    public data: Uint8Array;\n\n    public static parse(data: Uint8Array): Atom {\n        const pssh: Pssh = new Pssh(Atom.pssh, data.byteLength);\n\n        pssh.version = data[0];\n        pssh.flags = data.subarray(1, 4);\n\n        let offset: number = 4;\n        pssh.systemId = data.subarray(offset, offset + 16);\n        offset += 16;\n\n        if (pssh.version > 0) {\n            const count: number = ByteParserUtils.parseUint32(data, 4);\n            offset += 4;\n            pssh.kId = [];\n            for (let i: number = 0; i < count; i++) {\n                pssh.kId[i] = data.subarray(offset, offset + 16);\n                offset += 16;\n            }\n        }\n\n        const dataSize: number = ByteParserUtils.parseUint32(data, offset);\n        offset += 4;\n        if (dataSize > 0) {\n            pssh.data = data.subarray(offset, offset + 16);\n        }\n        return pssh;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/pssh.ts","import ByteParserUtils from '../../../utils/byte-parser-utils';\nimport {Atom} from './atom';\n\nexport class Reference {\n    constructor(public type: number, public size: number,\n        public subsegmentDuration: number, public startsWithSap: boolean,\n        public sapType: number, public sapDeltaTime: number) {\n    }\n}\n\nexport class Sidx extends Atom {\n    public version: number;\n    public flags: Uint8Array;\n    public referenceId: number;\n    public timescale: number;\n    public earliestPresentationTime: number;\n    public firstOffset: number;\n    public references: Reference[];\n\n    public static parse(data: Uint8Array): Atom {\n        const sidx: Sidx = new Sidx(Atom.sidx, data.byteLength);\n        sidx.version = data[0];\n        sidx.flags = data.subarray(1, 4);\n        sidx.referenceId = ByteParserUtils.parseUint32(data, 4);\n        sidx.timescale = ByteParserUtils.parseUint32(data, 8);\n        let offset: number;\n        if (sidx.version === 0) {\n            sidx.earliestPresentationTime = ByteParserUtils.parseUint32(data, 12);\n            sidx.firstOffset = ByteParserUtils.parseUint32(data, 16);\n            offset = 20;\n        } else {\n            sidx.earliestPresentationTime = ByteParserUtils.parseLong64(data, 12);\n            sidx.firstOffset = ByteParserUtils.parseLong64(data, 20);\n            offset = 28;\n        }\n\n        offset += 2;\n        const referenceCount: number = ByteParserUtils.parseUint16(data, offset);\n        sidx.references = [];\n        offset += 2;\n\n        for (let i: number = 0; i < referenceCount; i++) {\n            sidx.references.push(new Reference(\n                (data[offset] & 0x80) >>> 7,\n                ByteParserUtils.parseUint32(data, offset) & 0x7FFFFFFF,\n                ByteParserUtils.parseUint32(data, offset + 4),\n                !!(data[offset + 8] & 0x80),\n                (data[offset + 8] & 0x70) >>> 4,\n                ByteParserUtils.parseUint32(data, offset + 8) & 0x0FFFFFFF));\n            offset += 12;\n        }\n        return sidx;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/sidx.ts","import ByteParserUtils from '../../../utils/byte-parser-utils';\nimport {Atom} from './atom';\n\nexport class Smhd extends Atom {\n    public version: number;\n    public flags: Uint8Array;\n    public balance: number;\n\n    public static parse(data: Uint8Array): Atom {\n        const smhd: Smhd = new Smhd(Atom.smhd, data.byteLength);\n        smhd.version = data[0];\n        smhd.flags = data.subarray(1, 4);\n        smhd.balance = data[4] + data[5] / 256;\n\n        return smhd;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/smhd.ts","import ByteParserUtils from '../../../utils/byte-parser-utils';\nimport {Atom} from './atom';\n\nexport class Stco extends Atom {\n    public version: number;\n    public flags: Uint8Array;\n    public chunkOffsets: number[];\n\n    public static parse(data: Uint8Array): Atom {\n        const stco: Stco = new Stco(Atom.stco, data.byteLength);\n        stco.version = data[0];\n        stco.flags = data.subarray(1, 4);\n        stco.chunkOffsets = [];\n        const entryCount: number = ByteParserUtils.parseUint32(data, 4);\n        let offset: number = 8;\n        for (let i: number = 0; i < entryCount; i++) {\n            stco.chunkOffsets.push(\n                ByteParserUtils.parseUint32(data, offset));\n            offset += 4;\n        }\n        return stco;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/stco.ts","import ByteParserUtils from '../../../utils/byte-parser-utils';\nimport {Atom} from './atom';\n\nexport class SampleToChunkEntry {\n    constructor(public firstChunk: number, public samplesPerChunk: number,\n        public sampleDescriptionIndex: number) {\n    }\n}\n\nexport class Stsc extends Atom {\n    public version: number;\n    public flags: Uint8Array;\n    public sampleToChunks: SampleToChunkEntry[];\n\n    public static parse(data: Uint8Array): Atom {\n        const stsc: Stsc = new Stsc(Atom.stsc, data.byteLength);\n        stsc.version = data[0];\n        stsc.flags = data.subarray(1, 4);\n        stsc.sampleToChunks = [];\n        const entryCount: number = ByteParserUtils.parseUint32(data, 4);\n        let offset: number = 8;\n        for (let i: number = 0; i < entryCount; i++) {\n            stsc.sampleToChunks.push(new SampleToChunkEntry(\n                ByteParserUtils.parseUint32(data, offset),\n                ByteParserUtils.parseUint32(data, offset + 4),\n                ByteParserUtils.parseUint32(data, offset + 8)));\n            offset += 12;\n        }\n        return stsc;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/stsc.ts","import ByteParserUtils from '../../../utils/byte-parser-utils';\nimport {Atom, ContainerAtom} from './atom';\n\nexport class Stsd extends ContainerAtom {\n    public version: number;\n    public flags: Uint8Array;\n    public entryCount: number;\n\n    public static parse(data: Uint8Array): Atom {\n        const stsd: Stsd = new Stsd(Atom.stsd, data.byteLength);\n        stsd.containerDataOffset = 8;\n\n        stsd.version = data[0];\n        stsd.flags = data.subarray(1, 4);\n        stsd.entryCount = ByteParserUtils.parseUint32(data, 4);\n\n        return stsd;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/stsd.ts","import ByteParserUtils from '../../../utils/byte-parser-utils';\nimport {Atom} from './atom';\n\nexport class Stsz extends Atom {\n    public version: number;\n    public flags: Uint8Array;\n    public sampleSize: number;\n    public entries: number[];\n\n    public static parse(data: Uint8Array): Atom {\n        const stsz: Stsz = new Stsz(Atom.stsz, data.byteLength);\n        stsz.version = data[0];\n        stsz.flags = data.subarray(1, 4);\n        stsz.sampleSize = ByteParserUtils.parseUint32(data, 4);\n        stsz.entries = [];\n\n        for (let i: number = 12; i < data.byteLength; i += 4) {\n            stsz.entries.push(\n                ByteParserUtils.parseUint32(data, i));\n        }\n        return stsz;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/stsz.ts","import ByteParserUtils from '../../../utils/byte-parser-utils';\nimport {Atom} from './atom';\n\nexport class TimeToSampleEntry {\n    constructor(public sampleCount: number, public sampleDelta: number) {\n    }\n}\n\nexport class Stts extends Atom {\n    public version: number;\n    public flags: Uint8Array;\n    public timeToSamples: TimeToSampleEntry[];\n\n    public static parse(data: Uint8Array): Atom {\n        const stts: Stts = new Stts(Atom.stts, data.byteLength);\n        stts.version = data[0];\n        stts.flags = data.subarray(1, 4);\n        stts.timeToSamples = [];\n        const entryCount: number = ByteParserUtils.parseUint32(data, 4);\n        let offset: number = 8;\n        for (let i: number = 0; i < entryCount; i++) {\n            stts.timeToSamples.push(new TimeToSampleEntry(\n                ByteParserUtils.parseUint32(data, offset),\n                ByteParserUtils.parseUint32(data, offset + 4)));\n            offset += 8;\n        }\n        return stts;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/stts.ts","import ByteParserUtils from '../../../utils/byte-parser-utils';\nimport {Atom} from './atom';\n\nexport class Styp extends Atom {\n    public majorBrand: string;\n    public minorVersion: number;\n    public compatibleBrands: string [];\n\n    public static parse(data: Uint8Array): Atom {\n        const styp: Styp = new Styp(Atom.styp, data.byteLength);\n        styp.majorBrand = ByteParserUtils.parseIsoBoxType(data, 0);\n        styp.minorVersion = ByteParserUtils.parseUint32(data, 4);\n        styp.compatibleBrands = [];\n\n        let i: number = 8;\n        while (i < data.byteLength) {\n            styp.compatibleBrands.push(ByteParserUtils.parseIsoBoxType(data, i));\n            i += 4;\n        }\n\n        return styp;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/styp.ts","import ByteParserUtils from '../../../utils/byte-parser-utils';\nimport {Atom} from './atom';\n\nexport class Tfdt extends Atom {\n    public version: number;\n    public flags: Uint8Array;\n    public baseMediaDecodeTime: number;\n\n    public static parse(data: Uint8Array): Atom {\n        const tfdt: Tfdt = new Tfdt(Atom.tfdt, data.byteLength);\n        tfdt.version = data[0];\n        tfdt.flags = data.subarray(1, 4);\n\n        tfdt.baseMediaDecodeTime = ByteParserUtils.parseUint32(data, 4);\n        if (tfdt.version === 1) {\n            tfdt.baseMediaDecodeTime *= Math.pow(2, 32);\n            tfdt.baseMediaDecodeTime += ByteParserUtils.parseUint32(data, 8);\n        }\n\n        return tfdt;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/tfdt.ts","import ByteParserUtils from '../../../utils/byte-parser-utils';\nimport {Atom} from './atom';\n\nexport class Tfhd extends Atom {\n    public version: number;\n    public flags: Uint8Array;\n    public trackId: number;\n    public baseDataOffset: number;\n    public sampleDescriptionIndex: number;\n    public defaultSampleDuration: number;\n    public defaultSampleSize: number;\n    public defaultSampleFlags: number;\n\n    public static parse(data: Uint8Array): Atom {\n        const tfhd: Tfhd = new Tfhd(Atom.tfhd, data.byteLength);\n        tfhd.version = data[0];\n        tfhd.flags = data.subarray(1, 4);\n\n        const baseDataOffsetPresent: boolean = !!(tfhd.flags[2] & 0x01);\n        const sampleDescriptionIndexPresent: boolean = !!(tfhd.flags[2] & 0x02);\n        const defaultSampleDurationPresent: boolean = !!(tfhd.flags[2] & 0x08);\n        const defaultSampleSizePresent: boolean = !!(tfhd.flags[2] & 0x10);\n        const defaultSampleFlagsPresent: boolean = !!(tfhd.flags[2] & 0x20);\n\n        let offset: number = 8;\n        if (baseDataOffsetPresent) {\n            tfhd.baseDataOffset = ByteParserUtils.parseLong64(data, 12);\n            offset += 8;\n        }\n        if (sampleDescriptionIndexPresent) {\n            tfhd.sampleDescriptionIndex = ByteParserUtils.parseUint32(data, offset);\n            offset += 4;\n        }\n        if (defaultSampleDurationPresent) {\n            tfhd.defaultSampleDuration = ByteParserUtils.parseUint32(data, offset);\n            offset += 4;\n        }\n        if (defaultSampleSizePresent) {\n            tfhd.defaultSampleSize = ByteParserUtils.parseUint32(data, offset);\n            offset += 4;\n        }\n        if (defaultSampleFlagsPresent) {\n            tfhd.defaultSampleFlags = ByteParserUtils.parseUint32(data, offset);\n        }\n\n        return tfhd;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/tfhd.ts","import ByteParserUtils from '../../../utils/byte-parser-utils';\nimport {Atom} from './atom';\n\nexport class Tkhd extends Atom {\n    public version: number;\n    public flags: Uint8Array;\n    public creationTime: Date;\n    public modificationTime: Date;\n    public trackId: number;\n    public duration: number;\n    public layer: number;\n    public volume: number;\n    public matrix: Uint32Array;\n    public alternateGroup: number;\n    public width: number;\n    public height: number;\n\n    public static parse(data: Uint8Array): Atom {\n        const tkhd: Tkhd = new Tkhd(Atom.tkhd, data.byteLength);\n        tkhd.version = data[0];\n        tkhd.flags = data.subarray(1, 4);\n\n        let offset: number = 4;\n        if (tkhd.version === 1) {\n            offset += 4;\n            tkhd.creationTime = ByteParserUtils.parseIsoBoxDate(ByteParserUtils.parseUint32(data, offset));\n            offset += 8;\n            tkhd.modificationTime = ByteParserUtils.parseIsoBoxDate(ByteParserUtils.parseUint32(data, offset));\n            offset += 4;\n            tkhd.trackId = ByteParserUtils.parseUint32(data, offset);\n            offset += 12;\n            tkhd.duration = ByteParserUtils.parseUint32(data, offset);\n        } else {\n            tkhd.creationTime = ByteParserUtils.parseIsoBoxDate(ByteParserUtils.parseUint32(data, offset));\n            offset += 4;\n            tkhd.modificationTime = ByteParserUtils.parseIsoBoxDate(ByteParserUtils.parseUint32(data, offset));\n            offset += 4;\n            tkhd.trackId = ByteParserUtils.parseUint32(data, offset);\n            offset += 8;\n            tkhd.duration = ByteParserUtils.parseUint32(data, offset);\n        }\n        offset += 12;\n        tkhd.layer = ByteParserUtils.parseUint16(data, offset);\n        offset += 2;\n        tkhd.alternateGroup = ByteParserUtils.parseUint16(data, offset);\n        offset += 2;\n        tkhd.volume = data[offset] + (data[offset + 1] / 8);\n        offset += 4;\n        tkhd.matrix = new Uint32Array(data.subarray(offset, offset + (9 * 4)));\n        offset += 9 * 4;\n        tkhd.width = ByteParserUtils.parseUint16(data, offset) +\n            (ByteParserUtils.parseUint16(data, offset + 2) / 16);\n        offset += 4;\n        tkhd.height = ByteParserUtils.parseUint16(data, offset) +\n            (ByteParserUtils.parseUint16(data, offset + 2) / 16);\n\n        return tkhd;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/tkhd.ts","import ByteParserUtils from '../../../utils/byte-parser-utils';\nimport {Atom} from './atom';\n\nexport class Trex extends Atom {\n    public version: number;\n    public flags: Uint8Array;\n    public trackId: number;\n    public defaultSampleDescriptionIndex: number;\n    public defaultSampleDuration: number;\n    public defaultSampleSize: number;\n    public sampleDependsOn: number;\n    public sampleIsDependedOn: number;\n    public sampleHasRedundancy: number;\n    public samplePaddingValue: number;\n    public sampleIsDifferenceSample: boolean;\n    public sampleDegradationPriority: number;\n\n    public static parse(data: Uint8Array): Atom {\n        const trex: Trex = new Trex(Atom.trex, data.byteLength);\n\n        trex.version = data[0];\n        trex.flags = new Uint8Array(data.subarray(1, 4)),\n        trex.trackId = ByteParserUtils.parseUint32(data, 4),\n        trex.defaultSampleDescriptionIndex = ByteParserUtils.parseUint32(data, 8);\n        trex.defaultSampleDuration = ByteParserUtils.parseUint32(data, 12);\n        trex.defaultSampleSize = ByteParserUtils.parseUint32(data, 16);\n        trex.sampleDependsOn = data[20] & 0x03;\n        trex.sampleIsDependedOn = (data[21] & 0xc0) >> 6;\n        trex.sampleHasRedundancy = (data[21] & 0x30) >> 4;\n        trex.samplePaddingValue = (data[21] & 0x0e) >> 1;\n        trex.sampleIsDifferenceSample = !!(data[21] & 0x01);\n        trex.sampleDegradationPriority = ByteParserUtils.parseUint32(data, 22);\n\n        return trex;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/trex.ts","import ByteParserUtils from '../../../utils/byte-parser-utils';\nimport { Atom } from './atom';\n\nexport class SampleFlags {\n    constructor(public isLeading: number, public dependsOn: number, public isDependedOn: number,\n        public hasRedundancy: number, public paddingValue: number, public isSyncFrame: boolean,\n        public degradationPriority: number) {\n    }\n}\n\nexport class Sample {\n    public flags: SampleFlags;\n    public duration: number;\n    public size: number;\n    public compositionTimeOffset: number;\n}\n\nexport class Trun extends Atom {\n    public version: number;\n    public flags: Uint8Array;\n    public trackId: number;\n    public dataOffset: number;\n    public samples: Sample[];\n\n    public static parse(data: Uint8Array): Atom {\n        const trun: Trun = new Trun(Atom.trun, data.byteLength);\n        trun.version = data[0];\n        trun.flags = data.subarray(1, 4);\n\n        const dataOffsetPresent: boolean = !!(trun.flags[2] & 0x01);\n        const firstSampleFlagsPresent: boolean = !!(trun.flags[2] & 0x04);\n        const sampleDurationPresent: boolean = !!(trun.flags[1] & 0x01);\n        const sampleSizePresent: boolean = !!(trun.flags[1] & 0x02);\n        const sampleFlagsPresent: boolean = !!(trun.flags[1] & 0x04);\n        const sampleCompositionTimeOffsetPresent: boolean = !!(trun.flags[1] & 0x08);\n\n        let sampleCount: number = ByteParserUtils.parseUint32(data, 4);\n        let offset: number = 8;\n        trun.samples = [];\n        let totalSize: number = 0;\n        if (dataOffsetPresent) {\n            trun.dataOffset = ByteParserUtils.parseUint32(data, offset);\n            offset += 4;\n        }\n        if (firstSampleFlagsPresent && sampleCount) {\n            const sample: Sample = new Sample();\n            sample.flags = Trun.parseFlags(data.subarray(offset, offset + 4));\n            offset += 4;\n            if (sampleDurationPresent) {\n                sample.duration = ByteParserUtils.parseUint32(data, offset);\n                offset += 4;\n            }\n            if (sampleSizePresent) {\n                sample.size = ByteParserUtils.parseUint32(data, offset);\n                totalSize += sample.size;\n                offset += 4;\n            }\n            if (sampleCompositionTimeOffsetPresent) {\n                sample.compositionTimeOffset = ByteParserUtils.parseUint32(data, offset);\n                offset += 4;\n            }\n            trun.samples.push(sample);\n            sampleCount--;\n        }\n        while (sampleCount--) {\n            const sample: Sample = new Sample();\n            if (sampleDurationPresent) {\n                sample.duration = ByteParserUtils.parseUint32(data, offset);\n                offset += 4;\n            }\n            if (sampleSizePresent) {\n                sample.size = ByteParserUtils.parseUint32(data, offset);\n                totalSize += sample.size;\n                offset += 4;\n            }\n            if (sampleFlagsPresent) {\n                sample.flags = Trun.parseFlags(data.subarray(offset, offset + 4));\n                offset += 4;\n            }\n            if (sampleCompositionTimeOffsetPresent) {\n                sample.compositionTimeOffset = ByteParserUtils.parseUint32(data, offset);\n                offset += 4;\n            }\n            trun.samples.push(sample);\n        }\n        console.log('total size: ' + totalSize);\n        return trun;\n    }\n\n    private static parseFlags(data: Uint8Array): SampleFlags {\n        return new SampleFlags(\n            (data[0] & 0x0c) >>> 2,\n            (data[0] & 0x03),\n            (data[1] & 0xc0) >>> 6,\n            (data[1] & 0x30) >>> 4,\n            (data[1] & 0x0e) >>> 1,\n            (data[1] & 0x01) === 0,\n            (data[2] << 8) | data[3]\n        );\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/trun.ts","import ByteParserUtils from '../../../utils/byte-parser-utils';\nimport {Atom} from './atom';\n\nexport class Vmhd extends Atom {\n    public version: number;\n    public flags: Uint8Array;\n    public graphichsMode: number;\n    public opColor: Uint16Array;\n\n    public static parse(data: Uint8Array): Atom {\n        const vmhd: Vmhd = new Vmhd(Atom.vmhd, data.byteLength);\n        vmhd.version = data[0];\n        vmhd.flags = data.subarray(1, 4);\n        vmhd.graphichsMode = ByteParserUtils.parseUint16(data, 4);\n        vmhd.opColor = new Uint16Array([\n            ByteParserUtils.parseUint16(data, 6),\n            ByteParserUtils.parseUint16(data, 8),\n            ByteParserUtils.parseUint16(data, 10)\n        ]);\n        return vmhd;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/atoms/vmhd.ts","import ByteParserUtils from '../../utils/byte-parser-utils';\nimport { boxesParsers } from './atoms';\nimport { Atom, ContainerAtom } from './atoms/atom';\nimport Track from '../track';\nimport Mp4Track from './mp4-track';\nimport { Tkhd } from './atoms/tkhd';\nimport IDemuxer from '../demuxer';\nimport Frame from '../frame';\n\nexport default class Mp4Demuxer implements IDemuxer {\n    public tracks: { [id: number] : Track; };\n\n    private data: Uint8Array;\n    private atoms: Atom[];\n    private lastTrackId: number;\n\n    constructor() {\n        this.atoms = [];\n        this.tracks = {};\n    }\n\n    public append(data: Uint8Array): void {\n        this.atoms = this.parseAtoms(data);\n    }\n\n    public end(): void {\n        // do nothing\n    }\n\n    private parseAtoms(data: Uint8Array, offset: number = 0): Atom[] {\n        const atoms: Atom[] = [];\n        this.data = data;\n        let dataOffset: number = offset;\n\n        while (dataOffset < data.byteLength) {\n            const size: number = ByteParserUtils.parseUint32(data, dataOffset);\n            const type: string = ByteParserUtils.parseIsoBoxType(data, dataOffset + 4);\n            const end: number = size > 1 ? dataOffset + size : data.byteLength;\n            const boxData: Uint8Array = data.subarray(dataOffset + 8, end);\n\n            // parse\n            let atom: Atom;\n            if (boxesParsers[type]) {\n                atom = boxesParsers[type](boxData);\n            }\n\n            if (!atom) {\n                // don't know how to parse this box\n                // so let's just add it without parsing its content\n                if (Atom.isContainerBox(type)) {\n                    atom = new ContainerAtom(type, boxData.byteLength);\n                } else {\n                    atom = new Atom(type, boxData.byteLength);\n                }\n            }\n\n            if (atom instanceof ContainerAtom) {\n                (atom as ContainerAtom).atoms = this.parseAtoms(boxData, (atom as ContainerAtom).containerDataOffset);\n            }\n            atoms.push(atom);\n            this.processAtom(atom);\n            dataOffset = end;\n        }\n        return atoms;\n    }\n\n    private processAtom(atom: Atom): void {\n        switch (atom.type) {\n            case Atom.tkhd:\n                this.lastTrackId = (atom as Tkhd).trackId;\n                break;\n\n            case Atom.avcC:\n                if (this.lastTrackId > 0) {\n                    this.tracks[this.lastTrackId] = new Mp4Track(this.lastTrackId,\n                        Track.TYPE_VIDEO, Track.MIME_TYPE_AVC, atom);\n                }\n                break;\n\n            case Atom.hvcC:\n                if (this.lastTrackId > 0) {\n                    this.tracks[this.lastTrackId] = new Mp4Track(this.lastTrackId,\n                        Track.TYPE_VIDEO, Track.MIME_TYPE_HEVC, atom);\n                }\n                break;\n\n            case Atom.mp4a:\n                if (this.lastTrackId > 0) {\n                    this.tracks[this.lastTrackId] = new Mp4Track(this.lastTrackId,\n                        Track.TYPE_AUDIO, Track.MIME_TYPE_AAC, atom);\n                }\n                break;\n\n            case Atom.sidx:\n                this.checkTrack();\n                (this.tracks[this.lastTrackId] as Mp4Track).setSidxAtom(atom);\n                break;\n\n            case Atom.trun:\n                this.checkTrack();\n                (this.tracks[this.lastTrackId] as Mp4Track).setTrunAtom(atom);\n                break;\n        }\n    }\n\n    private checkTrack(): void {\n        if (this.lastTrackId === 0 || !this.tracks[this.lastTrackId]) {\n            this.lastTrackId = 1;\n            this.tracks[this.lastTrackId] = new Mp4Track(this.lastTrackId,\n                Track.TYPE_UNKNOWN, Track.MIME_TYPE_UNKNOWN, null);\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/mp4-demuxer.ts","import Track from '../track';\nimport { Atom } from './atoms/atom';\nimport Frame from '../frame';\nimport { Sidx } from './atoms/sidx';\nimport { Trun } from './atoms/trun';\n\nexport default class Mp4Track extends Track {\n    public frames: Frame[];\n    private sidx: Sidx;\n    private trun: Trun;\n    private lastPts: number;\n\n    constructor(id: number, type: string, mimeType: string, public referenceAtom: Atom) {\n        super(id, type, mimeType);\n        this.frames = [];\n        this.lastPts = 0;\n    }\n\n     public getFrames(): Frame[] {\n         return this.frames;\n     }\n\n     public setSidxAtom(atom: Atom): void {\n         this.sidx = atom as Sidx;\n         this.lastPts = 1000000 * this.sidx.earliestPresentationTime / this.sidx.timescale;\n     }\n\n     public setTrunAtom(atom: Atom): void {\n         this.trun = atom as Trun;\n         for ( const sample of this.trun.samples) {\n            if (sample.flags) {\n                this.frames.push(new Frame(sample.flags.isSyncFrame ? Frame.IDR_FRAME : Frame.P_FRAME, this.lastPts));\n            }\n            if (sample.duration) {\n                this.lastPts += sample.duration;\n            }\n         }\n     }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/mp4/mp4-track.ts","import BitReader from '../../utils/bit-reader';\nimport PESReader from './pes-reader';\nimport TSTrack from './ts-track';\nimport Track from '../track';\nimport IDemuxer from '../demuxer';\n\nenum CONTAINER_TYPE {\n    UNKNOWN = 1,\n    MPEG_TS,\n    RAW_AAC,\n}\n\nexport default class MpegTSDemuxer implements IDemuxer {\n    private static MPEGTS_SYNC: number = 0x47;\n    private static MPEGTS_PACKET_SIZE: number = 187;\n\n    public tracks: { [id: number] : Track; };\n\n    private data: Uint8Array;\n    private dataOffset: number;\n    private containerType: number;\n    private pmtParsed: boolean;\n    private packetsCount: number;\n    private pmtId: number;\n\n    constructor () {\n        this.containerType = CONTAINER_TYPE.UNKNOWN;\n        this.pmtParsed = false;\n        this.packetsCount = 0;\n        this.pmtId = -1;\n        this.tracks = {};\n    }\n\n    public append(data: Uint8Array): void {\n        if (!this.data || this.data.byteLength === 0 || this.dataOffset >= this.data.byteLength) {\n            this.data = data;\n            this.dataOffset = 0;\n        } else {\n            const newLen: number = this.data.byteLength + data.byteLength;\n            const temp: Uint8Array = new Uint8Array(newLen);\n            temp.set(this.data, 0);\n            temp.set(data, this.data.byteLength);\n            this.data = temp;\n        }\n\n        this.findContainerType();\n\n        if (this.containerType === CONTAINER_TYPE.MPEG_TS) {\n            this.readHeader();\n            this.readSamples();\n        } else {\n            const dataParser: BitReader = new BitReader(this.data);\n            this.tracks[0] = new TSTrack(0, Track.TYPE_AUDIO, Track.MIME_TYPE_AAC,\n                new PESReader(0, PESReader.TS_STREAM_TYPE_AAC));\n            (this.tracks[0] as TSTrack).pes.appendData(false, dataParser);\n        }\n\n        if (this.dataOffset > 0) {\n            this.data = this.data.subarray(this.dataOffset);\n            this.dataOffset = 0;\n        }\n    }\n\n    public end(): void {\n        for (let id in this.tracks) {\n            if (this.tracks.hasOwnProperty(id)) {\n                (this.tracks[id] as TSTrack).pes.flush();\n            }\n        }\n    }\n\n    private resetTracks(): void {\n        for (let id in this.tracks) {\n            if (this.tracks.hasOwnProperty(id)) {\n                (this.tracks[id] as TSTrack).pes.reset();\n            }\n        }\n    }\n\n    private findContainerType(): void {\n        while (this.dataOffset < this.data.byteLength) {\n            if (this.data[this.dataOffset] === MpegTSDemuxer.MPEGTS_SYNC) {\n                this.containerType = CONTAINER_TYPE.MPEG_TS;\n                break;\n            } else if ((this.data.byteLength - this.dataOffset) >= 4) {\n                const dataRead: number = (this.data[this.dataOffset] << 8) | (this.data[this.dataOffset + 1]);\n                if (dataRead === 0x4944 || (dataRead & 0xfff6) === 0xfff0) {\n                    this.containerType = CONTAINER_TYPE.RAW_AAC;\n                    break;\n                }\n            }\n            this.dataOffset++;\n        }\n\n        if (this.containerType === CONTAINER_TYPE.UNKNOWN) {\n            throw new Error('Format not supported');\n        }\n    }\n\n    private readHeader(): void {\n        while (this.dataOffset < this.data.byteLength - 1) {\n            const byteRead: number = this.data[this.dataOffset];\n            this.dataOffset++;\n\n            if (byteRead === MpegTSDemuxer.MPEGTS_SYNC\n                && (this.data.byteLength - this.dataOffset) >= MpegTSDemuxer.MPEGTS_PACKET_SIZE) {\n\n                const packet: Uint8Array = this.data.subarray(this.dataOffset,\n                    this.dataOffset + MpegTSDemuxer.MPEGTS_PACKET_SIZE);\n                this.dataOffset += MpegTSDemuxer.MPEGTS_PACKET_SIZE;\n\n                this.processTSPacket(packet);\n\n                if (this.pmtParsed) {\n                    break;\n                }\n            }\n        }\n    }\n\n    private readSamples(): void {\n        while (this.dataOffset < this.data.byteLength - 1) {\n            const byteRead: number = this.data[this.dataOffset++];\n\n            if (byteRead === MpegTSDemuxer.MPEGTS_SYNC\n                && (this.data.byteLength - this.dataOffset) >= MpegTSDemuxer.MPEGTS_PACKET_SIZE) {\n\n                const packet: Uint8Array = this.data.subarray(this.dataOffset, this.dataOffset\n                    + MpegTSDemuxer.MPEGTS_PACKET_SIZE);\n                this.dataOffset += MpegTSDemuxer.MPEGTS_PACKET_SIZE;\n\n                this.processTSPacket(packet);\n            }\n        }\n    }\n\n    private processTSPacket(packet: Uint8Array): void {\n        this.packetsCount++;\n\n        let packetParser: BitReader = new BitReader(packet);\n        packetParser.skipBits(1);\n\n        const payloadUnitStartIndicator: boolean = (packetParser.readBits(1) !== 0);\n        packetParser.skipBits(1);\n\n        const pid: number = packetParser.readBits(13);\n        const adaptationField: number = (packetParser.readByte() & 0x30) >> 4;\n        if (adaptationField > 1) {\n            length = packetParser.readByte();\n            if (length > 0) {\n                packetParser.skipBytes(length);\n            }\n        }\n        if (adaptationField === 1 || adaptationField === 3) {\n            if (pid === 0) {\n                this.parseProgramId(payloadUnitStartIndicator, packetParser);\n            } else if (pid === this.pmtId) {\n                this.parseProgramTable(payloadUnitStartIndicator, packetParser);\n            } else {\n                const track: TSTrack = this.tracks[pid] as TSTrack;\n                if (track && track.pes) {\n                    track.pes.appendData(payloadUnitStartIndicator, packetParser);\n                }\n            }\n        }\n    }\n\n    private parseProgramId(payloadUnitStartIndicator: boolean, packetParser: BitReader): void {\n        if (payloadUnitStartIndicator) {\n            packetParser.skipBytes(packetParser.readByte());\n        }\n        packetParser.skipBits(27 + 7 * 8);\n        this.pmtId = packetParser.readBits(13);\n    }\n\n    private parseProgramTable(payloadUnitStartIndicator: boolean, packetParser: BitReader): void {\n        if (payloadUnitStartIndicator) {\n            packetParser.skipBytes(packetParser.readByte());\n        }\n\n        packetParser.skipBits(12);\n        const sectionLength: number = packetParser.readBits(12);\n        packetParser.skipBits(4 + 7 * 8);\n        const programInfoLength: number = packetParser.readBits(12);\n        packetParser.skipBytes(programInfoLength);\n        let bytesRemaining: number = sectionLength - 9 - programInfoLength - 4;\n\n        while (bytesRemaining > 0) {\n            const streamType: number = packetParser.readBits(8);\n            packetParser.skipBits(3);\n            const elementaryPid: number = packetParser.readBits(13);\n            packetParser.skipBits(4);\n            const infoLength: number = packetParser.readBits(12);\n            packetParser.skipBytes(infoLength);\n            bytesRemaining -= infoLength + 5;\n            if (!this.tracks[elementaryPid]) {\n                const pes: PESReader = new PESReader(elementaryPid, streamType);\n                this.tracks[elementaryPid] = new TSTrack(elementaryPid, '', '', pes);\n            }\n        }\n        this.pmtParsed = true;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/ts/mpegts-demuxer.ts","import BitReader from '../../../utils/bit-reader';\nimport PayloadReader from './payload-reader';\nimport Frame from '../../frame';\nimport Track from '../../track';\n\nexport default class AdtsReader extends PayloadReader {\n    private static ADTS_HEADER_SIZE: number = 5;\n    private static ADTS_SYNC_SIZE: number = 2;\n    private static ADTS_CRC_SIZE: number = 2;\n\n    private static STATE_FIND_SYNC: number = 1;\n    private static STATE_READ_HEADER: number = 2;\n    private static STATE_READ_FRAME: number = 3;\n\n    private static ADTS_SAMPLE_RATES: number[] = [96000, 88200, 64000, 48000,\n        44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n\n    public channels: number;\n    public sampleRate: number;\n    public frameDuration: number;\n    public currentFrameSize: number;\n\n    private state: number;\n\n    constructor () {\n        super();\n        this.channels = 0;\n        this.sampleRate = 0;\n        this.frameDuration = 0;\n        this.currentFrameSize = 0;\n        this.state = AdtsReader.STATE_FIND_SYNC;\n        this.dataOffset = 0;\n    }\n\n    public getMimeType(): string {\n        return Track.MIME_TYPE_AAC;\n    }\n\n    public consumeData(pts: number): void {\n        if (!this.dataBuffer) {\n            return;\n        }\n        if (pts >= 0) {\n            this.timeUs = pts;\n        }\n\n        if (this.firstTimestamp === -1) {\n            this.firstTimestamp = this.timeUs;\n        }\n\n        while (this.dataOffset < this.dataBuffer.byteLength) {\n            if (this.state === AdtsReader.STATE_FIND_SYNC) {\n                this.findNextSync();\n            } else if (this.state === AdtsReader.STATE_READ_HEADER) {\n                if (this.dataBuffer.byteLength - this.dataOffset < (AdtsReader.ADTS_HEADER_SIZE +\n                    AdtsReader.ADTS_SYNC_SIZE)) {\n                    break;\n                }\n                this.parseAACHeader();\n            } else if (this.state === AdtsReader.STATE_READ_FRAME) {\n                if ((this.dataBuffer.byteLength - this.dataOffset) < (AdtsReader.ADTS_SYNC_SIZE +\n                    AdtsReader.ADTS_HEADER_SIZE + this.currentFrameSize)) {\n                    break;\n                }\n                this.frames.push(new Frame(Frame.IDR_FRAME, this.timeUs));\n                this.timeUs = this.timeUs + this.frameDuration;\n\n                this.dataOffset += (AdtsReader.ADTS_SYNC_SIZE + AdtsReader.ADTS_HEADER_SIZE +\n                    this.currentFrameSize);\n                this.state = AdtsReader.STATE_FIND_SYNC;\n            }\n        }\n\n        this.dataBuffer = this.dataBuffer.subarray(this.dataOffset);\n        this.dataOffset = 0;\n    }\n\n    private findNextSync(): void {\n        const limit: number = this.dataBuffer.byteLength - 1;\n        for (let i: number = this.dataOffset; i < limit; i++) {\n            const dataRead: number = (((this.dataBuffer[i]) << 8) | (this.dataBuffer[i + 1]));\n            if ((dataRead & 0xfff6) === 0xfff0) {\n                this.dataOffset = i;\n                if (this.dataOffset < this.dataBuffer.byteLength) {\n                    this.state = AdtsReader.STATE_READ_HEADER;\n                }\n                return;\n            }\n        }\n\n        this.dataOffset = this.dataBuffer.byteLength;\n    }\n\n    private parseAACHeader(): void {\n        const aacHeaderParser: BitReader = new BitReader(this.dataBuffer.subarray(this.dataOffset,\n            this.dataOffset + AdtsReader.ADTS_SYNC_SIZE + AdtsReader.ADTS_HEADER_SIZE));\n\n        aacHeaderParser.skipBits(15);\n        const hasCrc: boolean = !aacHeaderParser.readBool();\n        aacHeaderParser.skipBits(2);\n        const sampleRateIndex: number = aacHeaderParser.readBits(4);\n        if (sampleRateIndex < AdtsReader.ADTS_SAMPLE_RATES.length) {\n            this.sampleRate = AdtsReader.ADTS_SAMPLE_RATES[sampleRateIndex];\n        } else {\n            this.sampleRate = sampleRateIndex;\n        }\n\n        this.frameDuration = (1000000 * 1024) / this.sampleRate;\n\n        aacHeaderParser.skipBits(1);\n        this.channels = aacHeaderParser.readBits(3);\n\n        aacHeaderParser.skipBits(4);\n        this.currentFrameSize = aacHeaderParser.readBits(13) - AdtsReader.ADTS_HEADER_SIZE\n            - AdtsReader.ADTS_SYNC_SIZE;\n\n        if (hasCrc) {\n            this.currentFrameSize -= AdtsReader.ADTS_CRC_SIZE;\n        }\n\n        this.state = AdtsReader.STATE_READ_FRAME;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/ts/payload/adts-reader.ts","import BitReader from '../../../utils/bit-reader';\nimport PayloadReader from './payload-reader';\nimport Frame from '../../frame';\nimport SPSParser from '../../../codecs/h264/sps-parser';\nimport {Sps} from '../../../codecs/h264/nal-units';\nimport Track from '../../track';\n\nenum NAL_UNIT_TYPE {\n    SLICE = 1,\n    DPA,\n    DPB,\n    DPC,\n    IDR,\n    SEI,\n    SPS,\n    PPS,\n    AUD,\n    END_SEQUENCE,\n    END_STREAM\n}\n\nenum SLICE_TYPE {\n    P = 0,\n    B,\n    I,\n    SP,\n    SI\n}\n\nexport class Fraction {\n    constructor(public num: number, public den: number) {\n        // do nothing\n    }\n}\n\nexport default class H264Reader extends PayloadReader {\n    public sps: Sps;\n    public pendingBytes: number;\n\n    constructor() {\n        super();\n        this.pendingBytes = 0;\n    }\n\n    public getMimeType(): string {\n        return Track.MIME_TYPE_AVC;\n    }\n\n    public flush(pts: number): void {\n        if (this.dataBuffer.byteLength > 0) {\n            this.consumeData(pts);\n\n            if (this.dataBuffer.byteLength > 0) {\n                const offset: number = this.findNextNALUnit(0);\n                if (offset < this.dataBuffer.byteLength) {\n                    this.processNALUnit(offset, this.dataBuffer.byteLength, this.dataBuffer[offset + 3] & 0x1F);\n                }\n            }\n        }\n    }\n\n    public consumeData(pts: number): void {\n        if (!this.dataBuffer) {\n            return;\n        }\n        if (this.firstTimestamp === -1) {\n            this.timeUs = this.firstTimestamp = pts;\n        }\n\n        // process any possible reminding data\n        let nextNalUnit: number = 0;\n        let offset: number = 0;\n        if (this.pendingBytes) {\n            nextNalUnit = this.findNextNALUnit(this.pendingBytes);\n            if (nextNalUnit < this.dataBuffer.byteLength) {\n                this.processNALUnit(0, nextNalUnit, this.dataBuffer[offset + 3] & 0x1F);\n                offset = nextNalUnit;\n            }\n            this.pendingBytes = 0;\n        } else {\n            offset = this.findNextNALUnit(0);\n        }\n\n        // process next nal units in the buffer\n        if (pts !== -1) {\n            this.timeUs = pts;\n        }\n\n        if (this.dataBuffer.byteLength > 0) {\n            while (nextNalUnit < this.dataBuffer.byteLength) {\n                nextNalUnit = this.findNextNALUnit(offset + 3);\n                if (nextNalUnit < this.dataBuffer.byteLength) {\n                    this.processNALUnit(offset, nextNalUnit, this.dataBuffer[offset + 3] & 0x1F);\n                    offset = nextNalUnit;\n                }\n            }\n            this.dataBuffer = this.dataBuffer.subarray(offset);\n            this.pendingBytes = this.dataBuffer.byteLength;\n        }\n    }\n\n    private findNextNALUnit(index: number): number {\n        const limit: number = this.dataBuffer.byteLength - 3;\n        for (let i: number = index; i < limit; i++) {\n            if (this.dataBuffer[i] === 0 && this.dataBuffer[i + 1] === 0 && this.dataBuffer[i + 2] === 1) {\n                return i;\n            }\n        }\n\n        return this.dataBuffer.byteLength;\n    }\n\n    private processNALUnit(start: number, limit: number, nalType: number): void {\n        if (nalType === NAL_UNIT_TYPE.SPS) {\n            this.parseSPSNALUnit(start, limit);\n        } else if (nalType === NAL_UNIT_TYPE.AUD) {\n            this.parseAUDNALUnit(start, limit);\n        } else if (nalType === NAL_UNIT_TYPE.IDR) {\n            this.addNewFrame(SLICE_TYPE.I);\n        } else if (nalType === NAL_UNIT_TYPE.SEI) {\n            this.parseSEINALUnit(start, limit);\n        } else if (nalType === NAL_UNIT_TYPE.SLICE) {\n            this.parseSliceNALUnit(start, limit);\n        }\n    }\n\n    private parseSPSNALUnit(start: number, limit: number): void {\n        this.sps = SPSParser.parseSPS(this.dataBuffer.subarray(start + 4, limit));\n    }\n\n    private skipScalingList(parser: BitReader, size: number): void {\n        let lastScale: number = 8;\n        let nextScale: number = 8;\n        for (let i: number = 0; i < size; i++) {\n            if (nextScale !== 0) {\n                const deltaScale: number = parser.readSEG();\n                nextScale = (lastScale + deltaScale + 256) % 256;\n            }\n            if (nextScale !== 0) {\n                lastScale = nextScale;\n            }\n        }\n    }\n\n    private parseSEINALUnit(start: number, limit: number): void {\n        let seiParser: BitReader = new BitReader(this.dataBuffer.subarray(start, limit));\n        seiParser.skipBytes(4);\n\n        while (seiParser.remainingBytes() > 0) {\n            const data: number = seiParser.readByte();\n            if (data !== 0xFF) {\n                break;\n            }\n        }\n\n        // parse payload size\n        while (seiParser.remainingBytes() > 0) {\n            const data: number = seiParser.readByte();\n            if (data !== 0xFF) {\n                break;\n            }\n        }\n\n        seiParser.destroy();\n        seiParser = null;\n    }\n\n    private parseSliceNALUnit(start: number, limit: number): void {\n        let sliceParser: BitReader = new BitReader(this.dataBuffer.subarray(start, limit));\n        sliceParser.skipBytes(4);\n        sliceParser.readUEG();\n        const sliceType: number = sliceParser.readUEG();\n        this.addNewFrame(sliceType);\n        sliceParser.destroy();\n        sliceParser = null;\n    }\n\n    private parseAUDNALUnit(start: number, limit: number): void {\n        // const audParser: BitReader = new BitReader(this.dataBuffer.subarray(start, limit));\n        // audParser.skipBytes(4);\n    }\n\n    private getSliceTypeName(sliceType: number): string {\n        if (sliceType > 4) {\n            sliceType = sliceType - 5;\n        }\n        switch (sliceType) {\n            case SLICE_TYPE.B:\n                return Frame.B_FRAME;\n            case SLICE_TYPE.I:\n                return Frame.IDR_FRAME;\n            case SLICE_TYPE.P:\n                return Frame.P_FRAME;\n            case SLICE_TYPE.SI:\n                return 'SI';\n            case SLICE_TYPE.SP:\n                return 'SP';\n            default:\n                return 'Unknown';\n        }\n    }\n\n    private getNALUnitName(nalType: number): string {\n        switch (nalType) {\n            case NAL_UNIT_TYPE.SLICE:\n                return 'SLICE';\n            case NAL_UNIT_TYPE.SEI:\n                return 'SEI';\n            case NAL_UNIT_TYPE.PPS:\n                return 'PPS';\n            case NAL_UNIT_TYPE.SPS:\n                return 'SPS';\n            case NAL_UNIT_TYPE.AUD:\n                return 'AUD';\n            case NAL_UNIT_TYPE.IDR:\n                return 'IDR';\n            case NAL_UNIT_TYPE.END_SEQUENCE:\n                return 'END SEQUENCE';\n            case NAL_UNIT_TYPE.END_STREAM:\n                return 'END STREAM';\n            default:\n                return 'Unknown';\n        }\n    }\n\n     private addNewFrame(frameType: number): void {\n        this.frames.push(new Frame(this.getSliceTypeName(frameType), this.timeUs));\n     }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/ts/payload/h264-reader.ts","import PayloadReader from './payload-reader';\nimport Track from '../../track';\n\nexport default class ID3Reader extends PayloadReader {\n\n    public getMimeType(): string {\n        return Track.MIME_TYPE_ID3;\n    }\n\n    public consumeData(pts: number): void {\n        // do nothing\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/ts/payload/id3-reader.ts","import ByteParserUtils from '../../../utils/byte-parser-utils';\nimport PayloadReader from './payload-reader';\nimport Frame from '../../frame';\n\nexport default class MpegReader extends PayloadReader {\n    private static STATE_FIND_SYNC: number = 1;\n    private static STATE_READ_HEADER: number = 2;\n    private static STATE_READ_FRAME: number = 3;\n\n    private static HEADER_SIZE: number = 4;\n\n    private static SAMPLING_RATE_V1: number[] = [44100, 48000, 32000];\n    private static BITRATE_V1_L1: number[] =\n      [32, 64, 96, 128, 160, 192, 224, 256, 288, 320, 352, 384, 416, 448];\n    private static BITRATE_V2_L1: number[] =\n      [32, 48, 56, 64, 80, 96, 112, 128, 144, 160, 176, 192, 224, 256];\n    private static BITRATE_V1_L2: number[] =\n      [32, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 384];\n    private static BITRATE_V1_L3: number[] =\n      [32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320];\n    private static BITRATE_V2: number[] =\n      [8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144, 160];\n    private static MIME_TYPE_BY_LAYER: string[] =\n        ['mpeg-L1', 'mpeg-L2', 'mpeg'];\n\n    public channels: number;\n    public bitrate: number;\n    public sampleRate: number;\n    public samplesPerFrame: number;\n    public currentFrameSize: number;\n    public frameDuration: number;\n    public mimeType: string;\n\n    private state: number;\n\n    constructor () {\n        super();\n        this.channels = 0;\n        this.sampleRate = 0;\n        this.samplesPerFrame = 0;\n        this.currentFrameSize = 0;\n        this.frameDuration = 0;\n        this.mimeType = MpegReader.MIME_TYPE_BY_LAYER[2];\n        this.state = MpegReader.STATE_FIND_SYNC;\n        this.dataOffset = 0;\n    }\n\n    public getMimeType(): string {\n        return 'audio/' + this.mimeType;\n    }\n\n    public consumeData(pts: number): void {\n        if (!this.dataBuffer) {\n            return;\n        }\n        if (pts >= 0) {\n            this.timeUs = pts;\n        }\n        if (this.firstTimestamp === -1) {\n            this.firstTimestamp = this.timeUs;\n        }\n        while (this.dataOffset < this.dataBuffer.byteLength) {\n            if (this.state ===  MpegReader.STATE_FIND_SYNC) {\n                this.findHeader();\n            } else if (this.state === MpegReader.STATE_READ_HEADER) {\n                if (!this.readHeader()) {\n                    break;\n                }\n            } else if (this.state === MpegReader.STATE_READ_FRAME) {\n                const len: number = this.readFrame();\n                if (len === 0) {\n                    break;\n                }\n                this.dataOffset += len;\n            }\n        }\n        this.dataBuffer = this.dataBuffer.subarray(this.dataOffset);\n        this.dataOffset = 0;\n    }\n\n    private findHeader(): void {\n        const limit: number = this.dataBuffer.byteLength - 1;\n        let lastByteWasFF: boolean = false;\n        for (let i: number = this.dataOffset; i < limit; i++) {\n            const isFF: boolean = ((this.dataBuffer[i]) & 0xFF) === 0XFF;\n            const found: boolean = lastByteWasFF && ((this.dataBuffer[i] & 0xE0) === 0xE0);\n            lastByteWasFF = isFF;\n\n            if (found) {\n                lastByteWasFF = false;\n                this.state = MpegReader.STATE_READ_HEADER;\n                this.dataOffset = i - 1;\n                return;\n            }\n        }\n\n        this.dataOffset = this.dataBuffer.byteLength;\n    }\n\n    private readHeader(): boolean {\n        if (this.dataBuffer.byteLength - this.dataOffset < MpegReader.HEADER_SIZE) {\n            return false;\n        }\n\n        const header: number = ByteParserUtils.parseUint32(this.dataBuffer, this.dataOffset);\n        if (!this.parseHeader(header)) {\n            this.state = MpegReader.STATE_FIND_SYNC;\n            this.dataOffset++;\n        } else {\n            this.state = MpegReader.STATE_READ_FRAME;\n        }\n        return true;\n    }\n\n    private parseHeader(header: number): boolean {\n        if ((header & 0xFFE00000) >>> 0 !== 0xFFE00000) {\n            console.log(header);\n            return false;\n        }\n\n        const version: number = (header >>> 19) & 3;\n        if (version === 1) {\n            return false;\n        }\n\n        const layer: number = (header >>> 17) & 3;\n        if (layer === 0) {\n            return false;\n        }\n\n        const bitrateIndex: number = (header >>> 12) & 15;\n        const sampleRateIndex: number = (header >>> 10) & 3;\n        if (sampleRateIndex >= MpegReader.SAMPLING_RATE_V1.length) {\n            return false;\n        }\n\n        const sampleRate: number = MpegReader.SAMPLING_RATE_V1[sampleRateIndex];\n        if (version === 2) {\n            this.sampleRate = sampleRate / 2;\n        } else if (version === 0) {\n            this.sampleRate = sampleRate / 4;\n        } else {\n            this.sampleRate = sampleRate;\n        }\n\n        const padding: number = (header >>> 9) & 1;\n        this.channels = ((header >> 6) & 3) === 3 ? 1 : 2;\n        this.mimeType = MpegReader.MIME_TYPE_BY_LAYER[3 - layer];\n        if (layer === 3) {\n            this.bitrate = (version === 3) ? MpegReader.BITRATE_V1_L1[bitrateIndex - 1] :\n                MpegReader.BITRATE_V2_L1[bitrateIndex - 1];\n            this.samplesPerFrame = 384;\n            this.currentFrameSize = Math.floor(this.samplesPerFrame * (this.bitrate * 1000 / 8) / this.sampleRate) + padding;\n        } else {\n            if (version === 3) {\n                this.bitrate = (layer === 2) ? MpegReader.BITRATE_V1_L2[bitrateIndex - 1] :\n                    MpegReader.BITRATE_V1_L3[bitrateIndex - 1];\n                this.samplesPerFrame = 1152;\n                this.currentFrameSize = Math.floor(this.samplesPerFrame * (this.bitrate * 1000 / 8) / this.sampleRate) + padding;\n            } else {\n                // Version 2 or 2.5.\n                this.bitrate = MpegReader.BITRATE_V2[bitrateIndex - 1];\n                this.samplesPerFrame = (layer === 1) ? 576 : 1152;\n                this.currentFrameSize = Math.floor(this.samplesPerFrame * (this.bitrate * 1000 / 8) / this.sampleRate) + padding;\n            }\n        }\n        this.frameDuration = (1000000 * this.samplesPerFrame) / this.sampleRate;\n\n        return true;\n    }\n\n    private readFrame(): number {\n        if ((this.dataBuffer.byteLength - this.dataOffset) < (MpegReader.HEADER_SIZE + this.currentFrameSize)) {\n            return 0;\n        }\n        this.state = MpegReader.STATE_FIND_SYNC;\n        this.frames.push(new Frame(Frame.IDR_FRAME, this.timeUs));\n        this.timeUs = this.timeUs + this.frameDuration;\n        return MpegReader.HEADER_SIZE + this.currentFrameSize;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/ts/payload/mpeg-reader.ts","import PayloadReader from './payload-reader';\n\nexport default class UnknownReader extends PayloadReader {\n\n    public getMimeType(): string {\n        return 'unknown';\n    }\n\n    public consumeData(pts: number): void {\n        // do nothing\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/ts/payload/unknown-reader.ts","import BitReader from '../../utils/bit-reader';\nimport PayloadReader from './payload/payload-reader';\nimport UnknownReader from './payload/unknown-reader';\nimport AdtsReader from './payload/adts-reader';\nimport H264Reader from './payload/h264-reader';\nimport ID3Reader from './payload/id3-reader';\nimport MpegReader from './payload/mpeg-reader';\n\nexport default class PESReader {\n    public static TS_STREAM_TYPE_AAC: number = 0x0F;\n    public static TS_STREAM_TYPE_H264: number = 0x1B;\n    public static TS_STREAM_TYPE_ID3: number = 0x15;\n    public static TS_STREAM_TYPE_MPA: number = 0x03;\n    public static TS_STREAM_TYPE_MPA_LSF: number = 0x04;\n    public static TS_STREAM_TYPE_METADATA: number = 0x06;\n\n    public payloadReader: PayloadReader;\n\n    private lastPts: number;\n    private pesLength: number;\n\n    constructor(public pid: number, public type: number) {\n        this.pid = pid;\n        this.type = type;\n        this.lastPts = -1;\n        this.pesLength = 0;\n\n        if (type === PESReader.TS_STREAM_TYPE_AAC) {\n            this.payloadReader = new AdtsReader();\n        } else if (type === PESReader.TS_STREAM_TYPE_H264) {\n            this.payloadReader = new H264Reader();\n        } else if (type === PESReader.TS_STREAM_TYPE_ID3) {\n            this.payloadReader = new ID3Reader();\n        } else if (type === PESReader.TS_STREAM_TYPE_MPA || type === PESReader.TS_STREAM_TYPE_MPA_LSF) {\n            this.payloadReader = new MpegReader();\n        } else if (type === PESReader.TS_STREAM_TYPE_METADATA) {\n            // do nothing\n        } else {\n            this.payloadReader = new UnknownReader();\n        }\n    }\n\n    public static ptsToTimeUs(pts: number): number {\n        return (pts * 1000000) / 90000;\n    }\n\n    public appendData(payloadUnitStartIndicator: boolean, packet: BitReader): void {\n        if (payloadUnitStartIndicator) {\n            if (this.payloadReader) {\n                this.payloadReader.consumeData(this.lastPts);\n            }\n            this.parsePESHeader(packet);\n        }\n\n        if (this.payloadReader) {\n            this.payloadReader.append(packet);\n        }\n    }\n\n    public parsePESHeader(packet: BitReader): void {\n        packet.skipBytes(7);\n        const timingFlags: number = packet.readByte();\n        if (timingFlags & 0xC0) {\n            packet.skipBytes(1);\n            let pts: number;\n            pts = (packet.readByte() & 0x0E) << 27 |\n                (packet.readByte() & 0xFF) << 20 |\n                (packet.readByte() & 0xFE) << 12 |\n                (packet.readByte() & 0xFF) << 5;\n            const val: number = packet.readByte();\n            pts |= (val & 0xFE) >>> 3;\n            pts = pts << 2;\n            pts += (val & 0x06) >>> 1;\n            this.lastPts = PESReader.ptsToTimeUs(pts);\n        }\n    }\n\n    public reset(): void {\n        if (this.payloadReader) {\n            this.payloadReader.reset();\n        }\n    }\n\n    public flush(): void {\n        if (this.payloadReader) {\n            this.payloadReader.flush(this.lastPts);\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/ts/pes-reader.ts","import Track from '../track';\nimport Frame from '../frame';\nimport PESReader from './pes-reader';\n\nexport default class TSTrack extends Track {\n    constructor(id: number, type: string, mimeType: string, public pes: PESReader) {\n        super(id, type, mimeType);\n    }\n\n    public getType(): string {\n        const mimeType: string = this.getMimeType();\n        if (mimeType) {\n            const pos: number = mimeType.indexOf('/');\n            if (pos > 0) {\n                return mimeType.substring(0, pos);\n            }\n        }\n        return '';\n    }\n\n    public getMimeType(): string {\n        if (this.pes && this.pes.payloadReader) {\n            return this.pes.payloadReader.getMimeType();\n        }\n        return super.getMimeType();\n    }\n\n    public getDuration(): number {\n        if (this.pes && this.pes.payloadReader) {\n            return this.pes.payloadReader.getDuration();\n        }\n        return 0;\n    }\n\n    public getFrames(): Frame[] {\n        if (this.pes && this.pes.payloadReader) {\n            return this.pes.payloadReader.frames;\n        }\n        return [];\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/demuxer/ts/ts-track.ts"],"sourceRoot":""}